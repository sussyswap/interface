{"version":3,"sources":["../../lib/ajv.ts","../../../../lib/compile/codegen/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../../../lib/compile/util.ts","../../../lib/vocabularies/code.ts","../../../lib/compile/names.ts","../../../lib/runtime/ucs2length.ts","../../../../lib/compile/validate/index.ts","../../../lib/compile/errors.ts","../../../../lib/compile/codegen/code.ts","../../../../lib/compile/validate/dataType.ts","../../../lib/compile/resolve.ts","../../../lib/compile/index.ts","../../../lib/runtime/equal.ts","../../../../lib/compile/codegen/scope.ts","../../../lib/compile/rules.ts","../../../../lib/compile/validate/applicability.ts","../node_modules/fast-deep-equal/index.js","../../../lib/runtime/validation_error.ts","../../../lib/compile/ref_error.ts","../../../../lib/vocabularies/applicator/additionalItems.ts","../../../../lib/vocabularies/applicator/items.ts","../../../../lib/vocabularies/applicator/additionalProperties.ts","../../lib/core.ts","../../../../lib/compile/validate/boolSchema.ts","../../../../lib/compile/validate/defaults.ts","../../../../lib/compile/validate/keyword.ts","../../../../lib/compile/validate/subschema.ts","../node_modules/@sussyswap/widgets/node_modules/json-schema-traverse/index.js","../../../lib/runtime/uri.ts","../../../src/util.ts","../../../src/regexps-uri.ts","../../../src/regexps-iri.ts","../../../node_modules/punycode/punycode.es6.js","../../../src/uri.ts","../../../src/schemes/http.ts","../../../src/schemes/https.ts","../../../src/schemes/ws.ts","../../../src/schemes/wss.ts","../../../src/schemes/mailto.ts","../../../src/schemes/urn.ts","../../../src/schemes/urn-uuid.ts","../../../src/index.ts","../../../lib/vocabularies/draft7.ts","../../../../lib/vocabularies/core/index.ts","../../../../lib/vocabularies/core/id.ts","../../../../lib/vocabularies/core/ref.ts","../../../../lib/vocabularies/validation/index.ts","../../../../lib/vocabularies/validation/limitNumber.ts","../../../../lib/vocabularies/validation/multipleOf.ts","../../../../lib/vocabularies/validation/limitLength.ts","../../../../lib/vocabularies/validation/pattern.ts","../../../../lib/vocabularies/validation/limitProperties.ts","../../../../lib/vocabularies/validation/required.ts","../../../../lib/vocabularies/validation/limitItems.ts","../../../../lib/vocabularies/validation/uniqueItems.ts","../../../../lib/vocabularies/validation/const.ts","../../../../lib/vocabularies/validation/enum.ts","../../../../lib/vocabularies/applicator/index.ts","../../../../lib/vocabularies/applicator/prefixItems.ts","../../../../lib/vocabularies/applicator/items2020.ts","../../../../lib/vocabularies/applicator/contains.ts","../../../../lib/vocabularies/applicator/dependencies.ts","../../../../lib/vocabularies/applicator/propertyNames.ts","../../../../lib/vocabularies/applicator/properties.ts","../../../../lib/vocabularies/applicator/patternProperties.ts","../../../../lib/vocabularies/applicator/not.ts","../../../../lib/vocabularies/applicator/anyOf.ts","../../../../lib/vocabularies/applicator/oneOf.ts","../../../../lib/vocabularies/applicator/allOf.ts","../../../../lib/vocabularies/applicator/if.ts","../../../../lib/vocabularies/applicator/thenElse.ts","../../../../lib/vocabularies/format/index.ts","../../../../lib/vocabularies/format/format.ts","../../../lib/vocabularies/metadata.ts","../../../../lib/vocabularies/discriminator/index.ts","../../../../lib/vocabularies/discriminator/types.ts"],"names":["META_SCHEMA_ID","nodes","this","module","exports","strings","raw","slice","Object","freeze","defineProperties","value","rules","gen","default","e","t","err","i","types","dataType","COERCIBLE","data","checkDataTypes","schema","ref","sch","isJSONType","equal","a","b","constructor","length","keys","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key","def","l","boolError","$async","_","traverse","opts","cb","_traverse","pre","post","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","parentSchema","keyIndex","arrayKeywords","propsKeywords","prop","replace","keywords","allKeys","skipKeywords","additionalItems","items","contains","additionalProperties","propertyNames","not","if","then","else","allOf","anyOf","oneOf","$defs","definitions","properties","patternProperties","dependencies","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","pattern","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","sets","xl","x","join","str","o","undefined","split","pop","shift","toLowerCase","toUpperCase","obj","setInterval","target","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","merge","PCT_ENCODED$","subexp","SUB_DELIMS$$","RESERVED$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","QUERY$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","buildExps","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","result","mapDomain","string","parts","ucs2decode","output","counter","charCodeAt","extra","push","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","n","bias","basic","lastIndexOf","j","index","oldi","w","baseMinusT","out","splice","fromCodePoint","encode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","toUnicode","test","toASCII","punycode","SCHEMES","chr","c","newStr","il","parseInt","substr","c2","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","pctDecChars","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","pctEncChar","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","fragment","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","matches","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","zone","reverse","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","longestZeroFields","reduce","acc","field","lastLongest","sort","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","options","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","parse","_recomposeAuthority","uriTokens","$1","$2","RDS1","RDS2","RDS3","RDS5","im","Error","s","serialize","authority","charAt","absolutePath","removeDotSegments","relative","tolerant","baseURI","relativeURI","schemelessOptions","assign","resolveComponents","uri","typeOf","uriA","uriB","ESCAPE","handler","secure","http","isSecure","wsComponents","resourceName","ws","O","ATEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","unescapeComponent","body","addr","toArray","toAddr","atIdx","localPart","domain","name","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","uuid","https","wss","mailto","urn","draft7Vocabularies","core","getValidate","validation","missing","tag"],"mappings":"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","file":"static/js/7.ac4536db.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\n//# sourceMappingURL=ajv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    it.dataTypes = it.dataTypes.filter((t) => includesType(types, t));\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map"],"sourceRoot":""}