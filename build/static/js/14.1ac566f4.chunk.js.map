{"version":3,"sources":["../../../../src/util/metric.ts","../../../../src/providers/cache-node.ts","../../../../src/util/log.ts","../../../../src/providers/caching-gas-provider.ts","../../../../src/util/chains.ts","../../../../src/providers/caching-token-list-provider.ts","../../../../src/util/addresses.ts","../../../../src/util/amounts.ts","../../../../src/util/routes.ts","../../../../../../src/types/v3/factories/IERC20Metadata__factory.ts","../../../../src/providers/token-provider.ts","../../../../src/providers/caching-token-provider.ts","../../../../src/providers/gas-price-provider.ts","../../../../src/providers/eip-1559-gas-price-provider.ts","../../../../../../src/types/other/factories/ITokenValidator__factory.ts","../../../../src/providers/token-validator-provider.ts","../../../../../../src/types/v2/factories/IUniswapV2Pair__factory.ts","../../../../../src/providers/v2/pool-provider.ts","../../../../../src/providers/v3/gas-data-provider.ts","../../../../../../src/types/v3/factories/IUniswapV3PoolState__factory.ts","../../../../../src/providers/v3/pool-provider.ts","../../../../../../src/types/other/factories/Erc20__factory.ts","../../../../src/util/methodParameters.ts","../../../../src/util/unsupported-tokens.ts","../../../../src/routers/router.ts","../../../../../../src/routers/alpha-router/gas-models/gas-model.ts","../../../../src/util/gas-factory-helpers.ts","../../../../../../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../../../../../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../../../../../src/routers/alpha-router/functions/best-swap-route.ts","../../../../../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../../../../../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../../../../../../src/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.ts","../../../../../../src/routers/alpha-router/quoters/base-quoter.ts","../../../../../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../../../../../src/routers/alpha-router/functions/compute-all-routes.ts","../../../../../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../../../../../src/routers/alpha-router/quoters/v2-quoter.ts","../../../../src/providers/simulation-provider.ts","../../../../../../src/routers/alpha-router/quoters/v3-quoter.ts","../../../../../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../../../../src/routers/alpha-router/alpha-router.ts","../../../../../src/routers/alpha-router/config.ts","../../../../../../src/types/other/factories/Permit2__factory.ts","../../../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../../../src/providers/legacy-gas-price-provider.ts","../../../../src/providers/multicall-provider.ts","../../../../../../src/types/v3/factories/UniswapInterfaceMulticall__factory.ts","../../../../src/providers/multicall-uniswap-provider.ts","../../../../src/providers/on-chain-gas-price-provider.ts","../../../../../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts","../../../../../../src/types/v3/factories/IQuoterV2__factory.ts","../../../../src/providers/on-chain-quote-provider.ts","../../../../../../src/types/other/factories/SwapRouter02__factory.ts","../../../../src/providers/swap-router-provider.ts","../../../../../../../src/providers/caching/route/model/cache-mode.ts","../../../../src/providers/uri-subgraph-provider.ts","../../../../../../../src/providers/caching/route/model/cached-route.ts","../../../../../../../src/providers/caching/route/model/cached-routes.ts","../../../../../../src/providers/caching/route/route-caching-provider.ts","../../../../../src/providers/v2/caching-pool-provider.ts","../../../../../src/providers/v2/caching-subgraph-provider.ts","../../../../../src/providers/v2/quote-provider.ts","../../../../../src/providers/v2/static-subgraph-provider.ts","../../../../../src/providers/v2/subgraph-provider-with-fallback.ts","../../../../../src/providers/v2/subgraph-provider.ts","../../../../../src/providers/v3/caching-pool-provider.ts","../../../../../src/providers/v3/caching-subgraph-provider.ts","../../../../../src/providers/v3/static-subgraph-provider.ts","../../../../../src/providers/v3/subgraph-provider-with-fallback.ts","../../../../../src/providers/v3/subgraph-provider.ts","../node_modules/@sussyswap/widgets/dist/clientSideSmartOrderRouter-09863302.js","../../src/index.ts","../../src/types.ts","../../src/createRequestBody.ts","../node_modules/@sussyswap/widgets/node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/jsutils/inspect.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/jsutils/defineInspect.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/jsutils/invariant.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/language/ast.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/language/visitor.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/language/printer.mjs","../node_modules/@sussyswap/widgets/node_modules/graphql/language/blockString.mjs"],"names":["ChainId","name","type","UNSUPPORTED_TOKENS","n","a","e","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","transformSwapRouteToGetQuoteResult","_ref","_step","quote","quoteGasAdjusted","route","routeString","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","_ref$trade","trade","tradeType","inputAmount","outputAmount","routeResponse","_iterator","subRoute","_amount","amount","_quote","tokenPath","protocol","Protocol","V3","pools","curRoute","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","isExactInput","quotient","edgeAmountOut","push","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","_pools","pairs","_curRoute","_i","_nextPool","_tokenIn","_tokenOut","_edgeAmountIn","_edgeAmountOut","reserve0","reserve1","token","currency","wrapped","state","QuoteState","SUCCESS","data","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","AUTO_ROUTER_SUPPORTED_CHAINS","values","Number","isInteger","isAutoRouterSupportedChain","Boolean","includes","routersCache","WeakMap","getRouter","provider","v2SubgraphProvider","routers","get","cached","FUJI","StaticV2SubgraphProvider","router","AlphaRouter","multicall2Provider","onChainQuoteProvider","set","getQuoteResult","_x","_x2","_x3","_getQuoteResult","this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","routerConfig","amountRaw","tokenInIsNative","tokenOutIsNative","currencyIn","currencyOut","baseCurrency","quoteCurrency","wrap","_context","prev","SwapRouterNativeAssets","nativeOnChain","Token","CurrencyAmount","fromRawAmount","JSBI","BigInt","sent","abrupt","INITIALIZED","NOT_FOUND","routeAmountsToString","stop","getClientSideQuoteResult","_x4","_x5","_getClientSideQuoteResult","_callee2","_ref2","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol","_context2","Error","concat","FormData","form_data_1","default","map","nodejsCustomInspectSymbol","for","_typeof","obj","inspect","formatValue","seenValues","JSON","stringify","previouslySeenValues","indexOf","customInspectFn","String","getCustomFn","customValue","array","Math","min","remaining","items","join","formatArray","tag","replace","getObjectTag","properties","formatObject","formatObjectValue","defineInspect","classObject","fn","toJSON","condition","message","invariant","isNode","maybeNode","kind","Location","startToken","endToken","start","end","line","column","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","freeze","getVisitFn","visitor","isLeaving","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","print","ast","root","visitorKeys","stack","inArray","index","edits","node","parent","path","ancestors","newRoot","isEdited","pop","clone","_i2","_Object$keys2","k","editOffset","ii","editKey","editValue","splice","_visitorKeys$node$kin","result","visitFn","visit","printDocASTReducer","definitions","op","operation","varDefs","variableDefinitions","directives","selectionSet","variable","defaultValue","block","selections","_ref3","alias","args","prefix","argsLine","indent","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","printBlockString","_ref11","_ref12","_ref13","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","_maybeArray$filter$jo","separator","x","maybeString","str","isMultiline","some"],"mappings":"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AM,UACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,KACN,KAAM,YAGV,KAAM,OACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,UACN,KAAM,YAGV,KAAM,OACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,KACN,KAAM,YAGV,KAAM,OACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,WACN,KAAM,YAGV,KAAM,OACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,OACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,YAGV,KAAM,WACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,mBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,oBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,kBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,YAGV,KAAM,UACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,GACN,KAAM,SAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,KACN,KAAM,YAGV,KAAM,OACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,WACN,QAAS,CACP,CACE,aAAc,QACd,KAAM,GACN,KAAM,UAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,UACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,cACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,qBACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,KAAM,aACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,KACN,KAAM,YAGV,KAAM,OACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,OACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,YAGV,KAAM,SACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,IACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,YAGV,KAAM,SACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,uBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,uBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,KACN,KAAM,YAGV,KAAM,OACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,OACN,KAAM,UAGV,KAAM,OACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,SACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GAC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QAAS,CACP,CACE,aAAc,SACd,KAAM,iBACN,KAAM,UAER,CACE,aAAc,QACd,KAAM,iBACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,oCACN,KAAM,WAER,CACE,aAAc,OACd,KAAM,cACN,KAAM,SAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,MACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,2BACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,2BACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,eACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,eACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,OACN,KAAM,SAER,CACE,aAAc,SACd,KAAM,mBACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,yBACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,6BACN,KAAM,UAER,CACE,aAAc,QACd,KAAM,cACN,KAAM,SAER,CACE,aAAc,OACd,KAAM,WACN,KAAM,SAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,QACd,KAAM,eACN,KAAM,UAGV,KAAM,aACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,QACd,KAAM,OACN,KAAM,UAGV,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,iBACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,eACN,KAAM,UAER,CACE,aAAc,UACd,KAAM,wBACN,KAAM,WAER,CACE,aAAc,UACd,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M,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,eACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,2BACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,qBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,mCACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,QAAS,UAElB,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,oBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,iBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,iBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,wBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,aACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,mBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,QAAS,UAElB,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,iBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,YACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,yBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,cACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,cACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,MACR,KAAM,iBACN,SAAU,GACV,QACE,wFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,uBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,uBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,iBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,qBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,yBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,kBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,iBACN,SAAU,GACV,QACE,yFACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,kBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,QACR,KAAM,gBACN,SAAU,GACV,QACE,0FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,UACR,KAAM,yBACN,SAAU,GACV,QACE,4FACF,KAAM,CAAC,UAET,CACE,QAAS,EACT,QAAS,6CACT,OAAQ,OACR,KAAM,8BACN,SAAU,GACV,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CN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,mBACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,yBACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,gBACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,iBACN,KAAM,SAER,CACE,OAAQ,CACN,CACE,aAAc,UACdD,KAAM,oBACNC,KAAM,YAGV,KAAM,mBACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,SACdD,KAAM,aACNC,KAAM,WAGV,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACdD,KAAM,UACNC,KAAM,YAGV,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,SACd,KAAM,WACN,KAAM,UAER,CACE,SAAS,EACT,aAAc,SACdD,KAAM,WACNC,KAAM,WAGV,KAAM,oBACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,SACd,KAAM,aACN,KAAM,UAER,CACE,SAAS,EACT,aAAc,SACdD,KAAM,QACNC,KAAM,WAGV,KAAM,SACN,KAAM,SAER,CACE,WAAW,EACX,OAAQ,CACN,CACE,SAAS,EACT,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACd,KAAM,OACN,KAAM,WAER,CACE,SAAS,EACT,aAAc,UACdD,KAAM,OACNC,KAAM,YAGV,KAAM,6BACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,mBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNA,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,GACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,aACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,QACNC,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACdD,KAAM,aACN,KAAM,WAGV,KAAM,UACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,SACdA,KAAM,WACN,KAAM,WAGV,KAAM,mBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,OACN,KAAM,YAGV,KAAM,4BACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,aAAc,+CACdA,KAAM,YACN,KAAM,YAGV,KAAM,WACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,GACN,KAAM,YAGV,KAAM,cACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNC,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,aACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,QACN,KAAM,WAGV,aAAc,4CACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,aAAc,wCACd,KAAM,cACN,KAAM,SAER,CACE,aAAc,QACdD,KAAM,YACN,KAAM,UAGV,KAAM,SACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,aACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,QACN,KAAM,WAGV,aAAc,0CACd,KAAM,UACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,aAAc,yCACd,KAAM,eACN,KAAM,SAER,CACE,aAAc,QACdA,KAAM,YACN,KAAM,UAGV,KAAM,SACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,YAGV,aAAc,6CACd,KAAM,YACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,YAGV,aAAc,+CACd,KAAM,SACN,KAAM,SAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,YAGV,aAAc,qDACd,KAAM,kBACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,QACdA,KAAM,YACN,KAAM,UAGV,KAAM,qBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,YAGV,aAAc,+CACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,YAGV,aAAc,oDACd,KAAM,SACN,KAAM,SAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,YAGV,aAAc,uDACd,KAAM,kBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,QACdA,KAAM,YACN,KAAM,UAGV,KAAM,qBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,YAGV,aAAc,6CACd,KAAM,YACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,YAGV,aAAc,+CACd,KAAM,SACN,KAAM,SAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,YAGV,aAAc,qDACd,KAAM,kBACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,oBACN,KAAM,UAER,CACE,aAAc,QACdA,KAAM,YACN,KAAM,UAGV,KAAM,4BACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,YAGV,aAAc,+CACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,YAGV,aAAc,oDACd,KAAM,SACN,KAAM,SAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,YAGV,aAAc,uDACd,KAAM,kBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,oBACN,KAAM,UAER,CACE,aAAc,QACdA,KAAM,YACN,KAAM,UAGV,KAAM,4BACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,OACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,YAGV,aAAc,uDACdA,KAAM,kBACN,KAAM,YAGV,KAAM,eACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,OACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,KACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,QACN,KAAM,YAGV,KAAM,eACN,QAAS,GA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WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,YAGV,aACE,2DACF,KAAM,SACN,KAAM,UAGV,KAAM,0BACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,UAER,CACE,aAAc,UACd,KAAM,oBACN,KAAM,YAGV,aACE,2DACF,KAAM,SACN,KAAM,UAGV,KAAM,0BACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,oBACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,0BACNH,KAAM,UAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,gBAAiB,aACjB,KAAM,aAIG,GAA4B,4CAUtC,OAVsC,iDAEvC,WACE,OAAO,IAAI,SAAM,UAAU,MAC5B,qBACD,SACE,EACA,GAEA,OAAO,IAAI,YAAS,EAAS,GAAM,OACpC,EAVsC,GACvB,OAAM,GCjJxB,IAAM,GAAO,CACX,CACE,OAAQ,CACN,CACE,aAAc,QACd,KAAM,OACN,KAAM,SAER,CACE,aAAc,UACdD,KAAM,WACN,KAAM,YAGV,KAAM,kBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,YACd,KAAM,wBACN,KAAM,aAER,CACE,aAAc,WACd,KAAM,8BACN,KAAM,YAER,CACE,aAAc,UACd,KAAM,cACNC,KAAM,YAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,UAER,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X,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACNH,KAAM,YAGV,gBAAiB,aACjB,KAAM,eAER,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNA,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdD,KAAM,QACN,KAAM,YAGV,KAAM,aACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdA,KAAM,QACN,KAAM,YAGV,KAAM,qBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdA,KAAM,QACN,KAAM,YAGV,KAAM,qBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdA,KAAM,QACN,KAAM,YAGV,KAAM,6BACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,QACdA,KAAM,OACN,KAAM,UAGV,KAAM,sBACN,QAAS,CACP,CACE,aAAc,QACd,KAAM,SACNC,KAAM,UAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,YACd,KAAM,UACN,KAAM,aAER,CACE,aAAc,SACd,KAAM,wBACN,KAAM,UAER,CACE,aAAc,SACdD,KAAM,aACN,KAAM,WAGV,KAAM,sBACN,QAAS,GACT,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,QACd,KAAM,OACN,KAAM,SAER,CACE,aAAc,SACd,KAAM,wBACN,KAAM,UAER,CACE,aAAc,SACdA,KAAM,aACN,KAAM,WAGV,KAAM,sBACN,QAAS,GACT,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,QACd,KAAM,OACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,YAGV,aAAc,wCACdA,KAAM,SACN,KAAM,UAGV,KAAM,aACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,UAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,oBACN,KAAM,YAGV,aAAc,8CACdD,KAAM,SACN,KAAM,UAGV,KAAM,mBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,QACd,KAAM,OACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,YAGV,aAAc,yCACdD,KAAM,SACN,KAAM,UAGV,KAAM,cACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,UAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,kBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,oBACN,KAAM,YAGV,aAAc,+CACdD,KAAM,SACN,KAAM,UAGV,KAAM,oBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,UACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNA,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNA,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,SACN,KAAM,YAGV,KAAM,kBACN,QAAS,CACP,CACE,aAAc,oCACd,KAAM,GACNC,KAAM,UAGV,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,YAGV,aAAc,iDACdD,KAAM,SACN,KAAM,UAGV,KAAM,oBACN,QAAS,CACP,CACE,aAAc,QACd,KAAM,SACNC,KAAM,UAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,UAER,CACE,aAAc,QACd,KAAM,YACN,KAAM,SAER,CACE,aAAc,QACd,KAAM,YACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,aAAc,oCACdD,KAAM,SACN,KAAM,UAGV,KAAM,OACN,QAAS,CACP,CACE,aAAc,QACd,KAAM,SACNC,KAAM,UAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,oBACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,OACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,OACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdD,KAAM,OACN,KAAM,YAGV,KAAM,YACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,UACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,kBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACNA,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,QACN,KAAM,YAGV,KAAM,OACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,YACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,IACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,IACN,KAAM,YAGV,KAAM,aACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,IACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,IACN,KAAM,YAGV,KAAM,oBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,IACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,IACN,KAAM,YAGV,KAAM,+BACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,IACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,IACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,IACN,KAAM,YAGV,KAAM,wBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,eACN,KAAM,WAER,CACE,aAAc,YACd,KAAM,OACN,KAAM,aAER,CACE,aAAc,UACdA,KAAM,KACN,KAAM,YAGV,KAAM,2BACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,YACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,WAER,CACE,aAAc,YACd,KAAM,OACN,KAAM,aAER,CACE,aAAc,UACdD,KAAM,KACN,KAAM,YAGV,KAAM,2BACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACNC,KAAM,YAGV,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,WAER,CACE,aAAc,UACdD,KAAM,YACN,KAAM,YAGV,KAAM,aACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,gBACN,KAAM,YAGV,KAAM,aACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,eACN,KAAM,YAGV,KAAM,oBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,QACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,eACN,KAAM,YAGV,KAAM,oBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAM,eACN,KAAM,UAER,CACE,aAAc,SACd,KAAM,eACN,KAAM,UAER,CACE,aAAc,QACdA,KAAM,QACN,KAAM,UAGV,KAAM,wBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,gBACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,YACN,KAAM,YAGV,KAAM,cACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACdA,KAAM,gBACN,KAAM,YAGV,KAAM,cACN,QAAS,GACT,gBAAiB,UACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,gBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACdA,KAAM,eACN,KAAM,YAGV,KAAM,qBACN,QAAS,GACT,gBAAiB,UACjB,KAAM,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","file":"static/js/14.1ac566f4.chunk.js","sourcesContent":["import { log } from './log';\r\nexport var MetricLoggerUnit;\r\n(function (MetricLoggerUnit) {\r\n    MetricLoggerUnit[\"Seconds\"] = \"Seconds\";\r\n    MetricLoggerUnit[\"Microseconds\"] = \"Microseconds\";\r\n    MetricLoggerUnit[\"Milliseconds\"] = \"Milliseconds\";\r\n    MetricLoggerUnit[\"Bytes\"] = \"Bytes\";\r\n    MetricLoggerUnit[\"Kilobytes\"] = \"Kilobytes\";\r\n    MetricLoggerUnit[\"Megabytes\"] = \"Megabytes\";\r\n    MetricLoggerUnit[\"Gigabytes\"] = \"Gigabytes\";\r\n    MetricLoggerUnit[\"Terabytes\"] = \"Terabytes\";\r\n    MetricLoggerUnit[\"Bits\"] = \"Bits\";\r\n    MetricLoggerUnit[\"Kilobits\"] = \"Kilobits\";\r\n    MetricLoggerUnit[\"Megabits\"] = \"Megabits\";\r\n    MetricLoggerUnit[\"Gigabits\"] = \"Gigabits\";\r\n    MetricLoggerUnit[\"Terabits\"] = \"Terabits\";\r\n    MetricLoggerUnit[\"Percent\"] = \"Percent\";\r\n    MetricLoggerUnit[\"Count\"] = \"Count\";\r\n    MetricLoggerUnit[\"BytesPerSecond\"] = \"Bytes/Second\";\r\n    MetricLoggerUnit[\"KilobytesPerSecond\"] = \"Kilobytes/Second\";\r\n    MetricLoggerUnit[\"MegabytesPerSecond\"] = \"Megabytes/Second\";\r\n    MetricLoggerUnit[\"GigabytesPerSecond\"] = \"Gigabytes/Second\";\r\n    MetricLoggerUnit[\"TerabytesPerSecond\"] = \"Terabytes/Second\";\r\n    MetricLoggerUnit[\"BitsPerSecond\"] = \"Bits/Second\";\r\n    MetricLoggerUnit[\"KilobitsPerSecond\"] = \"Kilobits/Second\";\r\n    MetricLoggerUnit[\"MegabitsPerSecond\"] = \"Megabits/Second\";\r\n    MetricLoggerUnit[\"GigabitsPerSecond\"] = \"Gigabits/Second\";\r\n    MetricLoggerUnit[\"TerabitsPerSecond\"] = \"Terabits/Second\";\r\n    MetricLoggerUnit[\"CountPerSecond\"] = \"Count/Second\";\r\n    MetricLoggerUnit[\"None\"] = \"None\";\r\n})(MetricLoggerUnit || (MetricLoggerUnit = {}));\r\nexport class IMetric {\r\n}\r\nexport class MetricLogger extends IMetric {\r\n    constructor(context) {\r\n        super();\r\n        this.log = log.child(context || {});\r\n    }\r\n    setProperty(key, value) {\r\n        this.log = this.log.child({ [key]: value });\r\n    }\r\n    putDimensions(dimensions) {\r\n        this.log = this.log.child(dimensions);\r\n    }\r\n    putMetric(key, value, unit) {\r\n        this.log.info({ key, value, unit }, `[Metric]: ${key}: ${value} | ${unit ? unit : ''}`);\r\n    }\r\n}\r\nexport let metric = new MetricLogger();\r\nexport const setGlobalMetric = (_metric) => {\r\n    metric = _metric;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0cmljLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvbWV0cmljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFFNUIsTUFBTSxDQUFOLElBQVksZ0JBNEJYO0FBNUJELFdBQVksZ0JBQWdCO0lBQzFCLHVDQUFtQixDQUFBO0lBQ25CLGlEQUE2QixDQUFBO0lBQzdCLGlEQUE2QixDQUFBO0lBQzdCLG1DQUFlLENBQUE7SUFDZiwyQ0FBdUIsQ0FBQTtJQUN2QiwyQ0FBdUIsQ0FBQTtJQUN2QiwyQ0FBdUIsQ0FBQTtJQUN2QiwyQ0FBdUIsQ0FBQTtJQUN2QixpQ0FBYSxDQUFBO0lBQ2IseUNBQXFCLENBQUE7SUFDckIseUNBQXFCLENBQUE7SUFDckIseUNBQXFCLENBQUE7SUFDckIseUNBQXFCLENBQUE7SUFDckIsdUNBQW1CLENBQUE7SUFDbkIsbUNBQWUsQ0FBQTtJQUNmLG1EQUErQixDQUFBO0lBQy9CLDJEQUF1QyxDQUFBO0lBQ3ZDLDJEQUF1QyxDQUFBO0lBQ3ZDLDJEQUF1QyxDQUFBO0lBQ3ZDLDJEQUF1QyxDQUFBO0lBQ3ZDLGlEQUE2QixDQUFBO0lBQzdCLHlEQUFxQyxDQUFBO0lBQ3JDLHlEQUFxQyxDQUFBO0lBQ3JDLHlEQUFxQyxDQUFBO0lBQ3JDLHlEQUFxQyxDQUFBO0lBQ3JDLG1EQUErQixDQUFBO0lBQy9CLGlDQUFhLENBQUE7QUFDZixDQUFDLEVBNUJXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUE0QjNCO0FBRUQsTUFBTSxPQUFnQixPQUFPO0NBTTVCO0FBT0QsTUFBTSxPQUFPLFlBQWEsU0FBUSxPQUFPO0lBR3ZDLFlBQVksT0FBdUI7UUFDakMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFTSxXQUFXLENBQUMsR0FBVyxFQUFFLEtBQWM7UUFDNUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRU0sYUFBYSxDQUFDLFVBQWtDO1FBQ3JELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLFNBQVMsQ0FBQyxHQUFXLEVBQUUsS0FBYSxFQUFFLElBQXVCO1FBQ2xFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUNYLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFDcEIsYUFBYSxHQUFHLEtBQUssS0FBSyxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FDbkQsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxJQUFJLE1BQU0sR0FBWSxJQUFJLFlBQVksRUFBRSxDQUFDO0FBRWhELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRTtJQUNsRCxNQUFNLEdBQUcsT0FBTyxDQUFDO0FBQ25CLENBQUMsQ0FBQyJ9","export class NodeJSCache {\r\n    constructor(nodeCache) {\r\n        this.nodeCache = nodeCache;\r\n    }\r\n    async get(key) {\r\n        return this.nodeCache.get(key);\r\n    }\r\n    async set(key, value) {\r\n        return this.nodeCache.set(key, value);\r\n    }\r\n    async has(key) {\r\n        return this.nodeCache.has(key);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGUtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQU8sV0FBVztJQUN0QixZQUFvQixTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO0lBQUcsQ0FBQztJQUU1QyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQVc7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBSSxHQUFHLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXLEVBQUUsS0FBUTtRQUM3QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=","/* eslint-disable */\r\nclass NullLogger {\r\n    constructor() {\r\n        this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using \"setGlobalLogger\"';\r\n        this.src = true;\r\n    }\r\n    addStream(_stream) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    addSerializers(_serializers) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    child(_options, _simple) {\r\n        return this;\r\n    }\r\n    reopenFileStreams() {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    level(_value) {\r\n        return;\r\n    }\r\n    levels(_name, _value) {\r\n        return;\r\n    }\r\n    trace(..._rest) {\r\n        return true;\r\n    }\r\n    debug(..._rest) {\r\n        return true;\r\n    }\r\n    info(..._rest) {\r\n        return true;\r\n    }\r\n    warn(..._rest) {\r\n        return true;\r\n    }\r\n    error(..._rest) {\r\n        return true;\r\n    }\r\n    fatal(..._rest) {\r\n        return true;\r\n    }\r\n    addListener(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    on(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    once(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    removeListener(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    off(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    removeAllListeners(_event) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    setMaxListeners(_n) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    getMaxListeners() {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    listeners(_event) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    rawListeners(_event) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    emit(_event, ..._args) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    listenerCount(_event) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    prependListener(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    prependOnceListener(_event, _listener) {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n    eventNames() {\r\n        throw new Error(this.ERROR_MESSAGE);\r\n    }\r\n}\r\nexport let log = new NullLogger();\r\nexport const setGlobalLogger = (_log) => {\r\n    log = _log;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUlwQixNQUFNLFVBQVU7SUFBaEI7UUFDVSxrQkFBYSxHQUNuQixpRkFBaUYsQ0FBQztRQXlCcEYsUUFBRyxHQUFHLElBQUksQ0FBQztJQW9HYixDQUFDO0lBNUhDLFNBQVMsQ0FBQyxPQUFzQjtRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsY0FBYyxDQUFDLFlBQWdDO1FBQzdDLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxLQUFLLENBQUMsUUFBZ0IsRUFBRSxPQUFpQjtRQUN2QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxpQkFBaUI7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBR0QsS0FBSyxDQUFDLE1BQVk7UUFDaEIsT0FBTztJQUNULENBQUM7SUFJRCxNQUFNLENBQUMsS0FBVyxFQUFFLE1BQVk7UUFDOUIsT0FBTztJQUNULENBQUM7SUFPRCxLQUFLLENBQUMsR0FBRyxLQUFVO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsSUFBSSxDQUFDLEdBQUcsS0FBVTtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxJQUFJLENBQUMsR0FBRyxLQUFVO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsS0FBSyxDQUFDLEdB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","import { log } from '../util/log';\r\n/**\r\n * Provider for getting gas price, with functionality for caching the results.\r\n *\r\n * @export\r\n * @class CachingV3SubgraphProvider\r\n */\r\nexport class CachingGasStationProvider {\r\n    /**\r\n     * Creates an instance of CachingGasStationProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param gasPriceProvider The provider to use to get the gas price when not in the cache.\r\n     * @param cache Cache instance to hold cached pools.\r\n     */\r\n    constructor(chainId, gasPriceProvider, cache) {\r\n        this.chainId = chainId;\r\n        this.gasPriceProvider = gasPriceProvider;\r\n        this.cache = cache;\r\n        this.GAS_KEY = (chainId) => `gasPrice-${chainId}`;\r\n    }\r\n    async getGasPrice() {\r\n        const cachedGasPrice = await this.cache.get(this.GAS_KEY(this.chainId));\r\n        if (cachedGasPrice) {\r\n            log.info({ cachedGasPrice }, `Got gas station price from local cache: ${cachedGasPrice.gasPriceWei}.`);\r\n            return cachedGasPrice;\r\n        }\r\n        log.info('Gas station price local cache miss.');\r\n        const gasPrice = await this.gasPriceProvider.getGasPrice();\r\n        await this.cache.set(this.GAS_KEY(this.chainId), gasPrice);\r\n        return gasPrice;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1nYXMtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2NhY2hpbmctZ2FzLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFLbEM7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQXlCO0lBR3BDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNsQixnQkFBbUMsRUFDbkMsS0FBdUI7UUFGckIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNsQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQW1CO1FBQ25DLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBWHpCLFlBQU8sR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRSxDQUFDLFlBQVksT0FBTyxFQUFFLENBQUM7SUFZM0QsQ0FBQztJQUVHLEtBQUssQ0FBQyxXQUFXO1FBQ3RCLE1BQU0sY0FBYyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUV4RSxJQUFJLGNBQWMsRUFBRTtZQUNsQixHQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsY0FBYyxFQUFFLEVBQ2xCLDJDQUEyQyxjQUFjLENBQUMsV0FBVyxHQUFHLENBQ3pFLENBQUM7WUFFRixPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUNoRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzRCxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRTNELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiJ9","//@ts-nocheck\r\nimport { Ether, NativeCurrency, Token } from '@uniswap/sdk-core';\r\nexport var ChainId;\r\n(function (ChainId) {\r\n    ChainId[ChainId[\"FUJI\"] = 43113] = \"FUJI\";\r\n    ChainId[ChainId[\"AVAX\"] = 43114] = \"AVAX\";\r\n})(ChainId || (ChainId = {}));\r\n// WIP: Gnosis, Moonbeam\r\nexport const SUPPORTED_CHAINS = [\r\n    ChainId.FUJI,\r\n    ChainId.AVAX,\r\n    // Gnosis and Moonbeam don't yet have contracts deployed yet\r\n];\r\nexport const V2_SUPPORTED = [];\r\nexport const HAS_L1_FEE = [\r\n    ChainId.FUJI,\r\n    ChainId.AVAX\r\n];\r\nexport const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = [];\r\nexport const ID_TO_CHAIN_ID = (id) => {\r\n    switch (id) {\r\n        case 43113:\r\n            return ChainId.FUJI;\r\n        case 43114:\r\n            return ChainId.AVAX;\r\n        default:\r\n            throw new Error(`Unknown chain id: ${id}`);\r\n    }\r\n};\r\nexport var ChainName;\r\n(function (ChainName) {\r\n    ChainName[\"FUJI\"] = \"avalanche-fuji\";\r\n    ChainName[\"AVAX\"] = \"avalanche-mainnet\";\r\n})(ChainName || (ChainName = {}));\r\nexport var NativeCurrencyName;\r\n(function (NativeCurrencyName) {\r\n    // Strings match input for CLI\r\n    NativeCurrencyName[\"AVAX\"] = \"AVAX\";\r\n})(NativeCurrencyName || (NativeCurrencyName = {}));\r\nexport const NATIVE_NAMES_BY_ID = {\r\n    [ChainId.AVAX]: [\r\n        'AVAX',\r\n        'Aalanche',\r\n        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\r\n    ],\r\n    [ChainId.FUJI]: [\r\n        'AVAX',\r\n        'Aalanche',\r\n        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\r\n    ],\r\n};\r\nexport const NATIVE_CURRENCY = {\r\n    [ChainId.FUJI]: NativeCurrencyName.AVAX,\r\n    [ChainId.AVAX]: NativeCurrencyName.AVAX,\r\n};\r\nexport const ID_TO_NETWORK_NAME = (id) => {\r\n    switch (id) {\r\n        case 43113:\r\n            return ChainName.FUJI;\r\n        case 43114:\r\n            return ChainName.AVAX;\r\n        default:\r\n            throw new Error(`Unknown chain id: ${id}`);\r\n    }\r\n};\r\nexport const CHAIN_IDS_LIST = Object.values(ChainId).map((c) => c.toString());\r\nexport const ID_TO_PROVIDER = (id) => {\r\n    switch (id) {\r\n        case ChainId.FUJI:\r\n            return process.env.JSON_RPC_PROVIDER_FUJI;\r\n        case ChainId.AVAX:\r\n            return process.env.JSON_RPC_PROVIDER_AVAX;\r\n        default:\r\n            throw new Error(`Chain id: ${id} not supported`);\r\n    }\r\n};\r\nexport const WRAPPED_NATIVE_CURRENCY = {\r\n    [ChainId.AVAX]: new Token(ChainId.AVAX, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX'),\r\n    [ChainId.FUJI]: new Token(ChainId.FUJI, '0xd00ae08403B9bbb9124bB305C09058E32C39A48c', 18, 'WAVAX', 'Wrapped AVAX'),\r\n};\r\nfunction isAvax(chainId) {\r\n    return chainId === ChainId.AVAX || chainId === ChainId.FUJI;\r\n}\r\nclass AvaxNativeCurrency extends NativeCurrency {\r\n    equals(other) {\r\n        return other.isNative && other.chainId === this.chainId;\r\n    }\r\n    get wrapped() {\r\n        if (!isAvax(this.chainId))\r\n            throw new Error('Not avax');\r\n        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[this.chainId];\r\n        if (nativeCurrency) {\r\n            return nativeCurrency;\r\n        }\r\n        throw new Error(`Does not support this chain ${this.chainId}`);\r\n    }\r\n    constructor(chainId) {\r\n        if (!isAvax(chainId))\r\n            throw new Error('Not avax');\r\n        super(chainId, 18, 'AVAX', 'Avalanche');\r\n    }\r\n}\r\nexport class ExtendedEther extends Ether {\r\n    get wrapped() {\r\n        if (this.chainId in WRAPPED_NATIVE_CURRENCY)\r\n            return WRAPPED_NATIVE_CURRENCY[this.chainId];\r\n        throw new Error('Unsupported chain ID');\r\n    }\r\n    static onChain(chainId) {\r\n        var _a;\r\n        return ((_a = this._cachedExtendedEther[chainId]) !== null && _a !== void 0 ? _a : (this._cachedExtendedEther[chainId] = new ExtendedEther(chainId)));\r\n    }\r\n}\r\nExtendedEther._cachedExtendedEther = {};\r\nconst cachedNativeCurrency = {};\r\nexport function nativeOnChain(chainId) {\r\n    if (cachedNativeCurrency[chainId] != undefined)\r\n        return cachedNativeCurrency[chainId];\r\n    else if (isAvax(chainId))\r\n        cachedNativeCurrency[chainId] = new AvaxNativeCurrency(chainId);\r\n    else\r\n        cachedNativeCurrency[chainId] = ExtendedEther.onChain(chainId);\r\n    return cachedNativeCurrency[chainId];\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhaW5zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvY2hhaW5zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWE7QUFDYixPQUFPLEVBQVksS0FBSyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUczRSxNQUFNLENBQU4sSUFBWSxPQUdYO0FBSEQsV0FBWSxPQUFPO0lBQ2pCLHlDQUFZLENBQUE7SUFDWix5Q0FBWSxDQUFBO0FBQ2QsQ0FBQyxFQUhXLE9BQU8sS0FBUCxPQUFPLFFBR2xCO0FBRUQsd0JBQXdCO0FBQ3hCLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFjO0lBQ3pDLE9BQU8sQ0FBQyxJQUFJO0lBQ1osT0FBTyxDQUFDLElBQUk7SUFDWiw0REFBNEQ7Q0FDN0QsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxFQUMzQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHO0lBQ3hCLE9BQU8sQ0FBQyxJQUFJO0lBQ1osT0FBTyxDQUFDLElBQUk7Q0FDYixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQUcsRUFFbkQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVUsRUFBVyxFQUFFO0lBQ3BELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxLQUFLO1lBQ1IsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3RCLEtBQUssS0FBSztZQUNSLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQztRQUN0QjtZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDOUM7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLENBQU4sSUFBWSxTQUdYO0FBSEQsV0FBWSxTQUFTO0lBQ25CLG9DQUF1QixDQUFBO0lBQ3ZCLHVDQUEwQixDQUFBO0FBQzVCLENBQUMsRUFI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","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { Token } from '@uniswap/sdk-core';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { log } from '../util/log';\r\nimport { metric, MetricLoggerUnit } from '../util/metric';\r\nexport class CachingTokenListProvider {\r\n    /**\r\n     * Creates an instance of CachingTokenListProvider.\r\n     * Token metadata (e.g. symbol and decimals) generally don't change so can be cached indefinitely.\r\n     *\r\n     * @param chainId The chain id to use.\r\n     * @param tokenList The token list to get the tokens from.\r\n     * @param tokenCache Cache instance to hold cached tokens.\r\n     */\r\n    constructor(chainId, tokenList, tokenCache) {\r\n        this.tokenCache = tokenCache;\r\n        this.CACHE_KEY = (tokenInfo) => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;\r\n        this.chainId = chainId;\r\n        this.tokenList = tokenList;\r\n        this.chainToTokenInfos = _.reduce(this.tokenList.tokens, (result, tokenInfo) => {\r\n            const chainId = tokenInfo.chainId.toString();\r\n            if (!result[chainId]) {\r\n                result[chainId] = [];\r\n            }\r\n            result[chainId].push(tokenInfo);\r\n            return result;\r\n        }, {});\r\n        this.chainSymbolToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, 'symbol'));\r\n        this.chainAddressToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, (tokenInfo) => tokenInfo.address.toLowerCase()));\r\n    }\r\n    static async fromTokenListURI(chainId, tokenListURI, tokenCache) {\r\n        const now = Date.now();\r\n        const tokenList = await this.buildTokenList(tokenListURI);\r\n        metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\r\n        return new CachingTokenListProvider(chainId, tokenList, tokenCache);\r\n    }\r\n    static async buildTokenList(tokenListURI) {\r\n        log.info(`Getting tokenList from ${tokenListURI}.`);\r\n        const response = await axios.get(tokenListURI);\r\n        log.info(`Got tokenList from ${tokenListURI}.`);\r\n        const { data: tokenList, status } = response;\r\n        if (status != 200) {\r\n            log.error({ response }, `Unabled to get token list from ${tokenListURI}.`);\r\n            throw new Error(`Unable to get token list from ${tokenListURI}`);\r\n        }\r\n        return tokenList;\r\n    }\r\n    static async fromTokenList(chainId, tokenList, tokenCache) {\r\n        const now = Date.now();\r\n        const tokenProvider = new CachingTokenListProvider(chainId, tokenList, tokenCache);\r\n        metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\r\n        return tokenProvider;\r\n    }\r\n    async getTokens(_addresses) {\r\n        const addressToToken = {};\r\n        const symbolToToken = {};\r\n        for (const address of _addresses) {\r\n            const token = await this.getTokenByAddress(address);\r\n            if (!token) {\r\n                continue;\r\n            }\r\n            addressToToken[address.toLowerCase()] = token;\r\n            if (!token.symbol) {\r\n                continue;\r\n            }\r\n            symbolToToken[token.symbol.toLowerCase()] = token;\r\n        }\r\n        return {\r\n            getTokenByAddress: (address) => addressToToken[address.toLowerCase()],\r\n            getTokenBySymbol: (symbol) => symbolToToken[symbol.toLowerCase()],\r\n            getAllTokens: () => {\r\n                return Object.values(addressToToken);\r\n            },\r\n        };\r\n    }\r\n    async getTokenBySymbol(_symbol) {\r\n        let symbol = _symbol;\r\n        // We consider ETH as a regular ERC20 Token throughout this package. We don't use the NativeCurrency object from the sdk.\r\n        // When we build the calldata for swapping we insert wrapping/unwrapping as needed.\r\n        if (_symbol == 'ETH') {\r\n            symbol = 'WETH';\r\n        }\r\n        if (!this.chainSymbolToTokenInfo[this.chainId.toString()]) {\r\n            return undefined;\r\n        }\r\n        const tokenInfo = this.chainSymbolToTokenInfo[this.chainId.toString()][symbol];\r\n        if (!tokenInfo) {\r\n            return undefined;\r\n        }\r\n        const token = await this.buildToken(tokenInfo);\r\n        return token;\r\n    }\r\n    async getTokenByAddress(address) {\r\n        if (!this.chainAddressToTokenInfo[this.chainId.toString()]) {\r\n            return undefined;\r\n        }\r\n        const tokenInfo = this.chainAddressToTokenInfo[this.chainId.toString()][address.toLowerCase()];\r\n        if (!tokenInfo) {\r\n            return undefined;\r\n        }\r\n        const token = await this.buildToken(tokenInfo);\r\n        return token;\r\n    }\r\n    async buildToken(tokenInfo) {\r\n        const cacheKey = this.CACHE_KEY(tokenInfo);\r\n        const cachedToken = await this.tokenCache.get(cacheKey);\r\n        if (cachedToken) {\r\n            return cachedToken;\r\n        }\r\n        const token = new Token(this.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\r\n        await this.tokenCache.set(cacheKey, token);\r\n        return token;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUUxQyxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBR3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDbEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBc0IxRCxNQUFNLE9BQU8sd0JBQXdCO0lBZ0JuQzs7Ozs7OztPQU9HO0lBQ0gsWUFDRSxPQUF5QixFQUN6QixTQUFvQixFQUNaLFVBQXlCO1FBQXpCLGVBQVUsR0FBVixVQUFVLENBQWU7UUF4QjNCLGNBQVMsR0FBRyxDQUFDLFNBQW9CLEVBQUUsRUFBRSxDQUMzQyxvQkFBb0IsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFDckQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUNqQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQzNELFNBQVMsQ0FBQyxRQUNaLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUM7UUFxQnpDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTNCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFDckIsQ0FB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","import { Token } from '@uniswap/sdk-core';\r\nimport { ChainId, NETWORKS_WITH_SAME_UNISWAP_ADDRESSES } from './chains';\r\nexport const FUJI_V3_CORE_FACTORY_ADDRESSES = '0x1Fa488afcfA004E19B469217485F3F101630c0EC';\r\nexport const FUJI_QUOTER_ADDRESSES = '0xF78bd03e610b99f9866E696c45C9C401A4f09f86';\r\nexport const FUJI_MULTICALL_ADDRESS = '0x40976897eCcFdD92316ACDfA1FFa0598008eBa6c';\r\nexport const FUJI_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = '0x8675baf0c873d3e5F0141d5dEC45d354C30f435F';\r\nexport const FUJI_SWAP_ROUTER_02_ADDRESS = '0x66E10904D143d866aE57c7C18D534028B4066B88';\r\nexport const FUJI_V3_MIGRATOR_ADDRESS = '0xDC13bd834bA376234AAe89A1a8986e9CeBD1e935';\r\nexport const V3_CORE_FACTORY_ADDRESSES = {\r\n    [ChainId.FUJI]: FUJI_V3_CORE_FACTORY_ADDRESSES,\r\n    // TODO: Gnosis + Moonbeam contracts to be deployed\r\n};\r\nexport const QUOTER_V2_ADDRESSES = {\r\n    [ChainId.FUJI]: FUJI_QUOTER_ADDRESSES,\r\n    // TODO: Gnosis + Moonbeam contracts to be deployed\r\n};\r\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES = {};\r\nexport const UNISWAP_MULTICALL_ADDRESSES = {\r\n    [ChainId.FUJI]: FUJI_MULTICALL_ADDRESS,\r\n    // TODO: Gnosis + Moonbeam contracts to be deployed\r\n};\r\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId) => {\r\n    if (chainId == ChainId.FUJI) {\r\n        return FUJI_SWAP_ROUTER_02_ADDRESS;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\nexport function constructSameAddressMap(address) {\r\n    return NETWORKS_WITH_SAME_UNISWAP_ADDRESSES.reduce((memo, chainId) => {\r\n        memo[chainId] = address;\r\n        return memo;\r\n    }, {});\r\n}\r\nexport const WETH9 = {\r\n    [ChainId.FUJI]: new Token(ChainId.FUJI, '0xd00ae08403B9bbb9124bB305C09058E32C39A48c', 18, 'WAVAX', 'Wrapped AVAX')\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUcxQyxPQUFPLEVBQUUsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRXpFLE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUN6Qyw0Q0FBNEMsQ0FBQTtBQUM5QyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FDaEMsNENBQTRDLENBQUE7QUFDOUMsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQ2pDLDRDQUE0QyxDQUFBO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLHlDQUF5QyxHQUNwRCw0Q0FBNEMsQ0FBQTtBQUM5QyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FDdEMsNENBQTRDLENBQUE7QUFDOUMsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQ25DLDRDQUE0QyxDQUFBO0FBRzlDLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFlO0lBQ25ELENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLDhCQUE4QjtJQUU5QyxtREFBbUQ7Q0FDcEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFlO0lBQzdDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLHFCQUFxQjtJQUNyQyxtREFBbUQ7Q0FDcEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFlLEVBQzFELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBZTtJQUNyRCxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0I7SUFDdEMsbURBQW1EO0NBQ3BELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxDQUFDLE9BQWUsRUFBRSxFQUFFO0lBQzFELElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7UUFDM0IsT0FBTywyQkFBMkIsQ0FBQztLQUNwQztTQUFNO1FBQ0wsT0FBTyxFQUFFLENBQUM7S0FDWDtBQUNILENBQUMsQ0FBQztBQU1GLE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsT0FBVTtJQUVWLE9BQU8sb0NBQW9DLENBQUMsTUFBTSxDQUUvQyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FLZDtJQUNGLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksS0FBSyxDQUN2QixPQUFPLENBQUMsSUFBSSxFQUNaLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsT0FBTyxFQUNQLGNBQWMsQ0FDZjtDQUNGLENBQUMifQ==","//@ts-nocheck\r\nimport { parseUnits } from '@ethersproject/units';\r\nimport { CurrencyAmount as CurrencyAmountRaw, } from '@uniswap/sdk-core';\r\nimport { FeeAmount } from '@uniswap/v3-sdk';\r\nimport JSBI from 'jsbi';\r\nexport class CurrencyAmount extends CurrencyAmountRaw {\r\n}\r\nexport const MAX_UINT160 = '0xffffffffffffffffffffffffffffffffffffffff';\r\n// Try to parse a user entered amount for a given token\r\nexport function parseAmount(value, currency) {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString();\r\n    return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed));\r\n}\r\nexport function parseFeeAmount(feeAmountStr) {\r\n    switch (feeAmountStr) {\r\n        case '10000':\r\n            return FeeAmount.HIGH;\r\n        case '3000':\r\n            return FeeAmount.MEDIUM;\r\n        case '500':\r\n            return FeeAmount.LOW;\r\n        case '100':\r\n            return FeeAmount.LOWEST;\r\n        default:\r\n            throw new Error(`Fee amount ${feeAmountStr} not supported.`);\r\n    }\r\n}\r\nexport function unparseFeeAmount(feeAmount) {\r\n    switch (feeAmount) {\r\n        case FeeAmount.HIGH:\r\n            return '10000';\r\n        case FeeAmount.MEDIUM:\r\n            return '3000';\r\n        case FeeAmount.LOW:\r\n            return '500';\r\n        case FeeAmount.LOWEST:\r\n            return '100';\r\n        default:\r\n            throw new Error(`Fee amount ${feeAmount} not supported.`);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1vdW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL2Ftb3VudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQUNiLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBRUwsY0FBYyxJQUFJLGlCQUFpQixHQUNwQyxNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFFeEIsTUFBTSxPQUFPLGNBQWUsU0FBUSxpQkFBMkI7Q0FBSTtBQUVuRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsNENBQTRDLENBQUM7QUFFeEUsdURBQXVEO0FBQ3ZELE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBYSxFQUFFLFFBQWtCO0lBQzNELE1BQU0sZ0JBQWdCLEdBQUcsVUFBVSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDekUsT0FBTyxjQUFjLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztBQUMvRSxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxZQUFvQjtJQUNqRCxRQUFRLFlBQVksRUFBRTtRQUNwQixLQUFLLE9BQU87WUFDVixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUM7UUFDeEIsS0FBSyxNQUFNO1lBQ1QsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDO1FBQzFCLEtBQUssS0FBSztZQUNSLE9BQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQztRQUN2QixLQUFLLEtBQUs7WUFDUixPQUFPLFNBQVMsQ0FBQyxNQUFNLENBQUM7UUFDMUI7WUFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsWUFBWSxpQkFBaUIsQ0FBQyxDQUFDO0tBQ2hFO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxTQUFvQjtJQUNuRCxRQUFRLFNBQVMsRUFBRTtRQUNqQixLQUFLLFNBQVMsQ0FBQyxJQUFJO1lBQ2pCLE9BQU8sT0FBTyxDQUFDO1FBQ2pCLEtBQUssU0FBUyxDQUFDLE1BQU07WUFDbkIsT0FBTyxNQUFNLENBQUM7UUFDaEIsS0FBSyxTQUFTLENBQUMsR0FBRztZQUNoQixPQUFPLEtBQUssQ0FBQztRQUNmLEtBQUssU0FBUyxDQUFDLE1BQU07WUFDbkIsT0FBTyxLQUFLLENBQUM7UUFDZjtZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsY0FBYyxTQUFTLGlCQUFpQixDQUFDLENBQUM7S0FDN0Q7QUFDSCxDQUFDIn0=","//@ts-nocheck\r\nimport { Protocol } from '@uniswap/router-sdk';\r\nimport { Percent } from '@uniswap/sdk-core';\r\nimport { Pair } from '@uniswap/v2-sdk';\r\nimport { Pool } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { V3_CORE_FACTORY_ADDRESSES } from './addresses';\r\nimport { CurrencyAmount } from '.';\r\nexport const routeToString = (route) => {\r\n    const routeStr = [];\r\n    const tokens = route.protocol === Protocol.V3\r\n        ? route.tokenPath\r\n        : // MixedRoute and V2Route have path\r\n            route.path;\r\n    const tokenPath = _.map(tokens, (token) => `${token.symbol}`);\r\n    const pools = route.protocol === Protocol.V3 || route.protocol === Protocol.MIXED\r\n        ? route.pools\r\n        : route.pairs;\r\n    const poolFeePath = _.map(pools, (pool) => {\r\n        return `${pool instanceof Pool\r\n            ? ` -- ${pool.fee / 10000}% [${Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`\r\n            : ` -- [${Pair.getAddress(pool.token0, pool.token1)}]`} --> `;\r\n    });\r\n    for (let i = 0; i < tokenPath.length; i++) {\r\n        routeStr.push(tokenPath[i]);\r\n        if (i < poolFeePath.length) {\r\n            routeStr.push(poolFeePath[i]);\r\n        }\r\n    }\r\n    return routeStr.join('');\r\n};\r\nexport const routeAmountsToString = (routeAmounts) => {\r\n    const total = _.reduce(routeAmounts, (total, cur) => {\r\n        //@ts-ignore\r\n        return total.add(cur.amount);\r\n    }, \r\n    //@ts-ignore\r\n    CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency, 0));\r\n    const routeStrings = _.map(routeAmounts, ({ protocol, route, amount }) => {\r\n        //@ts-ignore\r\n        const portion = amount.divide(total);\r\n        const percent = new Percent(portion.numerator, portion.denominator);\r\n        /// @dev special case for MIXED routes we want to show user friendly V2+V3 instead\r\n        return `[${protocol == Protocol.MIXED ? 'V2 + V3' : protocol}] ${percent.toFixed(2)}% = ${routeToString(route)}`;\r\n    });\r\n    return _.join(routeStrings, ', ');\r\n};\r\nexport const routeAmountToString = (routeAmount) => {\r\n    const { route, amount } = routeAmount;\r\n    //@ts-ignore\r\n    return `${amount.toExact()} = ${routeToString(route)}`;\r\n};\r\nexport const poolToString = (p) => {\r\n    return `${p.token0.symbol}/${p.token1.symbol}${p instanceof Pool ? `/${p.fee / 10000}%` : ``}`;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWE7QUFDYixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBSXZCLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBRW5DLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUMzQixLQUFxQyxFQUM3QixFQUFFO0lBQ1YsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLE1BQU0sTUFBTSxHQUNWLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUU7UUFDNUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTO1FBQ2pCLENBQUMsQ0FBQyxtQ0FBbUM7WUFDckMsS0FBSyxDQUFDLElBQUksQ0FBQztJQUNmLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxLQUFLO1FBQ2pFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSztRQUNiLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ2xCLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDeEMsT0FBTyxHQUFHLElBQUksWUFBWSxJQUFJO1lBQzVCLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQzVDLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFDLE1BQU0sRUFDWCxJQUFJLENBQUMsR0FBRyxFQUNSLFNBQVMsRUFDVCx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQ3hDLEdBQUc7WUFDSixDQUFDLENBQUMsUUFBUSxJQUFJLENBQUMsVUFBVSxDQUN0QixJQUFhLENBQUMsTUFBTSxFQUNwQixJQUFhLENBQUMsTUFBTSxDQUN0QixHQUNELE9BQU8sQ0FBQztJQUNaLENBQUMsQ0FBQyxDQUFDO0lBRUgsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDekMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsTUFBTSxFQUFFO1lBQzFCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDL0I7S0FDRjtJQUVELE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMzQixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUNsQyxZQUFtQyxFQUMzQixFQUFFO0lBQ1YsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDcEIsWUFBWSxFQUNaLENBQUMsS0FBcUIsRUFBRSxHQUF3QixFQUFFLEVBQUU7UUFDbEQsWUFBWTtRQUNaLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNELFlBQVk7SUFDWixjQUFjLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUNsRSxDQUFDO0lBRUYsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRTtRQUN2RSxZQUFZO1FBQ1osTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQyxNQUFNLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwRSxrRkFBa0Y7UUFDbEYsT0FBTyxJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFFBQ2xELEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUN6RCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FDakMsV0FBZ0MsRUFDeEIsRUFBRTtJQUNWLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEdBQUcsV0FBVyxDQUFDO0lBQ3RDLFlBQVk7SUFDWixPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLENBQWMsRUFBVSxFQUFFO0lBQ3JELE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLFlBQVksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQ3hGLEVBQUUsQ0FBQztBQUNQLENBQUMsQ0FBQyJ9","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"account\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"balanceOf\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class IERC20Metadata__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nIERC20Metadata__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSUVSQzIwTWV0YWRhdGFfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvdHlwZXMvdjMvZmFjdG9yaWVzL0lFUkMyME1ldGFkYXRhX19mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtDQUErQztBQUMvQyxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBR3BCLE9BQU8sRUFBRSxRQUFRLEVBQVUsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBTWpELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsS0FBSztnQkFDZCxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxVQUFVO1FBQ2hCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLE1BQU0sRUFBRTtZQUNOO2dCQUNFLE9BQU8sRUFBRSxJQUFJO2dCQUNiLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxJQUFJO2dCQUNiLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNF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","import { Token } from '@uniswap/sdk-core';\r\nimport _ from 'lodash';\r\nimport { IERC20Metadata__factory } from '../types/v3/factories/IERC20Metadata__factory';\r\nimport { ChainId, log, WRAPPED_NATIVE_CURRENCY } from '../util';\r\n// Some well known tokens on each chain for seeding cache / testing.\r\nexport const USDC_FUJI = new Token(ChainId.FUJI, '0xB6076C93701D6a07266c31066B298AeC6dd65c2d', 6, 'USDC', 'USD//C');\r\nexport class TokenProvider {\r\n    constructor(chainId, multicall2Provider) {\r\n        this.chainId = chainId;\r\n        this.multicall2Provider = multicall2Provider;\r\n    }\r\n    async getTokens(_addresses, providerConfig) {\r\n        const addressToToken = {};\r\n        const symbolToToken = {};\r\n        const addresses = _(_addresses)\r\n            .map((address) => address.toLowerCase())\r\n            .uniq()\r\n            .value();\r\n        if (addresses.length > 0) {\r\n            const [symbolsResult, decimalsResult] = await Promise.all([\r\n                this.multicall2Provider.callSameFunctionOnMultipleContracts({\r\n                    addresses,\r\n                    contractInterface: IERC20Metadata__factory.createInterface(),\r\n                    functionName: 'symbol',\r\n                    providerConfig,\r\n                }),\r\n                this.multicall2Provider.callSameFunctionOnMultipleContracts({\r\n                    addresses,\r\n                    contractInterface: IERC20Metadata__factory.createInterface(),\r\n                    functionName: 'decimals',\r\n                    providerConfig,\r\n                }),\r\n            ]);\r\n            const { results: symbols } = symbolsResult;\r\n            const { results: decimals } = decimalsResult;\r\n            for (let i = 0; i < addresses.length; i++) {\r\n                const address = addresses[i];\r\n                const symbolResult = symbols[i];\r\n                const decimalResult = decimals[i];\r\n                if (!(symbolResult === null || symbolResult === void 0 ? void 0 : symbolResult.success) || !(decimalResult === null || decimalResult === void 0 ? void 0 : decimalResult.success)) {\r\n                    log.info({\r\n                        symbolResult,\r\n                        decimalResult,\r\n                    }, `Dropping token with address ${address} as symbol or decimal are invalid`);\r\n                    continue;\r\n                }\r\n                const symbol = symbolResult.result[0];\r\n                const decimal = decimalResult.result[0];\r\n                addressToToken[address.toLowerCase()] = new Token(this.chainId, address, decimal, symbol);\r\n                symbolToToken[symbol.toLowerCase()] =\r\n                    addressToToken[address.toLowerCase()];\r\n            }\r\n            log.info(`Got token symbol and decimals for ${Object.values(addressToToken).length} out of ${addresses.length} tokens on-chain ${providerConfig ? `as of: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}` : ''}`);\r\n        }\r\n        return {\r\n            getTokenByAddress: (address) => {\r\n                return addressToToken[address.toLowerCase()];\r\n            },\r\n            getTokenBySymbol: (symbol) => {\r\n                return symbolToToken[symbol.toLowerCase()];\r\n            },\r\n            getAllTokens: () => {\r\n                return Object.values(addressToToken);\r\n            },\r\n        };\r\n    }\r\n}\r\nexport const DAI_ON = (chainId) => {\r\n    switch (chainId) {\r\n        case ChainId.FUJI:\r\n            return USDC_FUJI;\r\n        default:\r\n            throw new Error(`Chain id: ${chainId} not supported`);\r\n    }\r\n};\r\nexport const USDT_ON = (chainId) => {\r\n    switch (chainId) {\r\n        case ChainId.FUJI:\r\n            return USDC_FUJI;\r\n        default:\r\n            throw new Error(`Chain id: ${chainId} not supported`);\r\n    }\r\n};\r\nexport const USDC_ON = (chainId) => {\r\n    switch (chainId) {\r\n        case ChainId.FUJI:\r\n            return USDC_FUJI;\r\n        default:\r\n            throw new Error(`Chain id: ${chainId} not supported`);\r\n    }\r\n};\r\nexport const WNATIVE_ON = (chainId) => {\r\n    return WRAPPED_NATIVE_CURRENCY[chainId];\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMxQyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDeEYsT0FBTyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUErQmhFLG9FQUFvRTtBQUNwRSxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsSUFBSSxLQUFLLENBQ2hDLE9BQU8sQ0FBQyxJQUFJLEVBQ1osNENBQTRDLEVBQzVDLENBQUMsRUFDRCxNQUFNLEVBQ04sUUFBUSxDQUNULENBQUM7QUFLRixNQUFNLE9BQU8sYUFBYTtJQUN4QixZQUNVLE9BQWdCLEVBQ2Qsa0JBQXNDO1FBRHhDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBQzlDLENBQUM7SUFFRSxLQUFLLENBQUMsU0FBUyxDQUNwQixVQUFvQixFQUNwQixjQUErQjtRQUUvQixNQUFNLGNBQWMsR0FBaUMsRUFBRSxDQUFDO1FBQ3hELE1BQU0sYUFBYSxHQUFnQyxFQUFFLENBQUM7UUFFdEQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQzthQUM1QixHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUN2QyxJQUFJLEVBQUU7YUFDTixLQUFLLEVBQUUsQ0FBQztRQUVYLElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDeEIsTUFBTSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUMsR0FBRyxNQUFNLE9B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","import _ from 'lodash';\r\n//@ts-ignore\r\nimport { ChainId, log } from '../util';\r\nimport { USDC_FUJI } from './token-provider';\r\n// These tokens will added to the Token cache on initialization.\r\nexport const CACHE_SEED_TOKENS = {\r\n    [ChainId.FUJI]: {\r\n        USDC: USDC_FUJI\r\n    },\r\n    // Currently we do not have providers for Moonbeam mainnet or Gnosis testnet\r\n};\r\n/**\r\n * Provider for getting token metadata that falls back to a different provider\r\n * in the event of failure.\r\n *\r\n * @export\r\n * @class CachingTokenProviderWithFallback\r\n */\r\nexport class CachingTokenProviderWithFallback {\r\n    constructor(chainId, \r\n    // Token metadata (e.g. symbol and decimals) don't change so can be cached indefinitely.\r\n    // Constructing a new token object is slow as sdk-core does checksumming.\r\n    tokenCache, primaryTokenProvider, fallbackTokenProvider) {\r\n        this.chainId = chainId;\r\n        this.tokenCache = tokenCache;\r\n        this.primaryTokenProvider = primaryTokenProvider;\r\n        this.fallbackTokenProvider = fallbackTokenProvider;\r\n        this.CACHE_KEY = (chainId, address) => `token-${chainId}-${address}`;\r\n    }\r\n    async getTokens(_addresses) {\r\n        const seedTokens = CACHE_SEED_TOKENS[this.chainId];\r\n        if (seedTokens) {\r\n            for (const token of Object.values(seedTokens)) {\r\n                await this.tokenCache.set(this.CACHE_KEY(this.chainId, token.address.toLowerCase()), token);\r\n            }\r\n        }\r\n        const addressToToken = {};\r\n        const symbolToToken = {};\r\n        const addresses = _(_addresses)\r\n            .map((address) => address.toLowerCase())\r\n            .uniq()\r\n            .value();\r\n        const addressesToFindInPrimary = [];\r\n        const addressesToFindInSecondary = [];\r\n        for (const address of addresses) {\r\n            if (await this.tokenCache.has(this.CACHE_KEY(this.chainId, address))) {\r\n                addressToToken[address.toLowerCase()] = (await this.tokenCache.get(this.CACHE_KEY(this.chainId, address)));\r\n                symbolToToken[addressToToken[address].symbol] =\r\n                    (await this.tokenCache.get(this.CACHE_KEY(this.chainId, address)));\r\n            }\r\n            else {\r\n                addressesToFindInPrimary.push(address);\r\n            }\r\n        }\r\n        log.info({ addressesToFindInPrimary }, `Found ${addresses.length - addressesToFindInPrimary.length} out of ${addresses.length} tokens in local cache. ${addressesToFindInPrimary.length > 0\r\n            ? `Checking primary token provider for ${addressesToFindInPrimary.length} tokens`\r\n            : ``}\n      `);\r\n        if (addressesToFindInPrimary.length > 0) {\r\n            const primaryTokenAccessor = await this.primaryTokenProvider.getTokens(addressesToFindInPrimary);\r\n            for (const address of addressesToFindInPrimary) {\r\n                const token = primaryTokenAccessor.getTokenByAddress(address);\r\n                if (token) {\r\n                    addressToToken[address.toLowerCase()] = token;\r\n                    symbolToToken[addressToToken[address].symbol] = token;\r\n                    await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\r\n                }\r\n                else {\r\n                    addressesToFindInSecondary.push(address);\r\n                }\r\n            }\r\n            log.info({ addressesToFindInSecondary }, `Found ${addressesToFindInPrimary.length - addressesToFindInSecondary.length} tokens in primary. ${this.fallbackTokenProvider\r\n                ? `Checking secondary token provider for ${addressesToFindInSecondary.length} tokens`\r\n                : `No fallback token provider specified. About to return.`}`);\r\n        }\r\n        if (this.fallbackTokenProvider && addressesToFindInSecondary.length > 0) {\r\n            const secondaryTokenAccessor = await this.fallbackTokenProvider.getTokens(addressesToFindInSecondary);\r\n            for (const address of addressesToFindInSecondary) {\r\n                const token = secondaryTokenAccessor.getTokenByAddress(address);\r\n                if (token) {\r\n                    addressToToken[address.toLowerCase()] = token;\r\n                    symbolToToken[addressToToken[address].symbol] = token;\r\n                    await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            getTokenByAddress: (address) => {\r\n                return addressToToken[address.toLowerCase()];\r\n            },\r\n            getTokenBySymbol: (symbol) => {\r\n                return symbolToToken[symbol.toLowerCase()];\r\n            },\r\n            getAllTokens: () => {\r\n                return Object.values(addressToToken);\r\n            },\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy10b2tlbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsWUFBWTtBQUNaLE9BQU8sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUEyQixNQUFNLFNBQVMsQ0FBQztBQUdoRSxPQUFPLEVBR0wsU0FBUyxFQUNWLE1BQU0sa0JBQWtCLENBQUM7QUFFMUIsZ0VBQWdFO0FBQ2hFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUUxQjtJQUNGLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2QsSUFBSSxFQUFFLFNBQVM7S0FDaEI7SUFFRCw0RUFBNEU7Q0FDN0UsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTyxnQ0FBZ0M7SUFJM0MsWUFDWSxPQUFnQjtJQUMxQix3RkFBd0Y7SUFDeEYseUVBQXlFO0lBQ2pFLFVBQXlCLEVBQ3ZCLG9CQUFvQyxFQUNwQyxxQkFBc0M7UUFMdEMsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUdsQixlQUFVLEdBQVYsVUFBVSxDQUFlO1FBQ3ZCLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBZ0I7UUFDcEMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUFpQjtRQVQxQyxjQUFTLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3hELFNBQVMsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBUzVCLENBQUM7SUFFRSxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQW9CO1FBQ3pDLE1BQU0sVUFBVSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVuRCxJQUFJLFVBQVUsRUFBRTtZQUNkLEtBQUssTUFBTSxLQUFLLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDN0MsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FDdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsRUFDekQsS0FBSyxDQUNOLENBQUM7YUFDSDtTQUNGO1FBRUQsTUFBTSxjQUFjLEdBQWlDLEVBQUUsQ0FBQztRQUN4RCxNQUFNLGFBQWEsR0FBZ0MsRUFBRSxDQUFDO1FBRXRELE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUM7YUFDNUIsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDdkMsSUFBSSxFQUFFO2FBQ04sS0FBSyxFQUFFLENBQUM7UUFFWCxNQUFNLHdCQUF3QixHQUFHLEVBQUUsQ0FBQztRQUNwQyxNQUFNLDBCQUEwQixHQUFHLEVBQUUsQ0FBQztRQUV0QyxLQUFLLE1BQU0sT0FBTyxJQUFJLFNBQVMsRUFBRTtZQUMvQixJQUFJLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQUU7Z0JBQ3BFLGNBQWMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQ2hFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FDdEMsQ0FBRSxDQUFDO2dCQUNKLGFBQWEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFFLENBQUMsTUFBTyxDQUFDO29CQUM3QyxDQUFDLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUUsQ0FBQzthQUN2RTtpQkFBTTtnQkFDTCx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDeEM7U0FDRjtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSx3QkFBd0IsRUFBRSxFQUM1QixTQUFTLFNBQVMsQ0FBQyxNQUFNLEdBQUcsd0JBQXdCLENBQUMsTUFBTSxXQUFXLFNBQVMsQ0FBQyxNQUNoRiwyQkFBMkIsd0JBQXdCLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDNUQsQ0FBQyxDQUFDLHVDQUF1Qyx3QkFBd0IsQ0FBQyxNQUFNLFNBQVM7WUFDakYsQ0FBQyxDQUFDLEVBQ0o7T0FDQyxDQUNGLENBQUM7UUFFRixJQUFJLHdCQUF3QixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkMsTUFBTSxvQkFBb0IsR0FBRyxNQUFNLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQ3BFLHdCQUF3QixDQUN6QixDQUFDO1lBRUYsS0FBSyxNQUFNLE9BQU8sSUFBSSx3QkFBd0IsRUFBRTtnQkFDOUMsTUFBTSxLQUFLLEdBQUcsb0JBQW9CLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBRTlELElBQUksS0FBSyxFQUFFO29CQUNULGNBQWMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQzlDLGFBQWEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFFLENBQUMsTUFBTyxDQUFDLEdBQUcsS0FBSyxDQUFDO29CQUN4RCxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQ25ELGNBQWMsQ0FBQyxPQUFPLENBQUUsQ0FDekIsQ0FBQztpQkFDSDtxQkFBTTtvQkFDTCwwQkFBMEIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQzFDO2FBQ0Y7WUFFRCxHQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsMEJBQTBCLEVBQUUsRUFDOUIsU0FBUyx3QkFBd0IsQ0FBQyxNQUFNLEdBQUcsMEJBQTBCLENBQUMsTUFDdEUsdUJBQXVCLElBQUksQ0FBQyxxQkFBcUI7Z0JBQy9DLENBQUMsQ0FBQyx5Q0FBeUMsMEJBQTBCLENBQUMsTUFBTSxTQUFTO2dCQUNyRixDQUFDLENBQUMsd0RBQ0osRUFBRSxDQUNILENBQUM7U0FDSDtRQUVELElBQUksSUFBSSxDQUFDLHFCQUFxQixJQUFJLDBCQUEwQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkUsTUFBTSxzQkFBc0IsR0FBRyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQ3ZFLDBCQUEwQixDQUMzQixDQUFDO1lBRUYsS0FBSyxNQUFNLE9BQU8sSUFBSSwwQkFBMEIsRUFBRTtnQkFDaEQsTUFBTSxLQUFLLEdBQUcsc0JBQXNCLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2hFLElBQUksS0FBSyxFQUFFO29CQUNULGNBQWMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQzlDLGFBQWEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFFLENBQUMsTUFBTyxDQUFDLEdBQUcsS0FBSyxDQUFDO29CQUN4RCxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQ25ELGNBQWMsQ0FBQyxPQUFPLENBQUUsQ0FDekIsQ0FBQztpQkFDSDthQUNGO1NBQ0Y7UUFFRCxPQUFPO1lBQ0wsaUJBQWlCLEVBQUUsQ0FBQyxPQUFlLEVBQXFCLEVBQUU7Z0JBQ3hELE9BQU8sY0FBYyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1lBQy9DLENBQUM7WUFDRCxnQkFBZ0IsRUFBRSxDQUFDLE1BQWMsRUFBcUIsRUFBRTtnQkFDdEQsT0FBTyxhQUFhLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7WUFDN0MsQ0FBQztZQUNELFlBQVksRUFBRSxHQUFZLEVBQUU7Z0JBQzFCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUN2QyxDQUFDO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","/**\r\n * Provider for getting gas prices.\r\n */\r\nexport class IGasPriceProvider {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUE7O0dBRUc7QUFDSCxNQUFNLE9BQWdCLGlCQUFpQjtDQUV0QyJ9","import { BigNumber } from '@ethersproject/bignumber';\r\nimport _ from 'lodash';\r\nimport { log } from '../util/log';\r\nimport { IGasPriceProvider } from './gas-price-provider';\r\n// We get the Xth percentile of priority fees for transactions successfully included in previous blocks.\r\nconst DEFAULT_PRIORITY_FEE_PERCENTILE = 50;\r\n// Infura docs say only past 4 blocks guaranteed to be available: https://infura.io/docs/ethereum#operation/eth_feeHistory\r\nconst DEFAULT_BLOCKS_TO_LOOK_BACK = 4;\r\n/**\r\n * Computes a gas estimate using on-chain data from the eth_feeHistory RPC endpoint.\r\n *\r\n * Takes the average priority fee from the past `blocksToConsider` blocks, and adds it\r\n * to the current base fee.\r\n *\r\n * @export\r\n * @class EIP1559GasPriceProvider\r\n */\r\nexport class EIP1559GasPriceProvider extends IGasPriceProvider {\r\n    constructor(provider, priorityFeePercentile = DEFAULT_PRIORITY_FEE_PERCENTILE, blocksToConsider = DEFAULT_BLOCKS_TO_LOOK_BACK) {\r\n        super();\r\n        this.provider = provider;\r\n        this.priorityFeePercentile = priorityFeePercentile;\r\n        this.blocksToConsider = blocksToConsider;\r\n    }\r\n    async getGasPrice() {\r\n        const feeHistoryRaw = (await this.provider.send('eth_feeHistory', [\r\n            /**\r\n             * @fix Use BigNumber.from(this.blocksToConsider).toHexString() after hardhat adds support\r\n             * @see https://github.com/NomicFoundation/hardhat/issues/1585 .___.\r\n             */\r\n            BigNumber.from(this.blocksToConsider).toHexString().replace('0x0', '0x'),\r\n            'latest',\r\n            [this.priorityFeePercentile],\r\n        ]));\r\n        const feeHistory = {\r\n            baseFeePerGas: _.map(feeHistoryRaw.baseFeePerGas, (b) => BigNumber.from(b)),\r\n            gasUsedRatio: feeHistoryRaw.gasUsedRatio,\r\n            oldestBlock: BigNumber.from(feeHistoryRaw.oldestBlock),\r\n            reward: _.map(feeHistoryRaw.reward, (b) => BigNumber.from(b[0])),\r\n        };\r\n        const nextBlockBaseFeePerGas = feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length - 1];\r\n        const averagePriorityFeePerGas = _.reduce(feeHistory.reward, (sum, cur) => sum.add(cur), BigNumber.from(0)).div(feeHistory.reward.length);\r\n        log.info({\r\n            feeHistory,\r\n            feeHistoryReadable: {\r\n                baseFeePerGas: _.map(feeHistory.baseFeePerGas, (f) => f.toString()),\r\n                oldestBlock: feeHistory.oldestBlock.toString(),\r\n                reward: _.map(feeHistory.reward, (r) => r.toString()),\r\n            },\r\n            nextBlockBaseFeePerGas: nextBlockBaseFeePerGas.toString(),\r\n            averagePriorityFeePerGas: averagePriorityFeePerGas.toString(),\r\n        }, 'Got fee history from provider and computed gas estimate');\r\n        const gasPriceWei = nextBlockBaseFeePerGas.add(averagePriorityFeePerGas);\r\n        const blockNumber = feeHistory.oldestBlock.add(this.blocksToConsider);\r\n        log.info(`Estimated gas price in wei: ${gasPriceWei} as of block ${blockNumber.toString()}`);\r\n        return { gasPriceWei: gasPriceWei };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWlwLTE1NTktZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9laXAtMTU1OS1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXJELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRWxDLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBZ0JuRSx3R0FBd0c7QUFDeEcsTUFBTSwrQkFBK0IsR0FBRyxFQUFFLENBQUM7QUFDM0MsMEhBQTBIO0FBQzFILE1BQU0sMkJBQTJCLEdBQUcsQ0FBQyxDQUFDO0FBRXRDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtJQUM1RCxZQUNZLFFBQXlCLEVBQzNCLHdCQUFnQywrQkFBK0IsRUFDL0QsbUJBQTJCLDJCQUEyQjtRQUU5RCxLQUFLLEVBQUUsQ0FBQztRQUpFLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQzNCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBMEM7UUFDL0QscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFzQztJQUdoRSxDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsTUFBTSxhQUFhLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ2hFOzs7ZUFHRztZQUNILFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUM7WUFDeEUsUUFBUTtZQUNSLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDO1NBQzdCLENBQUMsQ0FBMEIsQ0FBQztRQUU3QixNQUFNLFVBQVUsR0FBdUI7WUFDckMsYUFBYSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQ3RELFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ2xCO1lBQ0QsWUFBWSxFQUFFLGFBQWEsQ0FBQyxZQUFZO1lBQ3hDLFdBQVcsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7WUFDdEQsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqRSxDQUFDO1FBRUYsTUFBTSxzQkFBc0IsR0FDMUIsVUFBVSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUUsQ0FBQztRQUVqRSxNQUFNLHdCQUF3QixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQ3ZDLFVBQVUsQ0FBQyxNQUFNLEVBQ2pCLENBQUMsR0FBYyxFQUFFLEdBQWMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFDaEQsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDbEIsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVoQyxHQUFHLENBQUMsSUFBSSxDQUNOO1lBQ0UsVUFBVTtZQUNWLGtCQUFrQixFQUFFO2dCQUNsQixhQUFhLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ25FLFdBQVcsRUFBRSxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtnQkFDOUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ3REO1lBQ0Qsc0JBQXNCLEVBQUUsc0JBQXNCLENBQUMsUUFBUSxFQUFFO1lBQ3pELHdCQUF3QixFQUFFLHdCQUF3QixDQUFDLFFBQVEsRUFBRTtTQUM5RCxFQUNELHlEQUF5RCxDQUMxRCxDQUFDO1FBRUYsTUFBTSxXQUFXLEdBQUcsc0JBQXNCLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFFekUsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFdEUsR0FBRyxDQUFDLElBQUksQ0FDTiwrQkFBK0IsV0FBVyxnQkFBZ0IsV0FBVyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQ25GLENBQUM7UUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FDRiJ9","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address[]\",\r\n                name: \"tokens\",\r\n                type: \"address[]\",\r\n            },\r\n            {\r\n                internalType: \"address[]\",\r\n                name: \"baseTokens\",\r\n                type: \"address[]\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountToBorrow\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"batchValidate\",\r\n        outputs: [\r\n            {\r\n                internalType: \"enum ITokenValidator.Status[]\",\r\n                name: \"\",\r\n                type: \"uint8[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address[]\",\r\n                name: \"baseTokens\",\r\n                type: \"address[]\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountToBorrow\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"validate\",\r\n        outputs: [\r\n            {\r\n                internalType: \"enum ITokenValidator.Status\",\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class ITokenValidator__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nITokenValidator__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVRva2VuVmFsaWRhdG9yX19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3R5cGVzL290aGVyL2ZhY3Rvcmllcy9JVG9rZW5WYWxpZGF0b3JfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFHcEIsT0FBTyxFQUFFLFFBQVEsRUFBVSxLQUFLLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFNakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxXQUFXO2dCQUN6QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsV0FBVzthQUNsQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxXQUFXO2dCQUN6QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLGdCQUFnQjtnQkFDdEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxlQUFlO1FBQ3JCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSwrQkFBK0I7Z0JBQzdDLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsWUFBWTtRQUM3QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxPQUFPO2dCQUNiLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFdBQVc7Z0JBQ3pCLElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUsV0FBVzthQUNsQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsZ0JBQWdCO2dCQUN0QixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLFVBQVU7UUFDaEIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLDZCQUE2QjtnQkFDM0MsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLE9BQU87YUFDZDtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLFVBQVU7S0FDakI7Q0FDRixDQUFDO0FBRUYsTUFBTSxPQUFPLHdCQUF3QjtJQUVuQyxNQUFNLENBQUMsZUFBZTtRQUNwQixPQUFPLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQTZCLENBQUM7SUFDL0QsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPLENBQ1osT0FBZSxFQUNmLGdCQUFtQztRQUVuQyxPQUFPLElBQUksUUFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLENBQW9CLENBQUM7SUFDMUUsQ0FBQzs7QUFUZSw0QkFBRyxHQUFHLElBQUksQ0FBQyJ9","import _ from 'lodash';\r\nimport { ITokenValidator__factory } from '../types/other/factories/ITokenValidator__factory';\r\nimport { log, WRAPPED_NATIVE_CURRENCY } from '../util';\r\nconst DEFAULT_ALLOWLIST = new Set([\r\n    // RYOSHI. Does not allow transfers between contracts so fails validation.\r\n    '0x777E2ae845272a2F540ebf6a3D03734A5a8f618e'.toLowerCase(),\r\n]);\r\nexport var TokenValidationResult;\r\n(function (TokenValidationResult) {\r\n    TokenValidationResult[TokenValidationResult[\"UNKN\"] = 0] = \"UNKN\";\r\n    TokenValidationResult[TokenValidationResult[\"FOT\"] = 1] = \"FOT\";\r\n    TokenValidationResult[TokenValidationResult[\"STF\"] = 2] = \"STF\";\r\n})(TokenValidationResult || (TokenValidationResult = {}));\r\nconst TOKEN_VALIDATOR_ADDRESS = '0xb5ee1690b7dcc7859771148d0889be838fe108e0';\r\nconst AMOUNT_TO_FLASH_BORROW = '1000';\r\nconst GAS_LIMIT_PER_VALIDATE = 1000000;\r\nexport class TokenValidatorProvider {\r\n    constructor(chainId, multicall2Provider, tokenValidationCache, tokenValidatorAddress = TOKEN_VALIDATOR_ADDRESS, gasLimitPerCall = GAS_LIMIT_PER_VALIDATE, amountToFlashBorrow = AMOUNT_TO_FLASH_BORROW, allowList = DEFAULT_ALLOWLIST) {\r\n        this.chainId = chainId;\r\n        this.multicall2Provider = multicall2Provider;\r\n        this.tokenValidationCache = tokenValidationCache;\r\n        this.tokenValidatorAddress = tokenValidatorAddress;\r\n        this.gasLimitPerCall = gasLimitPerCall;\r\n        this.amountToFlashBorrow = amountToFlashBorrow;\r\n        this.allowList = allowList;\r\n        this.CACHE_KEY = (chainId, address) => `token-${chainId}-${address}`;\r\n        this.BASES = [WRAPPED_NATIVE_CURRENCY[this.chainId].address];\r\n    }\r\n    async validateTokens(tokens, providerConfig) {\r\n        const tokenAddressToToken = _.keyBy(tokens, 'address');\r\n        const addressesRaw = _(tokens)\r\n            .map((token) => token.address)\r\n            .uniq()\r\n            .value();\r\n        const addresses = [];\r\n        const tokenToResult = {};\r\n        // Check if we have cached token validation results for any tokens.\r\n        for (const address of addressesRaw) {\r\n            if (await this.tokenValidationCache.has(this.CACHE_KEY(this.chainId, address))) {\r\n                tokenToResult[address.toLowerCase()] =\r\n                    (await this.tokenValidationCache.get(this.CACHE_KEY(this.chainId, address)));\r\n            }\r\n            else {\r\n                addresses.push(address);\r\n            }\r\n        }\r\n        log.info(`Got token validation results for ${addressesRaw.length - addresses.length} tokens from cache. Getting ${addresses.length} on-chain.`);\r\n        const functionParams = _(addresses)\r\n            .map((address) => [address, this.BASES, this.amountToFlashBorrow])\r\n            .value();\r\n        // We use the validate function instead of batchValidate to avoid poison pill problem.\r\n        // One token that consumes too much gas could cause the entire batch to fail.\r\n        const multicallResult = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({\r\n            address: this.tokenValidatorAddress,\r\n            contractInterface: ITokenValidator__factory.createInterface(),\r\n            functionName: 'validate',\r\n            functionParams: functionParams,\r\n            providerConfig,\r\n            additionalConfig: {\r\n                gasLimitPerCallOverride: this.gasLimitPerCall,\r\n            },\r\n        });\r\n        for (let i = 0; i < multicallResult.results.length; i++) {\r\n            const resultWrapper = multicallResult.results[i];\r\n            const tokenAddress = addresses[i];\r\n            const token = tokenAddressToToken[tokenAddress];\r\n            if (this.allowList.has(token.address.toLowerCase())) {\r\n                tokenToResult[token.address.toLowerCase()] = TokenValidationResult.UNKN;\r\n                await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId, token.address.toLowerCase()), tokenToResult[token.address.toLowerCase()]);\r\n                continue;\r\n            }\r\n            // Could happen if the tokens transfer consumes too much gas so we revert. Just\r\n            // drop the token in that case.\r\n            if (!resultWrapper.success) {\r\n                log.info({ result: resultWrapper }, `Failed to validate token ${token.symbol}`);\r\n                continue;\r\n            }\r\n            const validationResult = resultWrapper.result[0];\r\n            tokenToResult[token.address.toLowerCase()] =\r\n                validationResult;\r\n            await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId, token.address.toLowerCase()), tokenToResult[token.address.toLowerCase()]);\r\n        }\r\n        return {\r\n            getValidationByToken: (token) => tokenToResult[token.address.toLowerCase()],\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tdmFsaWRhdG9yLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy90b2tlbi12YWxpZGF0b3ItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzdGLE9BQU8sRUFBVyxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFNaEUsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsQ0FBUztJQUN4QywwRUFBMEU7SUFDMUUsNENBQTRDLENBQUMsV0FBVyxFQUFFO0NBQzNELENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBTixJQUFZLHFCQUlYO0FBSkQsV0FBWSxxQkFBcUI7SUFDL0IsaUVBQVEsQ0FBQTtJQUNSLCtEQUFPLENBQUE7SUFDUCwrREFBTyxDQUFBO0FBQ1QsQ0FBQyxFQUpXLHFCQUFxQixLQUFyQixxQkFBcUIsUUFJaEM7QUFNRCxNQUFNLHVCQUF1QixHQUFHLDRDQUE0QyxDQUFDO0FBQzdFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLE1BQU0sc0JBQXNCLEdBQUcsT0FBUyxDQUFDO0FBc0J6QyxNQUFNLE9BQU8sc0JBQXNCO0lBTWpDLFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3hDLG9CQUFtRCxFQUNuRCx3QkFBd0IsdUJBQXVCLEVBQy9DLGtCQUFrQixzQkFBc0IsRUFDeEMsc0JBQXNCLHNCQUFzQixFQUM1QyxZQUFZLGlCQUFpQjtRQU4zQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUErQjtRQUNuRCwwQkFBcUIsR0FBckIscUJBQXFCLENBQTBCO1FBQy9DLG9CQUFlLEdBQWYsZUFBZSxD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","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"Burn\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Mint\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"Swap\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint112\",\r\n                name: \"reserve0\",\r\n                type: \"uint112\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint112\",\r\n                name: \"reserve1\",\r\n                type: \"uint112\",\r\n            },\r\n        ],\r\n        name: \"Sync\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"DOMAIN_SEPARATOR\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"MINIMUM_LIQUIDITY\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"PERMIT_TYPEHASH\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"balanceOf\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"burn\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"getReserves\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint112\",\r\n                name: \"reserve0\",\r\n                type: \"uint112\",\r\n            },\r\n            {\r\n                internalType: \"uint112\",\r\n                name: \"reserve1\",\r\n                type: \"uint112\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"blockTimestampLast\",\r\n                type: \"uint32\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"initialize\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"kLast\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"mint\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"liquidity\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"nonces\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"deadline\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"v\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"r\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"s\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"permit\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"price0CumulativeLast\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"price1CumulativeLast\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"skim\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount0Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount1Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"data\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"swap\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"sync\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token0\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token1\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class IUniswapV2Pair__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nIUniswapV2Pair__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,","import { Pair } from '@uniswap/v2-sdk';\r\nimport retry from 'async-retry';\r\nimport _ from 'lodash';\r\nimport { IUniswapV2Pair__factory } from '../../types/v2/factories/IUniswapV2Pair__factory';\r\nimport { CurrencyAmount } from '../../util';\r\nimport { log } from '../../util/log';\r\nimport { poolToString } from '../../util/routes';\r\nexport class V2PoolProvider {\r\n    /**\r\n     * Creates an instance of V2PoolProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param multicall2Provider The multicall provider to use to get the pools.\r\n     * @param retryOptions The retry options for each call to the multicall.\r\n     */\r\n    constructor(chainId, multicall2Provider, retryOptions = {\r\n        retries: 2,\r\n        minTimeout: 50,\r\n        maxTimeout: 500,\r\n    }) {\r\n        this.chainId = chainId;\r\n        this.multicall2Provider = multicall2Provider;\r\n        this.retryOptions = retryOptions;\r\n        // Computing pool addresses is slow as it requires hashing, encoding etc.\r\n        // Addresses never change so can always be cached.\r\n        this.POOL_ADDRESS_CACHE = {};\r\n    }\r\n    async getPools(tokenPairs, providerConfig) {\r\n        const poolAddressSet = new Set();\r\n        const sortedTokenPairs = [];\r\n        const sortedPoolAddresses = [];\r\n        for (const tokenPair of tokenPairs) {\r\n            const [tokenA, tokenB] = tokenPair;\r\n            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                continue;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            sortedTokenPairs.push([token0, token1]);\r\n            sortedPoolAddresses.push(poolAddress);\r\n        }\r\n        log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);\r\n        const reservesResults = await this.getPoolsData(sortedPoolAddresses, 'getReserves', providerConfig);\r\n        log.info(`Got reserves for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? `as of block: ${await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)}.`\r\n            : ``}`);\r\n        const poolAddressToPool = {};\r\n        const invalidPools = [];\r\n        for (let i = 0; i < sortedPoolAddresses.length; i++) {\r\n            const reservesResult = reservesResults[i];\r\n            if (!(reservesResult === null || reservesResult === void 0 ? void 0 : reservesResult.success)) {\r\n                const [token0, token1] = sortedTokenPairs[i];\r\n                invalidPools.push([token0, token1]);\r\n                continue;\r\n            }\r\n            const [token0, token1] = sortedTokenPairs[i];\r\n            const { reserve0, reserve1 } = reservesResult.result;\r\n            const pool = new Pair(CurrencyAmount.fromRawAmount(token0, reserve0.toString()), CurrencyAmount.fromRawAmount(token1, reserve1.toString()));\r\n            const poolAddress = sortedPoolAddresses[i];\r\n            poolAddressToPool[poolAddress] = pool;\r\n        }\r\n        if (invalidPools.length > 0) {\r\n            log.info({\r\n                invalidPools: _.map(invalidPools, ([token0, token1]) => `${token0.symbol}/${token1.symbol}`),\r\n            }, `${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);\r\n        }\r\n        const poolStrs = _.map(Object.values(poolAddressToPool), poolToString);\r\n        log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);\r\n        return {\r\n            getPool: (tokenA, tokenB) => {\r\n                const { poolAddress } = this.getPoolAddress(tokenA, tokenB);\r\n                return poolAddressToPool[poolAddress];\r\n            },\r\n            getPoolByAddress: (address) => poolAddressToPool[address],\r\n            getAllPools: () => Object.values(poolAddressToPool),\r\n        };\r\n    }\r\n    getPoolAddress(tokenA, tokenB) {\r\n        const [token0, token1] = tokenA.sortsBefore(tokenB)\r\n            ? [tokenA, tokenB]\r\n            : [tokenB, tokenA];\r\n        const cacheKey = `${this.chainId}/${token0.address}/${token1.address}`;\r\n        const cachedAddress = this.POOL_ADDRESS_CACHE[cacheKey];\r\n        if (cachedAddress) {\r\n            return { poolAddress: cachedAddress, token0, token1 };\r\n        }\r\n        const poolAddress = Pair.getAddress(token0, token1);\r\n        this.POOL_ADDRESS_CACHE[cacheKey] = poolAddress;\r\n        return { poolAddress, token0, token1 };\r\n    }\r\n    async getPoolsData(poolAddresses, functionName, providerConfig) {\r\n        const { results, blockNumber } = await retry(async () => {\r\n            return this.multicall2Provider.callSameFunctionOnMultipleContracts({\r\n                addresses: poolAddresses,\r\n                contractInterface: IUniswapV2Pair__factory.createInterface(),\r\n                functionName: functionName,\r\n                providerConfig,\r\n            });\r\n        }, this.retryOptions);\r\n        log.debug(`Pool data fetched as of block ${blockNumber}`);\r\n        return results;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUM3RCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDM0YsT0FBTyxFQUFXLGNBQWMsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNyRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBa0RqRCxNQUFNLE9BQU8sY0FBYztJQUt6Qjs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQzNDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQU5TLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FJckI7UUFqQkgseUVBQXlFO1FBQ3pFLGtEQUFrRDtRQUMxQyx1QkFBa0IsR0FBOEIsRUFBRSxDQUFDO0lBZ0J4RCxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsVUFBNEIsRUFDNUIsY0FBK0I7UUFFL0IsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDdEQsTUFBTSxnQkFBZ0IsR0FBMEIsRUFBRSxDQUFDO1FBQ25ELE1BQU0sbUJBQW1CLEdBQWEsRUFBRSxDQUFDO1FBRXpDLEtBQUssTUFBTSxTQUFTLElBQUksVUFBVSxFQUFF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","import { BigNumber } from '@ethersproject/bignumber';\r\nexport class OptimismGasDataProvider {\r\n    constructor(chainId, multicall2Provider, \r\n    //@ts-ignore\r\n    gasPriceAddress) {\r\n        this.chainId = chainId;\r\n        this.multicall2Provider = multicall2Provider;\r\n        if (chainId.toString() === \"651651651\") {\r\n            throw new Error('This data provider is used only on optimism networks.');\r\n        }\r\n    }\r\n    /**\r\n     * Gets the data constants needed to calculate the l1 security fee on Optimism.\r\n     * @returns An OptimismGasData object that includes the l1BaseFee,\r\n     * scalar, decimals, and overhead values.\r\n     */\r\n    async getGasData() {\r\n        //@ts-ignore\r\n        const funcNames = ['l1BaseFee', 'scalar', 'decimals', 'overhead'];\r\n        return {\r\n            l1BaseFee: BigNumber.from(0),\r\n            scalar: BigNumber.from(0),\r\n            decimals: BigNumber.from(0),\r\n            overhead: BigNumber.from(0),\r\n        };\r\n    }\r\n}\r\nexport class ArbitrumGasDataProvider {\r\n    constructor(chainId, provider, gasDataAddress) {\r\n        this.chainId = chainId;\r\n        this.provider = provider;\r\n        this.gasFeesAddress = gasDataAddress ? gasDataAddress : '';\r\n    }\r\n    async getGasData() {\r\n        return {\r\n            perL2TxFee: BigNumber.from(0),\r\n            perL1CalldataFee: BigNumber.from(0),\r\n            perArbGasTotal: BigNumber.from(0),\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWRhdGEtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL2dhcy1kYXRhLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQWlDckQsTUFBTSxPQUFPLHVCQUF1QjtJQUlsQyxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQztJQUNoRCxZQUFZO0lBQ1osZUFBd0I7UUFIZCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFJaEQsSUFBSSxPQUFPLENBQUMsUUFBUSxFQUFFLEtBQUssV0FBVyxFQUFFO1lBQ3RDLE1BQU0sSUFBSSxLQUFLLENBQUMsdURBQXVELENBQUMsQ0FBQztTQUMxRTtJQUVILENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksS0FBSyxDQUFDLFVBQVU7UUFDckIsWUFBWTtRQUNaLE1BQU0sU0FBUyxHQUFHLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFHbEUsT0FBTztZQUNMLFNBQVMsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM1QixNQUFNLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDekIsUUFBUSxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzNCLFFBQVEsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUM1QixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBYUQsTUFBTSxPQUFPLHVCQUF1QjtJQUtsQyxZQUNZLE9BQWdCLEVBQ2hCLFFBQXNCLEVBQ2hDLGNBQXVCO1FBRmIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixhQUFRLEdBQVIsUUFBUSxDQUFjO1FBR2hDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUM3RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFVBQVU7UUFDckIsT0FBTztZQUNMLFVBQVUsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM3QixnQkFBZ0IsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNuQyxjQUFjLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbEMsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [],\r\n        name: \"feeGrowthGlobal0X128\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"feeGrowthGlobal1X128\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"liquidity\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"\",\r\n                type: \"uint128\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"index\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"observations\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"blockTimestamp\",\r\n                type: \"uint32\",\r\n            },\r\n            {\r\n                internalType: \"int56\",\r\n                name: \"tickCumulative\",\r\n                type: \"int56\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"secondsPerLiquidityCumulativeX128\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"initialized\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"key\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"positions\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"_liquidity\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthInside0LastX128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthInside1LastX128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"tokensOwed0\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"tokensOwed1\",\r\n                type: \"uint128\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"protocolFees\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"token0\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"token1\",\r\n                type: \"uint128\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"slot0\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"int24\",\r\n                name: \"tick\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationIndex\",\r\n                type: \"uint16\",\r\n            },\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinality\",\r\n                type: \"uint16\",\r\n            },\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinalityNext\",\r\n                type: \"uint16\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"feeProtocol\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"unlocked\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"int16\",\r\n                name: \"wordPosition\",\r\n                type: \"int16\",\r\n            },\r\n        ],\r\n        name: \"tickBitmap\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"int24\",\r\n                name: \"tick\",\r\n                type: \"int24\",\r\n            },\r\n        ],\r\n        name: \"ticks\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint128\",\r\n                name: \"liquidityGross\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                internalType: \"int128\",\r\n                name: \"liquidityNet\",\r\n                type: \"int128\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthOutside0X128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthOutside1X128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"int56\",\r\n                name: \"tickCumulativeOutside\",\r\n                type: \"int56\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"secondsPerLiquidityOutsideX128\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"secondsOutside\",\r\n                type: \"uint32\",\r\n            },\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"initialized\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class IUniswapV3PoolState__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nIUniswapV3PoolState__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVVuaXN3YXBWM1Bvb2xTdGF0ZV9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy92My9mYWN0b3JpZXMvSVVuaXN3YXBWM1Bvb2xTdGF0ZV9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxXQUFXO1FBQ2pCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFT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","import { computePoolAddress, Pool } from '@uniswap/v3-sdk';\r\nimport retry from 'async-retry';\r\nimport _ from 'lodash';\r\nimport { IUniswapV3PoolState__factory } from '../../types/v3/factories/IUniswapV3PoolState__factory';\r\nimport { V3_CORE_FACTORY_ADDRESSES } from '../../util/addresses';\r\nimport { log } from '../../util/log';\r\nimport { poolToString } from '../../util/routes';\r\nexport class V3PoolProvider {\r\n    /**\r\n     * Creates an instance of V3PoolProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param multicall2Provider The multicall provider to use to get the pools.\r\n     * @param retryOptions The retry options for each call to the multicall.\r\n     */\r\n    constructor(chainId, multicall2Provider, retryOptions = {\r\n        retries: 2,\r\n        minTimeout: 50,\r\n        maxTimeout: 500,\r\n    }) {\r\n        this.chainId = chainId;\r\n        this.multicall2Provider = multicall2Provider;\r\n        this.retryOptions = retryOptions;\r\n        // Computing pool addresses is slow as it requires hashing, encoding etc.\r\n        // Addresses never change so can always be cached.\r\n        this.POOL_ADDRESS_CACHE = {};\r\n    }\r\n    async getPools(tokenPairs, providerConfig) {\r\n        const poolAddressSet = new Set();\r\n        const sortedTokenPairs = [];\r\n        const sortedPoolAddresses = [];\r\n        for (const tokenPair of tokenPairs) {\r\n            const [tokenA, tokenB, feeAmount] = tokenPair;\r\n            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB, feeAmount);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                continue;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            sortedTokenPairs.push([token0, token1, feeAmount]);\r\n            sortedPoolAddresses.push(poolAddress);\r\n        }\r\n        log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);\r\n        const [slot0Results, liquidityResults] = await Promise.all([\r\n            this.getPoolsData(sortedPoolAddresses, 'slot0', providerConfig),\r\n            this.getPoolsData(sortedPoolAddresses, 'liquidity', providerConfig),\r\n        ]);\r\n        log.info(`Got liquidity and slot0s for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? `as of block: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}.`\r\n            : ``}`);\r\n        const poolAddressToPool = {};\r\n        const invalidPools = [];\r\n        for (let i = 0; i < sortedPoolAddresses.length; i++) {\r\n            const slot0Result = slot0Results[i];\r\n            const liquidityResult = liquidityResults[i];\r\n            // These properties tell us if a pool is valid and initialized or not.\r\n            if (!(slot0Result === null || slot0Result === void 0 ? void 0 : slot0Result.success) ||\r\n                !(liquidityResult === null || liquidityResult === void 0 ? void 0 : liquidityResult.success) ||\r\n                slot0Result.result.sqrtPriceX96.eq(0)) {\r\n                const [token0, token1, fee] = sortedTokenPairs[i];\r\n                invalidPools.push([token0, token1, fee]);\r\n                continue;\r\n            }\r\n            const [token0, token1, fee] = sortedTokenPairs[i];\r\n            const slot0 = slot0Result.result;\r\n            const liquidity = liquidityResult.result[0];\r\n            const pool = new Pool(token0, token1, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);\r\n            const poolAddress = sortedPoolAddresses[i];\r\n            poolAddressToPool[poolAddress] = pool;\r\n        }\r\n        if (invalidPools.length > 0) {\r\n            log.info({\r\n                invalidPools: _.map(invalidPools, ([token0, token1, fee]) => `${token0.symbol}/${token1.symbol}/${fee / 10000}%`),\r\n            }, `${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);\r\n        }\r\n        const poolStrs = _.map(Object.values(poolAddressToPool), poolToString);\r\n        log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);\r\n        return {\r\n            getPool: (tokenA, tokenB, feeAmount) => {\r\n                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);\r\n                return poolAddressToPool[poolAddress];\r\n            },\r\n            getPoolByAddress: (address) => poolAddressToPool[address],\r\n            getAllPools: () => Object.values(poolAddressToPool),\r\n        };\r\n    }\r\n    getPoolAddress(tokenA, tokenB, feeAmount) {\r\n        const [token0, token1] = tokenA.sortsBefore(tokenB)\r\n            ? [tokenA, tokenB]\r\n            : [tokenB, tokenA];\r\n        const cacheKey = `${this.chainId}/${token0.address}/${token1.address}/${feeAmount}`;\r\n        const cachedAddress = this.POOL_ADDRESS_CACHE[cacheKey];\r\n        if (cachedAddress) {\r\n            return { poolAddress: cachedAddress, token0, token1 };\r\n        }\r\n        const poolAddress = computePoolAddress({\r\n            factoryAddress: V3_CORE_FACTORY_ADDRESSES[this.chainId],\r\n            tokenA: token0,\r\n            tokenB: token1,\r\n            fee: feeAmount,\r\n        });\r\n        this.POOL_ADDRESS_CACHE[cacheKey] = poolAddress;\r\n        return { poolAddress, token0, token1 };\r\n    }\r\n    async getPoolsData(poolAddresses, functionName, providerConfig) {\r\n        const { results, blockNumber } = await retry(async () => {\r\n            return this.multicall2Provider.callSameFunctionOnMultipleContracts({\r\n                addresses: poolAddresses,\r\n                contractInterface: IUniswapV3PoolState__factory.createInterface(),\r\n                functionName: functionName,\r\n                providerConfig,\r\n            });\r\n        }, this.retryOptions);\r\n        log.debug(`Pool data fetched as of block ${blockNumber}`);\r\n        return results;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsa0JBQWtCLEVBQWEsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUM3RCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFFckcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDakUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQThEakQsTUFBTSxPQUFPLGNBQWM7SUFLekI7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN0QyxlQUFtQztRQUMzQyxPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLEdBQUc7S0FDaEI7UUFOUyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsaUJBQVksR0FBWixZQUFZLENBSXJCO1FBakJILHlFQUF5RTtRQUN6RSxrREFBa0Q7UUFDMUMsdUJBQWtCLEdBQThCLEVBQUUsQ0FBQztJQWdCdkQsQ0FBQztJQUVFLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sZ0JBQWdCLEdBQXFDLEVBQUUsQ0FBQztRQUM5RCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUV6QyxLQUFLLE1BQU0sU0FB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","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            {\r\n                name: \"_owner\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"balanceOf\",\r\n        outputs: [\r\n            {\r\n                name: \"balance\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            {\r\n                name: \"_owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_spender\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        payable: true,\r\n        stateMutability: \"payable\",\r\n        type: \"fallback\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n];\r\nexport class Erc20__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nErc20__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXJjMjBfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvdHlwZXMvb3RoZXIvZmFjdG9yaWVzL0VyYzIwX19mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtDQUErQztBQUMvQyxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBR3BCLE9BQU8sRUFBRSxRQUFRLEVBQVUsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2pELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsUUFBUTthQUNmO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsS0FBSztRQUNkLGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxRQUFRLEVBQUUsS0FBSztRQUNmLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxVQUFVO2dCQUNoQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsU0FBUztRQUNmLE9BQU8sRUFBRTtZQUNQO2dCQUNFLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxNQUFNO2FBQ2I7U0FDRjtRQUNELE9BQU8sRUFBRSxLQUFLO1FBQ2QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLFFBQVEsRUFBRSxJQUFJO1FBQ2QsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsYUFBYTtRQUNuQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsT0FBTyxFQUFFLEtBQUs7UUFDZCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsUUFBUSxFQUFFLEtBQUs7UUFDZixNQUFNLEVBQUU7WUFDTjtnQkFDRSxJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLElBQUksRUFBRSxLQUFLO2dCQUNYLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxjQUFjO1FBQ3BCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxNQUFNO2FBQ2I7U0FDRjtRQUNELE9BQU8sRUFBRSxLQUFLO1FBQ2QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLFFBQVEsRUFBRSxJQUFJO1FBQ2QsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsVUFBVTtRQUNoQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsT0FBTzthQUNkO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsS0FBSztRQUNkLGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsV0FBVztRQUNqQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsU0FBUztnQkFDZixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsT0FBTyxFQUFFLEtBQUs7UUFDZCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsUUFBUSxFQUFFLElBQUk7UUFDZCxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFFBQVE7YUFDZjtTQUNGO1FBQ0QsT0FBTyxFQUFFLEtBQUs7UUFDZCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsUUFBUSxFQUFFLEtBQUs7UUFDZixNQUFNLEVBQUU7WUFDTjtnQkFDRSxJQUFJLEVBQUUsS0FBSztnQkFDWCxJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsVUFBVTtRQUNoQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsTUFBTTthQUNiO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsS0FBSztRQUNkLGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsV0FBVztRQUNqQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsT0FBTyxFQUFFLEtBQUs7UUFDZCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsT0FBTyxFQUFFLElBQUk7UUFDYixlQUFlLEVBQUUsU0FBUztRQUMxQixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsU0FBUyxFQUFFLEtBQUs7UUFDaEIsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixJQUFJLEVBQUUsU0FBUztnQkFDZixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxLQUFLO2dCQUNkLElBQUksRUFBRSxPQUFPO2dCQUNiLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxJQUFJO2dCQUNiLElBQUksRUFBRSxJQUFJO2dCQUNWLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxVQUFVO1FBQ2hCLElBQUksRUFBRSxPQUFPO0tBQ2Q7Q0FDRixDQUFDO0FBRUYsTUFBTSxPQUFPLGNBQWM7SUFFekIsTUFBTSxDQUFDLGVBQWU7UUFDcEIsT0FBTyxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFtQixDQUFDO0lBQ3JELENBQUM7SUFDRCxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWUsRUFBRSxnQkFBbUM7UUFDakUsT0FBTyxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixDQUFVLENBQUM7SUFDaEUsQ0FBQzs7QUFOZSxrQkFBRyxHQUFHLElBQUksQ0FBQyJ9","//@ts-nocheck\r\nimport { MixedRouteSDK, Protocol, SwapRouter as SwapRouter02, Trade, } from '@uniswap/router-sdk';\r\nimport { TradeType } from '@uniswap/sdk-core';\r\nimport { SwapRouter as UniveralRouter, UNIVERSAL_ROUTER_ADDRESS, } from '@uniswap/universal-router-sdk';\r\nimport { Route as V2RouteRaw } from '@uniswap/v2-sdk';\r\nimport { Route as V3RouteRaw } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { CurrencyAmount, SWAP_ROUTER_02_ADDRESSES, SwapType, } from '..';\r\nexport function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmounts) {\r\n    /// Removed partition because of new mixedRoutes\r\n    const v3RouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.V3);\r\n    const v2RouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.V2);\r\n    const mixedRouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.MIXED);\r\n    const v3Routes = _.map(v3RouteAmounts, (routeAmount) => {\r\n        const { route, amount, quote } = routeAmount;\r\n        // The route, amount and quote are all in terms of wrapped tokens.\r\n        // When constructing the Trade object the inputAmount/outputAmount must\r\n        // use native currencies if specified by the user. This is so that the Trade knows to wrap/unwrap.\r\n        if (tradeType == TradeType.EXACT_INPUT) {\r\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\r\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\r\n            const routeRaw = new V3RouteRaw(route.pools, amountCurrency.currency, quoteCurrency.currency);\r\n            return {\r\n                routev3: routeRaw,\r\n                inputAmount: amountCurrency,\r\n                outputAmount: quoteCurrency,\r\n            };\r\n        }\r\n        else {\r\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\r\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\r\n            const routeCurrency = new V3RouteRaw(route.pools, quoteCurrency.currency, amountCurrency.currency);\r\n            return {\r\n                routev3: routeCurrency,\r\n                inputAmount: quoteCurrency,\r\n                outputAmount: amountCurrency,\r\n            };\r\n        }\r\n    });\r\n    const v2Routes = _.map(v2RouteAmounts, (routeAmount) => {\r\n        const { route, amount, quote } = routeAmount;\r\n        // The route, amount and quote are all in terms of wrapped tokens.\r\n        // When constructing the Trade object the inputAmount/outputAmount must\r\n        // use native currencies if specified by the user. This is so that the Trade knows to wrap/unwrap.\r\n        if (tradeType == TradeType.EXACT_INPUT) {\r\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\r\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\r\n            const routeV2SDK = new V2RouteRaw(route.pairs, amountCurrency.currency, quoteCurrency.currency);\r\n            return {\r\n                routev2: routeV2SDK,\r\n                inputAmount: amountCurrency,\r\n                outputAmount: quoteCurrency,\r\n            };\r\n        }\r\n        else {\r\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\r\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\r\n            const routeV2SDK = new V2RouteRaw(route.pairs, quoteCurrency.currency, amountCurrency.currency);\r\n            return {\r\n                routev2: routeV2SDK,\r\n                inputAmount: quoteCurrency,\r\n                outputAmount: amountCurrency,\r\n            };\r\n        }\r\n    });\r\n    const mixedRoutes = _.map(mixedRouteAmounts, (routeAmount) => {\r\n        const { route, amount, quote } = routeAmount;\r\n        if (tradeType != TradeType.EXACT_INPUT) {\r\n            throw new Error('Mixed routes are only supported for exact input trades');\r\n        }\r\n        // The route, amount and quote are all in terms of wrapped tokens.\r\n        // When constructing the Trade object the inputAmount/outputAmount must\r\n        // use native currencies if specified by the user. This is so that the Trade knows to wrap/unwrap.\r\n        const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, \r\n        //@ts-ignore\r\n        amount.numerator, \r\n        //@ts-ignore\r\n        amount.denominator);\r\n        //@ts-ignore\r\n        const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, \r\n        //@ts-ignore\r\n        quote.numerator, \r\n        //@ts-ignore\r\n        quote.denominator);\r\n        const routeRaw = new MixedRouteSDK(route.pools, amountCurrency.currency, quoteCurrency.currency);\r\n        return {\r\n            mixedRoute: routeRaw,\r\n            inputAmount: amountCurrency,\r\n            outputAmount: quoteCurrency,\r\n        };\r\n    });\r\n    //@ts-ignore\r\n    const trade = new Trade({ v2Routes, v3Routes, mixedRoutes, tradeType });\r\n    return trade;\r\n}\r\nexport function buildSwapMethodParameters(trade, swapConfig, chainId) {\r\n    if (swapConfig.type == SwapType.UNIVERSAL_ROUTER) {\r\n        return {\r\n            ...UniveralRouter.swapERC20CallParameters(trade, swapConfig),\r\n            to: UNIVERSAL_ROUTER_ADDRESS(chainId),\r\n        };\r\n    }\r\n    else if (swapConfig.type == SwapType.SWAP_ROUTER_02) {\r\n        const { recipient, slippageTolerance, deadline, inputTokenPermit } = swapConfig;\r\n        return {\r\n            ...SwapRouter02.swapCallParameters(trade, {\r\n                recipient,\r\n                slippageTolerance,\r\n                deadlineOrPreviousBlockhash: deadline,\r\n                inputTokenPermit,\r\n            }),\r\n            to: SWAP_ROUTER_02_ADDRESSES(chainId),\r\n        };\r\n    }\r\n    throw new Error(`Unsupported swap type ${swapConfig}`);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0aG9kUGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL21ldGhvZFBhcmFtZXRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQUNiLE9BQU8sRUFDTCxhQUFhLEVBQ2IsUUFBUSxFQUNSLFVBQVUsSUFBSSxZQUFZLEVBQzFCLEtBQUssR0FDTixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBWSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN4RCxPQUFPLEVBQ0wsVUFBVSxJQUFJLGNBQWMsRUFDNUIsd0JBQXdCLEdBQ3pCLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsS0FBSyxJQUFJLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBRUwsY0FBYyxFQUlkLHdCQUF3QixFQUV4QixRQUFRLEdBR1QsTUFBTSxJQUFJLENBQUM7QUFFWixNQUFNLFVBQVUsVUFBVSxDQUN4QixlQUF5QixFQUN6QixnQkFBMEIsRUFDMUIsU0FBcUIsRUFDckIsWUFBbUM7SUFFbkMsZ0RBQWdEO0lBQ2hELE1BQU0sY0FBYyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQzdCLFlBQVksRUFDWixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsRUFBRSxDQUN0RCxDQUFDO0lBQ0YsTUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDN0IsWUFBWSxFQUNaLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxFQUFFLENBQ3RELENBQUM7SUFDRixNQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxNQUFN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","export const UNSUPPORTED_TOKENS = {\r\n    name: 'Unsupported Token List',\r\n    timestamp: '2021-01-05T20:47:02.923Z',\r\n    version: {\r\n        major: 1,\r\n        minor: 0,\r\n        patch: 0,\r\n    },\r\n    tags: {},\r\n    logoURI: 'ipfs://QmNa8mQkrNKp1WEEeGjFezDmDeodkWRevGFN8JCV7b4Xir',\r\n    keywords: ['uniswap', 'unsupported', 'broken'],\r\n    tokens: [\r\n        {\r\n            name: 'USD Token',\r\n            address: '0xd233d1f6fd11640081abb8db125f722b5dc729dc',\r\n            symbol: 'USD',\r\n            decimals: 9,\r\n            chainId: 1,\r\n            logoURI: '',\r\n        },\r\n        {\r\n            name: 'UNI HODL',\r\n            address: '0x4bf5dc91E2555449293D7824028Eb8Fe5879B689',\r\n            symbol: 'UniH',\r\n            decimals: 18,\r\n            chainId: 1,\r\n            logoURI: '',\r\n        },\r\n        {\r\n            name: 'Gold Tether',\r\n            address: '0x4922a015c4407F87432B179bb209e125432E4a2A',\r\n            symbol: 'XAUt',\r\n            decimals: 6,\r\n            chainId: 1,\r\n            logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png',\r\n        },\r\n        {\r\n            name: 'Grump Cat',\r\n            address: '0x93B2FfF814FCaEFFB01406e80B4Ecd89Ca6A021b',\r\n            symbol: 'GRUMPY',\r\n            decimals: 9,\r\n            chainId: 1,\r\n            logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png',\r\n        },\r\n        {\r\n            name: 'apeUSD-UMA Synthetic USD (Dec 2021)',\r\n            address: '0xfA5e27893aee4805283D86e4283Da64F8c72dd56',\r\n            symbol: 'apeUSD-UMA-DEC21',\r\n            decimals: 18,\r\n            chainId: 1,\r\n            logoURI: '',\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xc6b11850241c5127eab73af4b6c68bc267cbbff4',\r\n            name: 'oWETHp Put 360 DEC2520',\r\n            symbol: 'oWETH-360P-12/25/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oYFIp Put 25000 OCT0220',\r\n            address: '0x452b421be5b30f0c6ad8c3f03c06bdaab4f5c56c',\r\n            symbol: 'oYFI-25000P-10/02/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oWETHp Put 360 OCT3020',\r\n            address: '0x0578779e746d7186253a36cf651ea786acfcf087',\r\n            symbol: 'oWETH-360P-10/30/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'ETHc Call 500 OCT3020',\r\n            address: '0xf9aba2e43fb19184408ea3b572a0fd672946f87b',\r\n            symbol: 'oETH-500C-10/30/20',\r\n            decimals: 6,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oBALp Put 22 OCT0220',\r\n            address: '0xdb0991dfc7e828b5a2837dc82d68e16490562c8d',\r\n            symbol: 'oBAL-22P-10/02/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oCOMPp Put 150 SEP2520',\r\n            address: '0xe951ebe6b4420ab3f4844cf36dedd263d095b416',\r\n            symbol: 'oCOMP-150P-09/25/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oCRVp Put 3 SEP252020',\r\n            address: '0x9215bd49b59748419eac6bad9dbe247df06ebdb9',\r\n            symbol: 'oCRV-3P-09/25/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oETHp Put 180 SEP2520',\r\n            address: '0xE3A2c34Fa2F59ffa95C4ACd1E5663633d45Bc3AD',\r\n            symbol: 'oETH-180P-09/25/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oETHc Call 400 SEP2520',\r\n            address: '0x05977EBC26825C0CD6097E0Ad7204721516711Eb',\r\n            symbol: 'oETH-400C-09/25/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oWETHp Put 380 SEP1820',\r\n            address: '0x31f88266301b08631f9f0e33fd5c43c2a5d1e5b2',\r\n            symbol: 'oWETH-380P-09/18/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oYFIp Put 8500 SEP1820',\r\n            address: '0xd1cec2f67fdc4c60e0963515dfc3343f31e32e47',\r\n            symbol: 'oYFI-8500P-09/18/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oWETHp Put 370 SEP1120',\r\n            address: '0x15844029b2c2bf24506e9937739a9a912f1e4354',\r\n            symbol: 'oWETH-370P-09/11/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oWETHp Put 400 SEP0420',\r\n            address: '0x5562c33c383f6386be4f6dcdbd35a3a99bbcfde6',\r\n            symbol: 'oWETH-400P-09/04/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'oETHp Put 200 AUG2820',\r\n            address: '0x3CBFC1397deF0602c2d211c70A1c0c38CEDB5448',\r\n            symbol: 'oWETH-400P-09/04/20',\r\n            decimals: 7,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'Opyn cDai Insurance',\r\n            symbol: 'ocDai',\r\n            address: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\r\n            decimals: 8,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            name: 'Opyn cUSDC Insurance',\r\n            symbol: 'ocUSDC',\r\n            address: '0x8ED9f862363fFdFD3a07546e618214b6D59F03d4',\r\n            decimals: 8,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x176C674Ee533C6139B0dc8b458D72A93dCB3e705',\r\n            symbol: 'iAAVE',\r\n            name: 'Synth Inverse Aave',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iAAVE.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x8A8079c7149B8A1611e5C5d978DCA3bE16545F83',\r\n            symbol: 'iADA',\r\n            name: 'Synth Inverse Cardano',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iADA.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xAFD870F32CE54EfdBF677466B612bf8ad164454B',\r\n            symbol: 'iBNB',\r\n            name: 'Synth Inverse Binance Coin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBNB.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xD6014EA05BDe904448B743833dDF07c3C7837481',\r\n            symbol: 'iBTC',\r\n            name: 'Synth Inverse Bitcoin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBTC.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x336213e1DDFC69f4701Fc3F86F4ef4A160c1159d',\r\n            symbol: 'iCEX',\r\n            name: 'Synth Inverse Centralised Exchange Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCEX.svg',\r\n            tags: ['index', 'inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x6345728B1ccE16E6f8C509950b5c84FFF88530d9',\r\n            symbol: 'iCOMP',\r\n            name: 'Synth Inverse Compound',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCOMP.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xCB98f42221b2C251A4E74A1609722eE09f0cc08E',\r\n            symbol: 'iDASH',\r\n            name: 'Synth Inverse Dash',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDASH.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x14d10003807AC60d07BB0ba82cAeaC8d2087c157',\r\n            symbol: 'iDEFI',\r\n            name: 'Synth Inverse DeFi Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDEFI.svg',\r\n            tags: ['index', 'inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x46a97629C9C1F58De6EC18C7F536e7E6d6A6ecDe',\r\n            symbol: 'iDOT',\r\n            name: 'Synth Inverse Polkadot',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDOT.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xF4EebDD0704021eF2a6Bbe993fdf93030Cd784b4',\r\n            symbol: 'iEOS',\r\n            name: 'Synth Inverse EOS',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iEOS.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xd50c1746D835d2770dDA3703B69187bFfeB14126',\r\n            symbol: 'iETC',\r\n            name: 'Synth Inverse Ethereum Classic',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETC.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xA9859874e1743A32409f75bB11549892138BBA1E',\r\n            symbol: 'iETH',\r\n            name: 'Synth Inverse Ether',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETH.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x2d7aC061fc3db53c39fe1607fB8cec1B2C162B01',\r\n            symbol: 'iLINK',\r\n            name: 'Synth Inverse Chainlink',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLINK.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x79da1431150C9b82D2E5dfc1C68B33216846851e',\r\n            symbol: 'iLTC',\r\n            name: 'Synth Inverse Litecoin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLTC.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xA5a5DF41883Cdc00c4cCC6E8097130535399d9a3',\r\n            symbol: 'iOIL',\r\n            name: 'Synth Inverse Perpetual Oil Futures',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iOIL.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x0fEd38108bdb8e62ef7b5680E8E0726E2F29e0De',\r\n            symbol: 'iREN',\r\n            name: 'Synth Inverse Ren',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iREN.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xC5807183a9661A533CB08CbC297594a0B864dc12',\r\n            symbol: 'iTRX',\r\n            name: 'Synth Inverse TRON',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iTRX.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x36A00FF9072570eF4B9292117850B8FE08d96cce',\r\n            symbol: 'iUNI',\r\n            name: 'Synth Inverse Uniswap',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iUNI.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x4AdF728E2Df4945082cDD6053869f51278fae196',\r\n            symbol: 'iXMR',\r\n            name: 'Synth Inverse Monero',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXMR.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x27269b3e45A4D3E79A3D6BFeE0C8fB13d0D711A6',\r\n            symbol: 'iXRP',\r\n            name: 'Synth Inverse Ripple',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXRP.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x8deef89058090ac5655A99EEB451a4f9183D1678',\r\n            symbol: 'iXTZ',\r\n            name: 'Synth Inverse Tezos',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXTZ.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x592244301CeA952d6daB2fdC1fE6bd9E53917306',\r\n            symbol: 'iYFI',\r\n            name: 'Synth Inverse yearn.finance',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iYFI.svg',\r\n            tags: ['inverse', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xcD39b5434a0A92cf47D1F567a7dF84bE356814F0',\r\n            symbol: 's1INCH',\r\n            name: 'Synth 1inch',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/s1INCH.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x7537AAe01f3B218DAE75e10d952473823F961B87',\r\n            symbol: 'sAAPL',\r\n            name: 'Synth Apple',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAPL.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xd2dF355C19471c8bd7D8A3aa27Ff4e26A21b4076',\r\n            symbol: 'sAAVE',\r\n            name: 'Synth Aave',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAVE.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xe36E2D3c7c34281FA3bC737950a68571736880A1',\r\n            symbol: 'sADA',\r\n            name: 'Synth Cardano',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sADA.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x9CF7E61853ea30A41b02169391b393B901eac457',\r\n            symbol: 'sAMZN',\r\n            name: 'Synth Amazon',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAMZN.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xF48e200EAF9906362BB1442fca31e0835773b8B4',\r\n            symbol: 'sAUD',\r\n            name: 'Synth Australian Dollars',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAUD.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x617aeCB6137B5108D1E7D4918e3725C8cEbdB848',\r\n            symbol: 'sBNB',\r\n            name: 'Synth Binance Coin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBNB.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',\r\n            symbol: 'sBTC',\r\n            name: 'Synth Bitcoin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBTC.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xeABACD844A196D7Faf3CE596edeBF9900341B420',\r\n            symbol: 'sCEX',\r\n            name: 'Synth Centralised Exchange Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCEX.svg',\r\n            tags: ['index', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x0F83287FF768D1c1e17a42F44d644D7F22e8ee1d',\r\n            symbol: 'sCHF',\r\n            name: 'Synth Swiss Franc',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCHF.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x9EeF4CA7aB9fa8bc0650127341C2d3F707a40f8A',\r\n            symbol: 'sCOIN',\r\n            name: 'Synth Coinbase',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOIN.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xEb029507d3e043DD6C87F2917C4E82B902c35618',\r\n            symbol: 'sCOMP',\r\n            name: 'Synth Compound',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOMP.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xD38aEb759891882e78E957c80656572503D8c1B1',\r\n            symbol: 'sCRV',\r\n            name: 'Synth Curve DAO Token',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCRV.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xfE33ae95A9f0DA8A845aF33516EDc240DCD711d6',\r\n            symbol: 'sDASH',\r\n            name: 'Synth Dash',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDASH.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xe1aFe1Fd76Fd88f78cBf599ea1846231B8bA3B6B',\r\n            symbol: 'sDEFI',\r\n            name: 'Synth DeFi Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDEFI.svg',\r\n            tags: ['index', 'synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x1715AC0743102BF5Cd58EfBB6Cf2dC2685d967b6',\r\n            symbol: 'sDOT',\r\n            name: 'Synth Polkadot',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDOT.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x88C8Cf3A212c0369698D13FE98Fcb76620389841',\r\n            symbol: 'sEOS',\r\n            name: 'Synth EOS',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEOS.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x22602469d704BfFb0936c7A7cfcD18f7aA269375',\r\n            symbol: 'sETC',\r\n            name: 'Synth Ethereum Classic',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETC.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb',\r\n            symbol: 'sETH',\r\n            name: 'Synth Ether',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETH.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',\r\n            symbol: 'sEUR',\r\n            name: 'Synth Euros',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEUR.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xf50B5e535F62a56A9BD2d8e2434204E726c027Fa',\r\n            symbol: 'sFB',\r\n            name: 'Synth Facebook',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFB.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x23348160D7f5aca21195dF2b70f28Fce2B0be9fC',\r\n            symbol: 'sFTSE',\r\n            name: 'Synth FTSE 100 Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFTSE.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x97fe22E7341a0Cd8Db6F6C021A24Dc8f4DAD855F',\r\n            symbol: 'sGBP',\r\n            name: 'Synth Pound Sterling',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGBP.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xC63B8ECCE56aB9C46184eC6aB85e4771fEa4c8AD',\r\n            symbol: 'sGOOG',\r\n            name: 'Synth Alphabet',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGOOG.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xF6b1C627e95BFc3c1b4c9B825a032Ff0fBf3e07d',\r\n            symbol: 'sJPY',\r\n            name: 'Synth Japanese Yen',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sJPY.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x269895a3dF4D73b077Fc823dD6dA1B95f72Aaf9B',\r\n            symbol: 'sKRW',\r\n            name: 'Synth South Korean Won',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sKRW.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6',\r\n            symbol: 'sLINK',\r\n            name: 'Synth Chainlink',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLINK.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xC14103C2141E842e228FBaC594579e798616ce7A',\r\n            symbol: 'sLTC',\r\n            name: 'Synth Litecoin',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLTC.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x745a824D6aBBD236AA794b5530062778A6Ad7523',\r\n            symbol: 'sMSFT',\r\n            name: 'Synth Microsoft',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sMSFT.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x5A7E3c07604EB515C16b36cd51906a65f021F609',\r\n            symbol: 'sNFLX',\r\n            name: 'Synth Netflix',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNFLX.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x757de3ac6B830a931eF178C6634c5C551773155c',\r\n            symbol: 'sNIKKEI',\r\n            name: 'Synth Nikkei 225 Index',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNIKKEI.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x6d16cF3EC5F763d4d99cB0B0b110eefD93B11B56',\r\n            symbol: 'sOIL',\r\n            name: 'Synth Perpetual Oil Futures',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sOIL.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xD31533E8d0f3DF62060e94B3F1318137bB6E3525',\r\n            symbol: 'sREN',\r\n            name: 'Synth Ren',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sREN.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x0352557B007A4Aae1511C114409b932F06F9E2f4',\r\n            symbol: 'sRUNE',\r\n            name: 'Synth THORChain',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sRUNE.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xf2E08356588EC5cd9E437552Da87C0076b4970B0',\r\n            symbol: 'sTRX',\r\n            name: 'Synth TRON',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTRX.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x918dA91Ccbc32B7a6A0cc4eCd5987bbab6E31e6D',\r\n            symbol: 'sTSLA',\r\n            name: 'Synth Tesla',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTSLA.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x30635297E450b930f8693297eBa160D9e6c8eBcf',\r\n            symbol: 'sUNI',\r\n            name: 'Synth Uniswap',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sUNI.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x6A22e5e94388464181578Aa7A6B869e00fE27846',\r\n            symbol: 'sXAG',\r\n            name: 'Synth Silver Ounce',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAG.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x261EfCdD24CeA98652B9700800a13DfBca4103fF',\r\n            symbol: 'sXAU',\r\n            name: 'Synth Gold Ounce',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAU.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x5299d6F7472DCc137D7f3C4BcfBBB514BaBF341A',\r\n            symbol: 'sXMR',\r\n            name: 'Synth Monero',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXMR.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xa2B0fDe6D710e201d0d608e924A484d1A5fEd57c',\r\n            symbol: 'sXRP',\r\n            name: 'Synth Ripple',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXRP.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x2e59005c5c0f0a4D77CcA82653d48b46322EE5Cd',\r\n            symbol: 'sXTZ',\r\n            name: 'Synth Tezos',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXTZ.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x992058B7DB08F9734d84485bfbC243C4ee6954A7',\r\n            symbol: 'sYFI',\r\n            name: 'Synth yearn.finance',\r\n            decimals: 18,\r\n            logoURI: 'https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sYFI.svg',\r\n            tags: ['synth'],\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x81ab848898b5ffD3354dbbEfb333D5D183eEDcB5',\r\n            name: 'yUSD Synthetic Expiring 1 September 2020',\r\n            symbol: 'yUSDSEP20',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xB2FdD60AD80ca7bA89B9BAb3b5336c2601C020b4',\r\n            name: 'yUSD Synthetic Expiring 1 October 2020',\r\n            symbol: 'yUSDOCT20',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x208d174775dc39fe18b1b374972f77ddec6c0f73',\r\n            name: 'uUSDrBTC Synthetic Expiring 1 Oct 2020',\r\n            symbol: 'uUSDrBTC-OCT',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xf06ddacf71e2992e2122a1a0168c6967afdf63ce',\r\n            name: 'uUSDrBTC Synthetic Expiring 31 Dec 2020',\r\n            symbol: 'uUSDrBTC-DEC',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xd16c79c8a39d44b2f3eb45d2019cd6a42b03e2a9',\r\n            name: 'uUSDwETH Synthetic Expiring 31 Dec 2020',\r\n            symbol: 'uUSDwETH-DEC',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x3d995510f8d82c2ea341845932b5ddde0bead9a3',\r\n            name: 'uGAS-JAN21 Token Expiring 31 Jan 2021',\r\n            symbol: 'uGAS-JAN21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x90f802c7e8fb5d40b0de583e34c065a3bd2020d8',\r\n            name: 'YD-ETH-MAR21 Token Expiring 31 Mar 2021',\r\n            symbol: 'YD-ETH-MAR21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x002f0b1a71c5730cf2f4da1970a889207bdb6d0d',\r\n            name: 'YD-BTC-MAR21 Token Expiring 31 Mar 2021',\r\n            symbol: 'YD-BTC-MAR21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x1062ad0e59fa67fa0b27369113098cc941dd0d5f',\r\n            name: 'UMA 35 Call Expirying 30 Apr 2021',\r\n            symbol: 'UMAc35-0421',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xf93340b1a3adf7eedcaec25fae8171d4b736e89f',\r\n            name: 'pxUSD Synthetic USD Expiring 1 April 2021',\r\n            symbol: 'pxUSD_MAR2021',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x84bd083b1c8bf929f39c98bc17cf518f40154f58',\r\n            name: 'Mario Cash Synthetic Token Expiring 15 January 2021',\r\n            symbol: 'Mario Cash-JAN-2021',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x81fab276aec924fbde190cf379783526d413cf70',\r\n            name: 'uGAS-FEB21 Token Expiring 28 Feb 2021',\r\n            symbol: 'uGAS-FEB21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x4e110603e70b0b5f1c403ee543b37e1f1244cf28',\r\n            name: 'uGAS-MAR21 Token Expiring 31 Mar 2021',\r\n            symbol: 'uGAS-MAR21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xcf55a7f92d5e0c6683debbc1fc20c0a6e056df13',\r\n            name: 'Zelda Elastic Cash',\r\n            symbol: 'Zelda Elastic Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x654eebac62240e6c56bab5f6adf7cfa74a894510',\r\n            name: 'Zelda Spring Nuts Cash',\r\n            symbol: 'Zelda Spring Nuts Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xa48920cc1ad85d8ea13af5d7be180c0338c306dd',\r\n            name: 'Zelda Summer Nuts Cash',\r\n            symbol: 'Zelda Summer Nuts Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x249a198d59b57fda5dda90630febc86fd8c7594c',\r\n            name: 'Zelda Whirlwind Cash',\r\n            symbol: 'Zelda Whirlwind Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x5ed1406873c9eb91f6f9a67ac4e152387c1132e7',\r\n            name: 'Zelda Reinforced Cash',\r\n            symbol: 'Zelda Reinforced Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x8104c9f13118320eefe5fbea8a44d600b85981ef',\r\n            name: 'Mini Mario Summer Cash',\r\n            symbol: 'Mini Mario Summer Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x69746c719e59674b147df25f50e7cfa0673cb625',\r\n            name: 'Mini Mario Spring Cash',\r\n            symbol: 'Mini Mario Spring Cash',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x6b1257641d18791141f025eab36fb567c4b564ff',\r\n            name: 'Bitcoin Dominance Token 31 March 2021',\r\n            symbol: 'BTCDOM-MAR2021',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x4e83b6287588a96321b2661c5e041845ff7814af',\r\n            name: 'Altcoin Dominance Token 31 March 2021',\r\n            symbol: 'ALTDOM-MAR2021',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x59fec83ec709c893aedd1a144cf1828eb04127cd',\r\n            name: 'pxGOLD Synthetic GOLD Expiring 31 May 2021',\r\n            symbol: 'pxGOLD_MAY2021',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x89337BFb7938804c3776C9FB921EccAf5ab76758',\r\n            name: 'Compound Annualized Rate Future Expiring 28 March 2021',\r\n            symbol: 'CAR-USDC-MAR21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xec58d3aefc9aaa2e0036fa65f70d569f49d9d1ed',\r\n            name: 'uSTONKS Index Token April 2021',\r\n            symbol: 'uSTONKS_APR21',\r\n            decimals: 6,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xa6B9d7E3d76cF23549293Fb22c488E0Ea591A44e',\r\n            name: 'uGAS-JUN21 Token Expiring 30 Jun 2021',\r\n            symbol: 'uGAS-JUN21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xe813b65da6c38a04591aed3f082d32db7d53c382',\r\n            name: 'Yield Dollar [WETH Dec 2021]',\r\n            symbol: 'YD-ETH-DEC21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x4b606e9eb2228c70f44453afe5a73e1fea258ce1',\r\n            name: 'pxUSD Synthetic USD Expiring 31 Mar 2022',\r\n            symbol: 'pxUSD_MAR2022',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x5247c0db4044fb6f97f32c7e1b48758019a5a912',\r\n            name: 'pxGOLD Synthetic Gold Expiring 31 Mar 2022',\r\n            symbol: 'pxGOLD_MAR2022',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x56fb1acaff95c0b6ebcd17c8361a63d98b1a5a11',\r\n            name: 'uForex CNYUSD Synthetic Token April 2021',\r\n            symbol: 'uCNYUSD-APR',\r\n            decimals: 6,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xd49fa405dce086c65d66ca1ca41f8e98583812b4',\r\n            name: 'uForex EURUSD Synthetic Token April 2021',\r\n            symbol: 'uEURUSD-APR',\r\n            decimals: 6,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x29dddacba3b231ee8d673dd0f0fa759ea145561b',\r\n            name: 'DEFI_PULSE_TOTAL_TVL Synthetic Token Expiring 15 April 2021',\r\n            symbol: 'TVL_ALL_APRIL15',\r\n            decimals: 6,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xcbe430927370e95b4b10cfc702c6017ec7abefc3',\r\n            name: 'Yield Dollar [WETH Jun 2021]',\r\n            symbol: 'YD-ETH-JUN21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x4b7fb448df91c8ed973494f8c8c4f12daf3a8521',\r\n            name: 'Yield Dollar [renBTC Jun 2021]',\r\n            symbol: 'YD-BTC-JUN21',\r\n            decimals: 8,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x3108c33b6fb38efedaefd8b5f7ca01d5f5c7372d',\r\n            name: 'Yield Dollar UMA 21',\r\n            symbol: 'yUMA21',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7',\r\n            name: 'Mirrored Amazon',\r\n            symbol: 'MAMZN',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x31c63146a635EB7465e5853020b39713AC356991',\r\n            name: 'M US Oil',\r\n            symbol: 'MUSO',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x59A921Db27Dd6d4d974745B7FfC5c33932653442',\r\n            name: 'M Google',\r\n            symbol: 'MGOOGL',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86',\r\n            name: 'Mirrored ProShares',\r\n            symbol: 'MVIXY',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72',\r\n            name: 'Mirrored Alibaba',\r\n            symbol: 'MBABA',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x0e99cC0535BB6251F6679Fa6E65d6d3b430e840B',\r\n            name: 'Mirrored Facebook',\r\n            symbol: 'MFB',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x13B02c8dE71680e71F0820c996E4bE43c2F57d15',\r\n            name: 'Mirrored Invesco QQ',\r\n            symbol: 'MQQQ',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x41BbEDd7286dAab5910a1f15d12CBda839852BD7',\r\n            name: 'Mirrored Microsoft',\r\n            symbol: 'MMSFT',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676',\r\n            name: 'Mirrored iShares Si',\r\n            symbol: 'MSLV',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x21cA39943E91d704678F5D00b6616650F066fD63',\r\n            name: 'Mirrored Tesla',\r\n            symbol: 'MTSLA',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0xe82bbB62fA81d0701643d1675FB50ec52fD3Df92',\r\n            name: 'DYDX Token',\r\n            symbol: 'DYDX',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 10,\r\n            address: '0xE405de8F52ba7559f9df3C368500B6E6ae6Cee49',\r\n            name: 'sETH',\r\n            symbol: 'Synth Ether',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 10,\r\n            address: '0x298B9B95708152ff6968aafd889c6586e9169f1D',\r\n            name: 'sBTC',\r\n            symbol: 'Synth Bitcoin',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 10,\r\n            address: '0xc5Db22719A06418028A40A9B5E9A7c02959D0d08',\r\n            name: 'sLINK',\r\n            symbol: 'Synth Link',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x6B60eE11b73230045cF9095E6e43AE9Ea638e172',\r\n            name: 'Shatner',\r\n            symbol: 'SHAT',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x7277a44D1325D81Ac58893002a1B40a41bea43fe',\r\n            name: 'FAANG Index',\r\n            symbol: 'FAANG',\r\n            decimals: 18,\r\n        },\r\n        {\r\n            chainId: 1,\r\n            address: '0x76175599887730786bdA1545D0D7AcE8737fEBB1',\r\n            name: 'ENS DAO',\r\n            symbol: 'ENS',\r\n            decimals: 18,\r\n        },\r\n    ],\r\n};\r\n//# sourceMappingURL=data:application/json;base64,","import { MixedRouteSDK, Protocol, } from '@uniswap/router-sdk';\r\nimport { Route as V2RouteRaw } from '@uniswap/v2-sdk';\r\nimport { Route as V3RouteRaw, } from '@uniswap/v3-sdk';\r\nexport class V3Route extends V3RouteRaw {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.protocol = Protocol.V3;\r\n    }\r\n}\r\nexport class V2Route extends V2RouteRaw {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.protocol = Protocol.V2;\r\n    }\r\n}\r\nexport class MixedRoute extends MixedRouteSDK {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.protocol = Protocol.MIXED;\r\n    }\r\n}\r\nexport var SwapToRatioStatus;\r\n(function (SwapToRatioStatus) {\r\n    SwapToRatioStatus[SwapToRatioStatus[\"SUCCESS\"] = 1] = \"SUCCESS\";\r\n    SwapToRatioStatus[SwapToRatioStatus[\"NO_ROUTE_FOUND\"] = 2] = \"NO_ROUTE_FOUND\";\r\n    SwapToRatioStatus[SwapToRatioStatus[\"NO_SWAP_NEEDED\"] = 3] = \"NO_SWAP_NEEDED\";\r\n})(SwapToRatioStatus || (SwapToRatioStatus = {}));\r\nexport var SwapType;\r\n(function (SwapType) {\r\n    SwapType[SwapType[\"UNIVERSAL_ROUTER\"] = 0] = \"UNIVERSAL_ROUTER\";\r\n    SwapType[SwapType[\"SWAP_ROUTER_02\"] = 1] = \"SWAP_ROUTER_02\";\r\n})(SwapType || (SwapType = {}));\r\n/**\r\n * Provides functionality for finding optimal swap routes on the Uniswap protocol.\r\n *\r\n * @export\r\n * @abstract\r\n * @class IRouter\r\n */\r\nexport class IRouter {\r\n}\r\nexport class ISwapToRatio {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFFTCxhQUFhLEVBQ2IsUUFBUSxHQUVULE1BQU0scUJBQXFCLENBQUM7QUFTN0IsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBSUwsS0FBSyxJQUFJLFVBQVUsR0FDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQU96QixNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sVUFBVyxTQUFRLGFBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFnRUQsTUFBTSxDQUFOLElBQVksaUJBSVg7QUFKRCxXQUFZLGlCQUFpQjtJQUMzQiwrREFBVyxDQUFBO0lBQ1gsNkVBQWtCLENBQUE7SUFDbEIsNkVBQWtCLENBQUE7QUFDcEIsQ0FBQyxFQUpXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFJNUI7QUFxQkQsTUFBTSxDQUFOLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiwrREFBZ0IsQ0FBQTtJQUNoQiwyREFBYyxDQUFBO0FBQ2hCLENBQUMsRUFIVyxRQUFRLEtBQVIsUUFBUSxRQUduQjtBQTBERDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQWdCLE9BQU87Q0FvQjVCO0FBRUQsTUFBTSxPQUFnQixZQUFZO0NBU2pDIn0=","import { USDC_FUJI } from '../../../providers/token-provider';\r\nimport { ChainId } from '../../../util/chains';\r\nexport const usdGasTokensByChain = {\r\n    [ChainId.FUJI]: [USDC_FUJI],\r\n};\r\n/**\r\n * Factory for building gas models that can be used with any route to generate\r\n * gas estimates.\r\n *\r\n * Factory model is used so that any supporting data can be fetched once and\r\n * returned as part of the model.\r\n *\r\n * @export\r\n * @abstract\r\n * @class IV2GasModelFactory\r\n */\r\nexport class IV2GasModelFactory {\r\n}\r\n/**\r\n * Factory for building gas models that can be used with any route to generate\r\n * gas estimates.\r\n *\r\n * Factory model is used so that any supporting data can be fetched once and\r\n * returned as part of the model.\r\n *\r\n * @export\r\n * @abstract\r\n * @class IOnChainGasModelFactory\r\n */\r\nexport class IOnChainGasModelFactory {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFDTCxTQUFTLEVBQ1YsTUFBTSxtQ0FBbUMsQ0FBQztBQVMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFRL0MsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQXVDO0lBQ3JFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO0NBQzVCLENBQUM7QUFvREY7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQU0sT0FBZ0Isa0JBQWtCO0NBT3ZDO0FBRUQ7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQU0sT0FBZ0IsdUJBQXVCO0NBWTVDIn0=","//@ts-nocheck\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Protocol } from '@uniswap/router-sdk';\r\nimport { CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core';\r\nimport { FeeAmount } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { MixedRouteWithValidQuote, usdGasTokensByChain, V2RouteWithValidQuote, V3RouteWithValidQuote, } from '../routers';\r\nimport { log, WRAPPED_NATIVE_CURRENCY } from '../util';\r\nimport { buildTrade } from './methodParameters';\r\nexport async function getV2NativePool(token, poolProvider) {\r\n    const chainId = token.chainId;\r\n    const weth = WRAPPED_NATIVE_CURRENCY[chainId];\r\n    const poolAccessor = await poolProvider.getPools([[weth, token]]);\r\n    const pool = poolAccessor.getPool(weth, token);\r\n    if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {\r\n        log.error({\r\n            weth,\r\n            token,\r\n            reserve0: pool === null || pool === void 0 ? void 0 : pool.reserve0.toExact(),\r\n            reserve1: pool === null || pool === void 0 ? void 0 : pool.reserve1.toExact(),\r\n        }, `Could not find a valid WETH V2 pool with ${token.symbol} for computing gas costs.`);\r\n        return null;\r\n    }\r\n    return pool;\r\n}\r\nexport async function getHighestLiquidityV3NativePool(token, poolProvider) {\r\n    const nativeCurrency = WRAPPED_NATIVE_CURRENCY[token.chainId];\r\n    const nativePools = _([\r\n        FeeAmount.HIGH,\r\n        FeeAmount.MEDIUM,\r\n        FeeAmount.LOW,\r\n        FeeAmount.LOWEST,\r\n    ])\r\n        .map((feeAmount) => {\r\n        return [nativeCurrency, token, feeAmount];\r\n    })\r\n        .value();\r\n    const poolAccessor = await poolProvider.getPools(nativePools);\r\n    const pools = _([\r\n        FeeAmount.HIGH,\r\n        FeeAmount.MEDIUM,\r\n        FeeAmount.LOW,\r\n        FeeAmount.LOWEST,\r\n    ])\r\n        .map((feeAmount) => {\r\n        return poolAccessor.getPool(nativeCurrency, token, feeAmount);\r\n    })\r\n        .compact()\r\n        .value();\r\n    if (pools.length == 0) {\r\n        log.error({ pools }, `Could not find a ${nativeCurrency.symbol} pool with ${token.symbol} for computing gas costs.`);\r\n        return null;\r\n    }\r\n    const maxPool = _.maxBy(pools, (pool) => pool.liquidity);\r\n    return maxPool;\r\n}\r\nexport async function getHighestLiquidityV3USDPool(chainId, poolProvider) {\r\n    const usdTokens = usdGasTokensByChain[chainId];\r\n    const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n    if (!usdTokens) {\r\n        throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`);\r\n    }\r\n    const usdPools = _([\r\n        FeeAmount.HIGH,\r\n        FeeAmount.MEDIUM,\r\n        FeeAmount.LOW,\r\n        FeeAmount.LOWEST,\r\n    ])\r\n        .flatMap((feeAmount) => {\r\n        return _.map(usdTokens, (usdToken) => [\r\n            wrappedCurrency,\r\n            usdToken,\r\n            feeAmount,\r\n        ]);\r\n    })\r\n        .value();\r\n    const poolAccessor = await poolProvider.getPools(usdPools);\r\n    const pools = _([\r\n        FeeAmount.HIGH,\r\n        FeeAmount.MEDIUM,\r\n        FeeAmount.LOW,\r\n        FeeAmount.LOWEST,\r\n    ])\r\n        .flatMap((feeAmount) => {\r\n        const pools = [];\r\n        for (const usdToken of usdTokens) {\r\n            const pool = poolAccessor.getPool(wrappedCurrency, usdToken, feeAmount);\r\n            if (pool) {\r\n                pools.push(pool);\r\n            }\r\n        }\r\n        return pools;\r\n    })\r\n        .compact()\r\n        .value();\r\n    if (pools.length == 0) {\r\n        const message = `Could not find a USD/${wrappedCurrency.symbol} pool for computing gas costs.`;\r\n        log.error({ pools }, message);\r\n        throw new Error(message);\r\n    }\r\n    const maxPool = _.maxBy(pools, (pool) => pool.liquidity);\r\n    return maxPool;\r\n}\r\nexport function getGasCostInUSD(usdPool, costNativeCurrency) {\r\n    const nativeCurrency = costNativeCurrency.currency;\r\n    // convert fee into usd\r\n    const nativeTokenPrice = usdPool.token0.address == nativeCurrency.address\r\n        ? usdPool.token0Price\r\n        : usdPool.token1Price;\r\n    const gasCostUSD = nativeTokenPrice.quote(costNativeCurrency);\r\n    return gasCostUSD;\r\n}\r\nexport function getGasCostInNativeCurrency(nativeCurrency, gasCostInWei) {\r\n    // wrap fee to native currency\r\n    const costNativeCurrency = CurrencyAmount.fromRawAmount(nativeCurrency, gasCostInWei.toString());\r\n    return costNativeCurrency;\r\n}\r\nexport async function getGasCostInQuoteToken(quoteToken, nativePool, costNativeCurrency) {\r\n    const nativeTokenPrice = nativePool.token0.address == quoteToken.address\r\n        ? nativePool.token1Price\r\n        : nativePool.token0Price;\r\n    const gasCostQuoteToken = nativeTokenPrice.quote(costNativeCurrency);\r\n    return gasCostQuoteToken;\r\n}\r\nexport function calculateArbitrumToL1FeeFromCalldata(calldata, gasData) {\r\n    const { perL2TxFee, perL1CalldataFee } = gasData;\r\n    // calculates gas amounts based on bytes of calldata, use 0 as overhead.\r\n    const l1GasUsed = getL2ToL1GasUsed(calldata, BigNumber.from(0));\r\n    // multiply by the fee per calldata and add the flat l2 fee\r\n    let l1Fee = l1GasUsed.mul(perL1CalldataFee);\r\n    l1Fee = l1Fee.add(perL2TxFee);\r\n    return [l1GasUsed, l1Fee];\r\n}\r\nexport function calculateOptimismToL1FeeFromCalldata(calldata, gasData) {\r\n    const { l1BaseFee, scalar, decimals, overhead } = gasData;\r\n    const l1GasUsed = getL2ToL1GasUsed(calldata, overhead);\r\n    // l1BaseFee is L1 Gas Price on etherscan\r\n    const l1Fee = l1GasUsed.mul(l1BaseFee);\r\n    const unscaled = l1Fee.mul(scalar);\r\n    // scaled = unscaled / (10 ** decimals)\r\n    const scaledConversion = BigNumber.from(10).pow(decimals);\r\n    const scaled = unscaled.div(scaledConversion);\r\n    return [l1GasUsed, scaled];\r\n}\r\n// based on the code from the optimism OVM_GasPriceOracle contract\r\nexport function getL2ToL1GasUsed(data, overhead) {\r\n    // data is hex encoded\r\n    const dataArr = data.slice(2).match(/.{1,2}/g);\r\n    const numBytes = dataArr.length;\r\n    let count = 0;\r\n    for (let i = 0; i < numBytes; i += 1) {\r\n        const byte = parseInt(dataArr[i], 16);\r\n        if (byte == 0) {\r\n            count += 4;\r\n        }\r\n        else {\r\n            count += 16;\r\n        }\r\n    }\r\n    const unsigned = overhead.add(count);\r\n    const signedConversion = 68 * 16;\r\n    return unsigned.add(signedConversion);\r\n}\r\nexport async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolProvider, v3PoolProvider, l2GasData) {\r\n    const quoteToken = route.quote.currency.wrapped;\r\n    const gasPriceWei = route.gasPriceWei;\r\n    // calculate L2 to L1 security fee if relevant\r\n    let l2toL1FeeInWei = BigNumber.from(0);\r\n    if (\r\n    //@ts-ignore\r\n    [].includes(chainId)) {\r\n        l2toL1FeeInWei = calculateArbitrumToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];\r\n    }\r\n    else if (\r\n    //@ts-ignore\r\n    [null].includes(chainId)) {\r\n        l2toL1FeeInWei = calculateOptimismToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];\r\n    }\r\n    // add l2 to l1 fee and wrap fee to native currency\r\n    const gasCostInWei = gasPriceWei.mul(simulatedGasUsed).add(l2toL1FeeInWei);\r\n    const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n    const costNativeCurrency = getGasCostInNativeCurrency(nativeCurrency, gasCostInWei);\r\n    const usdPool = await getHighestLiquidityV3USDPool(chainId, v3PoolProvider);\r\n    const gasCostUSD = await getGasCostInUSD(usdPool, costNativeCurrency);\r\n    let gasCostQuoteToken = costNativeCurrency;\r\n    // get fee in terms of quote token\r\n    if (!quoteToken.equals(nativeCurrency)) {\r\n        const nativePools = await Promise.all([\r\n            getHighestLiquidityV3NativePool(quoteToken, v3PoolProvider),\r\n            getV2NativePool(quoteToken, v2PoolProvider),\r\n        ]);\r\n        const nativePool = nativePools.find((pool) => pool !== null);\r\n        if (!nativePool) {\r\n            log.info('Could not find any V2 or V3 pools to convert the cost into the quote token');\r\n            gasCostQuoteToken = CurrencyAmount.fromRawAmount(quoteToken, 0);\r\n        }\r\n        else {\r\n            gasCostQuoteToken = await getGasCostInQuoteToken(quoteToken, nativePool, costNativeCurrency);\r\n        }\r\n    }\r\n    // Adjust quote for gas fees\r\n    let quoteGasAdjusted;\r\n    if (route.trade.tradeType == TradeType.EXACT_OUTPUT) {\r\n        // Exact output - need more of tokenIn to get the desired amount of tokenOut\r\n        quoteGasAdjusted = route.quote.add(gasCostQuoteToken);\r\n    }\r\n    else {\r\n        // Exact input - can get less of tokenOut due to fees\r\n        quoteGasAdjusted = route.quote.subtract(gasCostQuoteToken);\r\n    }\r\n    return {\r\n        estimatedGasUsedUSD: gasCostUSD,\r\n        estimatedGasUsedQuoteToken: gasCostQuoteToken,\r\n        quoteGasAdjusted: quoteGasAdjusted,\r\n    };\r\n}\r\nexport function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD) {\r\n    const currencyIn = swapRoute.trade.inputAmount.currency;\r\n    const currencyOut = swapRoute.trade.outputAmount.currency;\r\n    const tradeType = swapRoute.trade.tradeType.valueOf()\r\n        ? TradeType.EXACT_OUTPUT\r\n        : TradeType.EXACT_INPUT;\r\n    const routesWithValidQuote = swapRoute.route.map((route) => {\r\n        switch (route.protocol) {\r\n            case Protocol.V3:\r\n                return new V3RouteWithValidQuote({\r\n                    amount: CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),\r\n                    rawQuote: BigNumber.from(route.rawQuote),\r\n                    sqrtPriceX96AfterList: route.sqrtPriceX96AfterList.map((num) => BigNumber.from(num)),\r\n                    initializedTicksCrossedList: [...route.initializedTicksCrossedList],\r\n                    quoterGasEstimate: BigNumber.from(route.gasEstimate),\r\n                    percent: route.percent,\r\n                    route: route.route,\r\n                    gasModel: route.gasModel,\r\n                    quoteToken: new Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),\r\n                    tradeType: tradeType,\r\n                    v3PoolProvider: v3PoolProvider,\r\n                });\r\n            case Protocol.V2:\r\n                return new V2RouteWithValidQuote({\r\n                    amount: CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),\r\n                    rawQuote: BigNumber.from(route.rawQuote),\r\n                    percent: route.percent,\r\n                    route: route.route,\r\n                    gasModel: route.gasModel,\r\n                    quoteToken: new Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),\r\n                    tradeType: tradeType,\r\n                    v2PoolProvider: v2PoolProvider,\r\n                });\r\n            case Protocol.MIXED:\r\n                return new MixedRouteWithValidQuote({\r\n                    amount: CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),\r\n                    rawQuote: BigNumber.from(route.rawQuote),\r\n                    sqrtPriceX96AfterList: route.sqrtPriceX96AfterList.map((num) => BigNumber.from(num)),\r\n                    initializedTicksCrossedList: [...route.initializedTicksCrossedList],\r\n                    quoterGasEstimate: BigNumber.from(route.gasEstimate),\r\n                    percent: route.percent,\r\n                    route: route.route,\r\n                    mixedRouteGasModel: route.gasModel,\r\n                    v2PoolProvider,\r\n                    quoteToken: new Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),\r\n                    tradeType: tradeType,\r\n                    v3PoolProvider: v3PoolProvider,\r\n                });\r\n        }\r\n    });\r\n    const trade = buildTrade(currencyIn, currencyOut, tradeType, routesWithValidQuote);\r\n    return {\r\n        quote: swapRoute.quote,\r\n        quoteGasAdjusted,\r\n        estimatedGasUsed,\r\n        estimatedGasUsedQuoteToken,\r\n        estimatedGasUsedUSD,\r\n        gasPriceWei: BigNumber.from(swapRoute.gasPriceWei),\r\n        trade,\r\n        route: routesWithValidQuote,\r\n        blockNumber: BigNumber.from(swapRoute.blockNumber),\r\n        methodParameters: swapRoute.methodParameters\r\n            ? {\r\n                calldata: swapRoute.methodParameters.calldata,\r\n                value: swapRoute.methodParameters.value,\r\n                to: swapRoute.methodParameters.to,\r\n            }\r\n            : undefined,\r\n        simulationStatus: swapRoute.simulationStatus,\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { ChainId } from '../../../..';\r\n// Cost for crossing an uninitialized tick.\r\nexport const COST_PER_UNINIT_TICK = BigNumber.from(0);\r\n//l2 execution fee on optimism is roughly the same as mainnet\r\nexport const BASE_SWAP_COST = (id) => {\r\n    switch (id) {\r\n        case ChainId.FUJI:\r\n        case ChainId.AVAX:\r\n            return BigNumber.from(5000);\r\n    }\r\n};\r\nexport const COST_PER_INIT_TICK = (id) => {\r\n    switch (id) {\r\n        case ChainId.FUJI:\r\n        case ChainId.AVAX:\r\n            return BigNumber.from(31000);\r\n    }\r\n};\r\nexport const COST_PER_HOP = (id) => {\r\n    switch (id) {\r\n        case ChainId.FUJI:\r\n        case ChainId.AVAX:\r\n            return BigNumber.from(80000);\r\n    }\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXRDLDJDQUEyQztBQUMzQyxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXRELDZEQUE2RDtBQUM3RCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUN2RCxRQUFRLEVBQUUsRUFBRTtRQUNWLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxJQUFJO1lBQ2YsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQy9CO0FBQ0gsQ0FBQyxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUMzRCxRQUFRLEVBQUUsRUFBRTtRQUNWLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxJQUFJO1lBQ2YsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBVyxFQUFhLEVBQUU7SUFDckQsUUFBUSxFQUFFLEVBQUU7UUFDVixLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDbEIsS0FBSyxPQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQztBQUNILENBQUMsQ0FBQyJ9","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { Percent, Price, TradeType } from '@uniswap/sdk-core';\r\nimport _ from 'lodash';\r\nimport { SwapType, WRAPPED_NATIVE_CURRENCY, } from '../../../..';\r\nimport { CurrencyAmount } from '../../../../util/amounts';\r\nimport { getHighestLiquidityV3NativePool, getHighestLiquidityV3USDPool, getL2ToL1GasUsed, } from '../../../../util/gas-factory-helpers';\r\nimport { log } from '../../../../util/log';\r\nimport { buildSwapMethodParameters, buildTrade, } from '../../../../util/methodParameters';\r\nimport { IOnChainGasModelFactory, } from '../gas-model';\r\nimport { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, } from './gas-costs';\r\n/**\r\n * Computes a gas estimate for a V3 swap using heuristics.\r\n * Considers number of hops in the route, number of ticks crossed\r\n * and the typical base cost for a swap.\r\n *\r\n * We get the number of ticks crossed in a swap from the QuoterV2\r\n * contract.\r\n *\r\n * We compute gas estimates off-chain because\r\n *  1/ Calling eth_estimateGas for a swaps requires the caller to have\r\n *     the full balance token being swapped, and approvals.\r\n *  2/ Tracking gas used using a wrapper contract is not accurate with Multicall\r\n *     due to EIP-2929. We would have to make a request for every swap we wanted to estimate.\r\n *  3/ For V2 we simulate all our swaps off-chain so have no way to track gas used.\r\n *\r\n * @export\r\n * @class V3HeuristicGasModelFactory\r\n */\r\nexport class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {\r\n    constructor() {\r\n        super();\r\n    }\r\n    async buildGasModel({ chainId, gasPriceWei, v3poolProvider: poolProvider, amountToken, quoteToken, l2GasDataProvider, }) {\r\n        const l2GasData = l2GasDataProvider\r\n            ? await l2GasDataProvider.getGasData()\r\n            : undefined;\r\n        const usdPool = await getHighestLiquidityV3USDPool(chainId, poolProvider);\r\n        const calculateL1GasFees = async (route) => {\r\n            const swapOptions = {\r\n                type: SwapType.UNIVERSAL_ROUTER,\r\n                recipient: '0x0000000000000000000000000000000000000001',\r\n                deadlineOrPreviousBlockhash: 100,\r\n                slippageTolerance: new Percent(5, 10000),\r\n            };\r\n            let l1Used = BigNumber.from(0);\r\n            let l1FeeInWei = BigNumber.from(0);\r\n            if (false) {\r\n                [l1Used, l1FeeInWei] = this.calculateOptimismToL1SecurityFee(route, swapOptions, l2GasData);\r\n            }\r\n            else if (false) {\r\n                [l1Used, l1FeeInWei] = this.calculateArbitrumToL1SecurityFee(route, swapOptions, l2GasData);\r\n            }\r\n            // wrap fee to native currency\r\n            const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n            const costNativeCurrency = CurrencyAmount.fromRawAmount(nativeCurrency, l1FeeInWei.toString());\r\n            // convert fee into usd\r\n            const nativeTokenPrice = usdPool.token0.address == nativeCurrency.address\r\n                ? usdPool.token0Price\r\n                : usdPool.token1Price;\r\n            const gasCostL1USD = nativeTokenPrice.quote(costNativeCurrency);\r\n            let gasCostL1QuoteToken = costNativeCurrency;\r\n            // if the inputted token is not in the native currency, quote a native/quote token pool to get the gas cost in terms of the quote token\r\n            if (!quoteToken.equals(nativeCurrency)) {\r\n                const nativePool = await getHighestLiquidityV3NativePool(quoteToken, poolProvider);\r\n                if (!nativePool) {\r\n                    log.info('Could not find a pool to convert the cost into the quote token');\r\n                    gasCostL1QuoteToken = CurrencyAmount.fromRawAmount(quoteToken, 0);\r\n                }\r\n                else {\r\n                    const nativeTokenPrice = nativePool.token0.address == nativeCurrency.address\r\n                        ? nativePool.token0Price\r\n                        : nativePool.token1Price;\r\n                    gasCostL1QuoteToken = nativeTokenPrice.quote(costNativeCurrency);\r\n                }\r\n            }\r\n            // gasUsedL1 is the gas units used calculated from the bytes of the calldata\r\n            // gasCostL1USD and gasCostL1QuoteToken is the cost of gas in each of those tokens\r\n            return {\r\n                gasUsedL1: l1Used,\r\n                gasCostL1USD,\r\n                gasCostL1QuoteToken,\r\n            };\r\n        };\r\n        // If our quote token is WETH, we don't need to convert our gas use to be in terms\r\n        // of the quote token in order to produce a gas adjusted amount.\r\n        // We do return a gas use in USD however, so we still convert to usd.\r\n        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        if (quoteToken.equals(nativeCurrency)) {\r\n            const estimateGasCost = (routeWithValidQuote) => {\r\n                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n                const token0 = usdPool.token0.address == nativeCurrency.address;\r\n                const nativeTokenPrice = token0\r\n                    ? usdPool.token0Price\r\n                    : usdPool.token1Price;\r\n                const gasCostInTermsOfUSD = nativeTokenPrice.quote(totalGasCostNativeCurrency);\r\n                return {\r\n                    gasEstimate: baseGasUse,\r\n                    gasCostInToken: totalGasCostNativeCurrency,\r\n                    gasCostInUSD: gasCostInTermsOfUSD,\r\n                };\r\n            };\r\n            return {\r\n                estimateGasCost,\r\n                calculateL1GasFees,\r\n            };\r\n        }\r\n        // If the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.\r\n        // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.\r\n        const nativePool = await getHighestLiquidityV3NativePool(quoteToken, poolProvider);\r\n        let nativeAmountPool = null;\r\n        if (!amountToken.equals(nativeCurrency)) {\r\n            nativeAmountPool = await getHighestLiquidityV3NativePool(amountToken, poolProvider);\r\n        }\r\n        const usdToken = usdPool.token0.address == nativeCurrency.address\r\n            ? usdPool.token1\r\n            : usdPool.token0;\r\n        const estimateGasCost = (routeWithValidQuote) => {\r\n            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n            let gasCostInTermsOfQuoteToken = null;\r\n            if (nativePool) {\r\n                const token0 = nativePool.token0.address == nativeCurrency.address;\r\n                // returns mid price in terms of the native currency (the ratio of quoteToken/nativeToken)\r\n                const nativeTokenPrice = token0\r\n                    ? nativePool.token0Price\r\n                    : nativePool.token1Price;\r\n                try {\r\n                    // native token is base currency\r\n                    gasCostInTermsOfQuoteToken = nativeTokenPrice.quote(totalGasCostNativeCurrency);\r\n                }\r\n                catch (err) {\r\n                    log.info({\r\n                        nativeTokenPriceBase: nativeTokenPrice.baseCurrency,\r\n                        nativeTokenPriceQuote: nativeTokenPrice.quoteCurrency,\r\n                        gasCostInEth: totalGasCostNativeCurrency.currency,\r\n                    }, 'Debug eth price token issue');\r\n                    throw err;\r\n                }\r\n            }\r\n            // we have a nativeAmountPool, but not a nativePool\r\n            else {\r\n                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);\r\n            }\r\n            // Highest liquidity pool for the non quote token / ETH\r\n            // A pool with the non quote token / ETH should not be required and errors should be handled separately\r\n            if (nativeAmountPool) {\r\n                // get current execution price (amountToken / quoteToken)\r\n                const executionPrice = new Price(routeWithValidQuote.amount.currency, routeWithValidQuote.quote.currency, routeWithValidQuote.amount.quotient, routeWithValidQuote.quote.quotient);\r\n                const inputIsToken0 = nativeAmountPool.token0.address == nativeCurrency.address;\r\n                // ratio of input / native\r\n                const nativeAmountTokenPrice = inputIsToken0\r\n                    ? nativeAmountPool.token0Price\r\n                    : nativeAmountPool.token1Price;\r\n                const gasCostInTermsOfAmountToken = nativeAmountTokenPrice.quote(totalGasCostNativeCurrency);\r\n                // Convert gasCostInTermsOfAmountToken to quote token using execution price\r\n                const syntheticGasCostInTermsOfQuoteToken = executionPrice.quote(gasCostInTermsOfAmountToken);\r\n                // Note that the syntheticGasCost being lessThan the original quoted value is not always strictly better\r\n                // e.g. the scenario where the amountToken/ETH pool is very illiquid as well and returns an extremely small number\r\n                // however, it is better to have the gasEstimation be almost 0 than almost infinity, as the user will still receive a quote\r\n                if (gasCostInTermsOfQuoteToken === null ||\r\n                    syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction)) {\r\n                    log.info({\r\n                        nativeAmountTokenPrice: nativeAmountTokenPrice.toSignificant(6),\r\n                        gasCostInTermsOfQuoteToken: gasCostInTermsOfQuoteToken\r\n                            ? gasCostInTermsOfQuoteToken.toExact()\r\n                            : 0,\r\n                        gasCostInTermsOfAmountToken: gasCostInTermsOfAmountToken.toExact(),\r\n                        executionPrice: executionPrice.toSignificant(6),\r\n                        syntheticGasCostInTermsOfQuoteToken: syntheticGasCostInTermsOfQuoteToken.toSignificant(6),\r\n                    }, 'New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original');\r\n                    gasCostInTermsOfQuoteToken = syntheticGasCostInTermsOfQuoteToken;\r\n                }\r\n            }\r\n            // true if token0 is the native currency\r\n            const token0USDPool = usdPool.token0.address == nativeCurrency.address;\r\n            // gets the mid price of the pool in terms of the native token\r\n            const nativeTokenPriceUSDPool = token0USDPool\r\n                ? usdPool.token0Price\r\n                : usdPool.token1Price;\r\n            let gasCostInTermsOfUSD;\r\n            try {\r\n                gasCostInTermsOfUSD = nativeTokenPriceUSDPool.quote(totalGasCostNativeCurrency);\r\n            }\r\n            catch (err) {\r\n                log.info({\r\n                    usdT1: usdPool.token0.symbol,\r\n                    usdT2: usdPool.token1.symbol,\r\n                    gasCostInNativeToken: totalGasCostNativeCurrency.currency.symbol,\r\n                }, 'Failed to compute USD gas price');\r\n                throw err;\r\n            }\r\n            // If gasCostInTermsOfQuoteToken is null, both attempts to calculate gasCostInTermsOfQuoteToken failed (nativePool and amountNativePool)\r\n            if (gasCostInTermsOfQuoteToken === null) {\r\n                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);\r\n                return {\r\n                    gasEstimate: baseGasUse,\r\n                    gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\r\n                    gasCostInUSD: CurrencyAmount.fromRawAmount(usdToken, 0),\r\n                };\r\n            }\r\n            return {\r\n                gasEstimate: baseGasUse,\r\n                gasCostInToken: gasCostInTermsOfQuoteToken,\r\n                gasCostInUSD: gasCostInTermsOfUSD,\r\n            };\r\n        };\r\n        return {\r\n            estimateGasCost: estimateGasCost.bind(this),\r\n            calculateL1GasFees,\r\n        };\r\n    }\r\n    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {\r\n        const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));\r\n        const totalHops = BigNumber.from(routeWithValidQuote.route.pools.length);\r\n        const hopsGasUse = COST_PER_HOP(chainId).mul(totalHops);\r\n        const tickGasUse = COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);\r\n        const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);\r\n        // base estimate gas used based on chainId estimates for hops and ticks gas useage\r\n        const baseGasUse = BASE_SWAP_COST(chainId)\r\n            .add(hopsGasUse)\r\n            .add(tickGasUse)\r\n            .add(uninitializedTickGasUse);\r\n        const baseGasCostWei = gasPriceWei.mul(baseGasUse);\r\n        const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());\r\n        return {\r\n            totalGasCostNativeCurrency,\r\n            totalInitializedTicksCrossed,\r\n            baseGasUse,\r\n        };\r\n    }\r\n    /**\r\n     * To avoid having a call to optimism's L1 security fee contract for every route and amount combination,\r\n     * we replicate the gas cost accounting here.\r\n     */\r\n    calculateOptimismToL1SecurityFee(routes, swapConfig, gasData) {\r\n        const { l1BaseFee, scalar, decimals, overhead } = gasData;\r\n        const route = routes[0];\r\n        const amountToken = route.tradeType == TradeType.EXACT_INPUT\r\n            ? route.amount.currency\r\n            : route.quote.currency;\r\n        const outputToken = route.tradeType == TradeType.EXACT_INPUT\r\n            ? route.quote.currency\r\n            : route.amount.currency;\r\n        // build trade for swap calldata\r\n        const trade = buildTrade(amountToken, outputToken, route.tradeType, routes);\r\n        const data = buildSwapMethodParameters(trade, swapConfig, 3135415).calldata;\r\n        const l1GasUsed = getL2ToL1GasUsed(data, overhead);\r\n        // l1BaseFee is L1 Gas Price on etherscan\r\n        const l1Fee = l1GasUsed.mul(l1BaseFee);\r\n        const unscaled = l1Fee.mul(scalar);\r\n        // scaled = unscaled / (10 ** decimals)\r\n        const scaledConversion = BigNumber.from(10).pow(decimals);\r\n        const scaled = unscaled.div(scaledConversion);\r\n        return [l1GasUsed, scaled];\r\n    }\r\n    calculateArbitrumToL1SecurityFee(routes, swapConfig, gasData) {\r\n        const { perL2TxFee, perL1CalldataFee } = gasData;\r\n        const route = routes[0];\r\n        const amountToken = route.tradeType == TradeType.EXACT_INPUT\r\n            ? route.amount.currency\r\n            : route.quote.currency;\r\n        const outputToken = route.tradeType == TradeType.EXACT_INPUT\r\n            ? route.quote.currency\r\n            : route.amount.currency;\r\n        // build trade for swap calldata\r\n        const trade = buildTrade(amountToken, outputToken, route.tradeType, routes);\r\n        const data = buildSwapMethodParameters(trade, swapConfig, 5245423).calldata;\r\n        // calculates gas amounts based on bytes of calldata, use 0 as overhead.\r\n        const l1GasUsed = getL2ToL1GasUsed(data, BigNumber.from(0));\r\n        // multiply by the fee per calldata and add the flat l2 fee\r\n        let l1Fee = l1GasUsed.mul(perL1CalldataFee);\r\n        l1Fee = l1Fee.add(perL2TxFee);\r\n        return [l1GasUsed, l1Fee];\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","//@ts-nocheck\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Protocol } from '@uniswap/router-sdk';\r\nimport { TradeType } from '@uniswap/sdk-core';\r\nimport JSBI from 'jsbi';\r\nimport _ from 'lodash';\r\nimport FixedReverseHeap from 'mnemonist/fixed-reverse-heap';\r\nimport Queue from 'mnemonist/queue';\r\nimport { HAS_L1_FEE } from '../../../util';\r\nimport { CurrencyAmount } from '../../../util/amounts';\r\nimport { log } from '../../../util/log';\r\nimport { metric, MetricLoggerUnit } from '../../../util/metric';\r\nimport { routeAmountsToString, routeToString } from '../../../util/routes';\r\nimport { usdGasTokensByChain } from '../gas-models';\r\nexport async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeType, chainId, routingConfig, gasModel) {\r\n    const now = Date.now();\r\n    const { forceMixedRoutes } = routingConfig;\r\n    /// Like with forceCrossProtocol, we apply that logic here when determining the bestSwapRoute\r\n    if (forceMixedRoutes) {\r\n        log.info({\r\n            forceMixedRoutes: forceMixedRoutes,\r\n        }, 'Forcing mixed routes by filtering out other route types');\r\n        routesWithValidQuotes = _.filter(routesWithValidQuotes, (quotes) => {\r\n            return quotes.protocol === Protocol.MIXED;\r\n        });\r\n        if (!routesWithValidQuotes) {\r\n            return null;\r\n        }\r\n    }\r\n    // Build a map of percentage of the input to list of valid quotes.\r\n    // Quotes can be null for a variety of reasons (not enough liquidity etc), so we drop them here too.\r\n    const percentToQuotes = {};\r\n    for (const routeWithValidQuote of routesWithValidQuotes) {\r\n        if (!percentToQuotes[routeWithValidQuote.percent]) {\r\n            percentToQuotes[routeWithValidQuote.percent] = [];\r\n        }\r\n        percentToQuotes[routeWithValidQuote.percent].push(routeWithValidQuote);\r\n    }\r\n    metric.putMetric('BuildRouteWithValidQuoteObjects', Date.now() - now, MetricLoggerUnit.Milliseconds);\r\n    // Given all the valid quotes for each percentage find the optimal route.\r\n    const swapRoute = await getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, (rq) => rq.quoteAdjustedForGas, routingConfig, gasModel);\r\n    // It is possible we were unable to find any valid route given the quotes.\r\n    if (!swapRoute) {\r\n        return null;\r\n    }\r\n    // Due to potential loss of precision when taking percentages of the input it is possible that the sum of the amounts of each\r\n    // route of our optimal quote may not add up exactly to exactIn or exactOut.\r\n    //\r\n    // We check this here, and if there is a mismatch\r\n    // add the missing amount to a random route. The missing amount size should be neglible so the quote should still be highly accurate.\r\n    const { routes: routeAmounts } = swapRoute;\r\n    const totalAmount = _.reduce(routeAmounts, (total, routeAmount) => total.add(routeAmount.amount), CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency, 0));\r\n    const missingAmount = amount.subtract(totalAmount);\r\n    if (missingAmount.greaterThan(0)) {\r\n        log.info({\r\n            missingAmount: missingAmount.quotient.toString(),\r\n        }, `Optimal route's amounts did not equal exactIn/exactOut total. Adding missing amount to last route in array.`);\r\n        routeAmounts[routeAmounts.length - 1].amount =\r\n            routeAmounts[routeAmounts.length - 1].amount.add(missingAmount);\r\n    }\r\n    log.info({\r\n        routes: routeAmountsToString(routeAmounts),\r\n        numSplits: routeAmounts.length,\r\n        amount: amount.toExact(),\r\n        quote: swapRoute.quote.toExact(),\r\n        quoteGasAdjusted: swapRoute.quoteGasAdjusted.toFixed(Math.min(swapRoute.quoteGasAdjusted.currency.decimals, 2)),\r\n        estimatedGasUSD: swapRoute.estimatedGasUsedUSD.toFixed(Math.min(swapRoute.estimatedGasUsedUSD.currency.decimals, 2)),\r\n        estimatedGasToken: swapRoute.estimatedGasUsedQuoteToken.toFixed(Math.min(swapRoute.estimatedGasUsedQuoteToken.currency.decimals, 2)),\r\n    }, `Found best swap route. ${routeAmounts.length} split.`);\r\n    return swapRoute;\r\n}\r\nexport async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, by, routingConfig, gasModel) {\r\n    var _a;\r\n    // Build a map of percentage to sorted list of quotes, with the biggest quote being first in the list.\r\n    const percentToSortedQuotes = _.mapValues(percentToQuotes, (routeQuotes) => {\r\n        return routeQuotes.sort((routeQuoteA, routeQuoteB) => {\r\n            if (routeType == TradeType.EXACT_INPUT) {\r\n                return by(routeQuoteA).greaterThan(by(routeQuoteB)) ? -1 : 1;\r\n            }\r\n            else {\r\n                return by(routeQuoteA).lessThan(by(routeQuoteB)) ? -1 : 1;\r\n            }\r\n        });\r\n    });\r\n    const quoteCompFn = routeType == TradeType.EXACT_INPUT\r\n        ? (a, b) => a.greaterThan(b)\r\n        : (a, b) => a.lessThan(b);\r\n    const sumFn = (currencyAmounts) => {\r\n        let sum = currencyAmounts[0];\r\n        for (let i = 1; i < currencyAmounts.length; i++) {\r\n            sum = sum.add(currencyAmounts[i]);\r\n        }\r\n        return sum;\r\n    };\r\n    let bestQuote;\r\n    let bestSwap;\r\n    // Min-heap for tracking the 5 best swaps given some number of splits.\r\n    const bestSwapsPerSplit = new FixedReverseHeap(Array, (a, b) => {\r\n        return quoteCompFn(a.quote, b.quote) ? -1 : 1;\r\n    }, 3);\r\n    const { minSplits, maxSplits, forceCrossProtocol } = routingConfig;\r\n    if (!percentToSortedQuotes[100] || minSplits > 1 || forceCrossProtocol) {\r\n        log.info({\r\n            percentToSortedQuotes: _.mapValues(percentToSortedQuotes, (p) => p.length),\r\n        }, 'Did not find a valid route without any splits. Continuing search anyway.');\r\n    }\r\n    else {\r\n        bestQuote = by(percentToSortedQuotes[100][0]);\r\n        bestSwap = [percentToSortedQuotes[100][0]];\r\n        for (const routeWithQuote of percentToSortedQuotes[100].slice(0, 5)) {\r\n            bestSwapsPerSplit.push({\r\n                quote: by(routeWithQuote),\r\n                routes: [routeWithQuote],\r\n            });\r\n        }\r\n    }\r\n    // We do a BFS. Each additional node in a path represents us adding an additional split to the route.\r\n    const queue = new Queue();\r\n    // First we seed BFS queue with the best quotes for each percentage.\r\n    // i.e. [best quote when sending 10% of amount, best quote when sending 20% of amount, ...]\r\n    // We will explore the various combinations from each node.\r\n    for (let i = percents.length; i >= 0; i--) {\r\n        const percent = percents[i];\r\n        if (!percentToSortedQuotes[percent]) {\r\n            continue;\r\n        }\r\n        queue.enqueue({\r\n            curRoutes: [percentToSortedQuotes[percent][0]],\r\n            percentIndex: i,\r\n            remainingPercent: 100 - percent,\r\n            special: false,\r\n        });\r\n        if (!percentToSortedQuotes[percent] ||\r\n            !percentToSortedQuotes[percent][1]) {\r\n            continue;\r\n        }\r\n        queue.enqueue({\r\n            curRoutes: [percentToSortedQuotes[percent][1]],\r\n            percentIndex: i,\r\n            remainingPercent: 100 - percent,\r\n            special: true,\r\n        });\r\n    }\r\n    let splits = 1;\r\n    let startedSplit = Date.now();\r\n    while (queue.size > 0) {\r\n        metric.putMetric(`Split${splits}Done`, Date.now() - startedSplit, MetricLoggerUnit.Milliseconds);\r\n        startedSplit = Date.now();\r\n        log.info({\r\n            top5: _.map(Array.from(bestSwapsPerSplit.consume()), (q) => `${q.quote.toExact()} (${_(q.routes)\r\n                .map((r) => r.toString())\r\n                .join(', ')})`),\r\n            onQueue: queue.size,\r\n        }, `Top 3 with ${splits} splits`);\r\n        bestSwapsPerSplit.clear();\r\n        // Size of the queue at this point is the number of potential routes we are investigating for the given number of splits.\r\n        let layer = queue.size;\r\n        splits++;\r\n        // If we didn't improve our quote by adding another split, very unlikely to improve it by splitting more after that.\r\n        if (splits >= 3 && bestSwap && bestSwap.length < splits - 1) {\r\n            break;\r\n        }\r\n        if (splits > maxSplits) {\r\n            log.info('Max splits reached. Stopping search.');\r\n            metric.putMetric(`MaxSplitsHitReached`, 1, MetricLoggerUnit.Count);\r\n            break;\r\n        }\r\n        while (layer > 0) {\r\n            layer--;\r\n            const { remainingPercent, curRoutes, percentIndex, special } = queue.dequeue();\r\n            // For all other percentages, add a new potential route.\r\n            // E.g. if our current aggregated route if missing 50%, we will create new nodes and add to the queue for:\r\n            // 50% + new 10% route, 50% + new 20% route, etc.\r\n            for (let i = percentIndex; i >= 0; i--) {\r\n                const percentA = percents[i];\r\n                if (percentA > remainingPercent) {\r\n                    continue;\r\n                }\r\n                // At some point the amount * percentage is so small that the quoter is unable to get\r\n                // a quote. In this case there could be no quotes for that percentage.\r\n                if (!percentToSortedQuotes[percentA]) {\r\n                    continue;\r\n                }\r\n                const candidateRoutesA = percentToSortedQuotes[percentA];\r\n                // Find the best route in the complimentary percentage that doesn't re-use a pool already\r\n                // used in the current route. Re-using pools is not allowed as each swap through a pool changes its liquidity,\r\n                // so it would make the quotes inaccurate.\r\n                const routeWithQuoteA = findFirstRouteNotUsingUsedPools(curRoutes, candidateRoutesA, forceCrossProtocol);\r\n                if (!routeWithQuoteA) {\r\n                    continue;\r\n                }\r\n                const remainingPercentNew = remainingPercent - percentA;\r\n                const curRoutesNew = [...curRoutes, routeWithQuoteA];\r\n                // If we've found a route combination that uses all 100%, and it has at least minSplits, update our best route.\r\n                if (remainingPercentNew == 0 && splits >= minSplits) {\r\n                    const quotesNew = _.map(curRoutesNew, (r) => by(r));\r\n                    const quoteNew = sumFn(quotesNew);\r\n                    let gasCostL1QuoteToken = CurrencyAmount.fromRawAmount(quoteNew.currency, 0);\r\n                    if (HAS_L1_FEE.includes(chainId)) {\r\n                        const onlyV3Routes = curRoutesNew.every((route) => route.protocol == Protocol.V3);\r\n                        if (gasModel == undefined || !onlyV3Routes) {\r\n                            throw new Error('Can\\'t compute L1 gas fees.');\r\n                        }\r\n                        else {\r\n                            const gasCostL1 = await gasModel.calculateL1GasFees(curRoutesNew);\r\n                            gasCostL1QuoteToken = gasCostL1.gasCostL1QuoteToken;\r\n                        }\r\n                    }\r\n                    const quoteAfterL1Adjust = routeType == TradeType.EXACT_INPUT\r\n                        ? quoteNew.subtract(gasCostL1QuoteToken)\r\n                        : quoteNew.add(gasCostL1QuoteToken);\r\n                    bestSwapsPerSplit.push({\r\n                        quote: quoteAfterL1Adjust,\r\n                        routes: curRoutesNew,\r\n                    });\r\n                    if (!bestQuote || quoteCompFn(quoteAfterL1Adjust, bestQuote)) {\r\n                        bestQuote = quoteAfterL1Adjust;\r\n                        bestSwap = curRoutesNew;\r\n                        // Temporary experiment.\r\n                        if (special) {\r\n                            metric.putMetric(`BestSwapNotPickingBestForPercent`, 1, MetricLoggerUnit.Count);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    queue.enqueue({\r\n                        curRoutes: curRoutesNew,\r\n                        remainingPercent: remainingPercentNew,\r\n                        percentIndex: i,\r\n                        special,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (!bestSwap) {\r\n        log.info(`Could not find a valid swap`);\r\n        return undefined;\r\n    }\r\n    const postSplitNow = Date.now();\r\n    let quoteGasAdjusted = sumFn(_.map(bestSwap, (routeWithValidQuote) => routeWithValidQuote.quoteAdjustedForGas));\r\n    // this calculates the base gas used\r\n    // if on L1, its the estimated gas used based on hops and ticks across all the routes\r\n    // if on L2, its the gas used on the L2 based on hops and ticks across all the routes\r\n    const estimatedGasUsed = _(bestSwap)\r\n        .map((routeWithValidQuote) => routeWithValidQuote.gasEstimate)\r\n        .reduce((sum, routeWithValidQuote) => sum.add(routeWithValidQuote), BigNumber.from(0));\r\n    if (!usdGasTokensByChain[chainId] || !usdGasTokensByChain[chainId][0]) {\r\n        // Each route can use a different stablecoin to account its gas costs.\r\n        // They should all be pegged, and this is just an estimate, so we do a merge\r\n        // to an arbitrary stable.\r\n        throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`);\r\n    }\r\n    const usdToken = usdGasTokensByChain[chainId][0];\r\n    const usdTokenDecimals = usdToken.decimals;\r\n    // if on L2, calculate the L1 security fee\r\n    let gasCostsL1ToL2 = {\r\n        gasUsedL1: BigNumber.from(0),\r\n        gasCostL1USD: CurrencyAmount.fromRawAmount(usdToken, 0),\r\n        gasCostL1QuoteToken: CurrencyAmount.fromRawAmount(\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n        (_a = bestSwap[0]) === null || _a === void 0 ? void 0 : _a.quoteToken, 0),\r\n    };\r\n    // If swapping on an L2 that includes a L1 security fee, calculate the fee and include it in the gas adjusted quotes\r\n    if (HAS_L1_FEE.includes(chainId)) {\r\n        // ensure the gasModel exists and that the swap route is a v3 only route\r\n        const onlyV3Routes = bestSwap.every((route) => route.protocol == Protocol.V3);\r\n        if (gasModel == undefined || !onlyV3Routes) {\r\n            throw new Error('Can\\'t compute L1 gas fees.');\r\n        }\r\n        else {\r\n            gasCostsL1ToL2 = await gasModel.calculateL1GasFees(bestSwap);\r\n        }\r\n    }\r\n    const { gasCostL1USD, gasCostL1QuoteToken } = gasCostsL1ToL2;\r\n    // For each gas estimate, normalize decimals to that of the chosen usd token.\r\n    const estimatedGasUsedUSDs = _(bestSwap)\r\n        .map((routeWithValidQuote) => {\r\n        // TODO: will error if gasToken has decimals greater than usdToken\r\n        const decimalsDiff = usdTokenDecimals - routeWithValidQuote.gasCostInUSD.currency.decimals;\r\n        if (decimalsDiff == 0) {\r\n            return CurrencyAmount.fromRawAmount(usdToken, routeWithValidQuote.gasCostInUSD.quotient);\r\n        }\r\n        return CurrencyAmount.fromRawAmount(usdToken, JSBI.multiply(routeWithValidQuote.gasCostInUSD.quotient, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimalsDiff))));\r\n    })\r\n        .value();\r\n    let estimatedGasUsedUSD = sumFn(estimatedGasUsedUSDs);\r\n    // if they are different usd pools, convert to the usdToken\r\n    if (estimatedGasUsedUSD.currency != gasCostL1USD.currency) {\r\n        const decimalsDiff = usdTokenDecimals - gasCostL1USD.currency.decimals;\r\n        estimatedGasUsedUSD = estimatedGasUsedUSD.add(CurrencyAmount.fromRawAmount(usdToken, JSBI.multiply(gasCostL1USD.quotient, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimalsDiff)))));\r\n    }\r\n    else {\r\n        estimatedGasUsedUSD = estimatedGasUsedUSD.add(gasCostL1USD);\r\n    }\r\n    log.info({\r\n        estimatedGasUsedUSD: estimatedGasUsedUSD.toExact(),\r\n        normalizedUsdToken: usdToken,\r\n        routeUSDGasEstimates: _.map(bestSwap, (b) => `${b.percent}% ${routeToString(b.route)} ${b.gasCostInUSD.toExact()}`),\r\n        flatL1GasCostUSD: gasCostL1USD.toExact(),\r\n    }, 'USD gas estimates of best route');\r\n    const estimatedGasUsedQuoteToken = sumFn(_.map(bestSwap, (routeWithValidQuote) => routeWithValidQuote.gasCostInToken)).add(gasCostL1QuoteToken);\r\n    const quote = sumFn(_.map(bestSwap, (routeWithValidQuote) => routeWithValidQuote.quote));\r\n    // Adjust the quoteGasAdjusted for the l1 fee\r\n    if (routeType == TradeType.EXACT_INPUT) {\r\n        const quoteGasAdjustedForL1 = quoteGasAdjusted.subtract(gasCostL1QuoteToken);\r\n        quoteGasAdjusted = quoteGasAdjustedForL1;\r\n    }\r\n    else {\r\n        const quoteGasAdjustedForL1 = quoteGasAdjusted.add(gasCostL1QuoteToken);\r\n        quoteGasAdjusted = quoteGasAdjustedForL1;\r\n    }\r\n    const routeWithQuotes = bestSwap.sort((routeAmountA, routeAmountB) => routeAmountB.amount.greaterThan(routeAmountA.amount) ? 1 : -1);\r\n    metric.putMetric('PostSplitDone', Date.now() - postSplitNow, MetricLoggerUnit.Milliseconds);\r\n    return {\r\n        quote,\r\n        quoteGasAdjusted,\r\n        estimatedGasUsed,\r\n        estimatedGasUsedUSD,\r\n        estimatedGasUsedQuoteToken,\r\n        routes: routeWithQuotes,\r\n    };\r\n}\r\n// We do not allow pools to be re-used across split routes, as swapping through a pool changes the pools state.\r\n// Given a list of used routes, this function finds the first route in the list of candidate routes that does not re-use an already used pool.\r\nconst findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, forceCrossProtocol) => {\r\n    const poolAddressSet = new Set();\r\n    const usedPoolAddresses = _(usedRoutes)\r\n        .flatMap((r) => r.poolAddresses)\r\n        .value();\r\n    for (const poolAddress of usedPoolAddresses) {\r\n        poolAddressSet.add(poolAddress);\r\n    }\r\n    const protocolsSet = new Set();\r\n    const usedProtocols = _(usedRoutes)\r\n        .flatMap((r) => r.protocol)\r\n        .uniq()\r\n        .value();\r\n    for (const protocol of usedProtocols) {\r\n        protocolsSet.add(protocol);\r\n    }\r\n    for (const routeQuote of candidateRouteQuotes) {\r\n        const { poolAddresses, protocol } = routeQuote;\r\n        if (poolAddresses.some((poolAddress) => poolAddressSet.has(poolAddress))) {\r\n            continue;\r\n        }\r\n        // This code is just for debugging. Allows us to force a cross-protocol split route by skipping\r\n        // consideration of routes that come from the same protocol as a used route.\r\n        const needToForce = forceCrossProtocol && protocolsSet.size == 1;\r\n        if (needToForce && protocolsSet.has(protocol)) {\r\n            continue;\r\n        }\r\n        return routeQuote;\r\n    }\r\n    return null;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVzdC1zd2FwLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9iZXN0LXN3YXAtcm91dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQUNiLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlDLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFDdkIsT0FBTyxnQkFBZ0IsTUFBTSw4QkFBOEIsQ0FBQztBQUM1RCxPQUFPLEtBQUssTUFBTSxpQkFBaUIsQ0FBQztBQUVwQyxPQUFPLEVBQVcsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUUzRSxPQUFPLEVBQTZCLG1CQUFtQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBYS9FLE1BQU0sQ0FBQyxLQUFLLFVBQVUsZ0JBQWdCLENBQ3BDLE1BQXNCLEVBQ3RCLFFBQWtCLEVBQ2xCLHFCQUE0QyxFQUM1QyxTQUFvQixFQUNwQixPQUFnQixFQUNoQixhQUFnQyxFQUNoQyxRQUEyQztJQUUzQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFFdkIsTUFBTSxFQUFFLGdCQUFnQixF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","import { Fraction } from '@uniswap/sdk-core';\r\nimport { CurrencyAmount } from '../../../util/amounts';\r\nexport function calculateRatioAmountIn(optimalRatio, inputTokenPrice, inputBalance, outputBalance) {\r\n    // formula: amountToSwap = (inputBalance - (optimalRatio * outputBalance)) / ((optimalRatio * inputTokenPrice) + 1))\r\n    const amountToSwapRaw = new Fraction(inputBalance.quotient)\r\n        .subtract(optimalRatio.multiply(outputBalance.quotient))\r\n        .divide(optimalRatio.multiply(inputTokenPrice).add(1));\r\n    if (amountToSwapRaw.lessThan(0)) {\r\n        // should never happen since we do checks before calling in\r\n        throw new Error('routeToRatio: insufficient input token amount');\r\n    }\r\n    return CurrencyAmount.fromRawAmount(inputBalance.currency, amountToSwapRaw.quotient);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9mdW5jdGlvbnMvY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXZELE1BQU0sVUFBVSxzQkFBc0IsQ0FDcEMsWUFBc0IsRUFDdEIsZUFBeUIsRUFDekIsWUFBNEIsRUFDNUIsYUFBNkI7SUFFN0Isb0hBQW9IO0lBQ3BILE1BQU0sZUFBZSxHQUFHLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7U0FDeEQsUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3ZELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXpELElBQUksZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMvQiwyREFBMkQ7UUFDM0QsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0tBQ2xFO0lBRUQsT0FBTyxjQUFjLENBQUMsYUFBYSxDQUNqQyxZQUFZLENBQUMsUUFBUSxFQUNyQixlQUFlLENBQUMsUUFBUSxDQUN6QixDQUFDO0FBQ0osQ0FBQyJ9","import { BigNumber } from '@ethersproject/bignumber';\r\nimport _ from 'lodash';\r\nimport { log, WRAPPED_NATIVE_CURRENCY } from '../../../../util';\r\nimport { CurrencyAmount } from '../../../../util/amounts';\r\nimport { IV2GasModelFactory, usdGasTokensByChain, } from '../gas-model';\r\n// Constant cost for doing any swap regardless of pools.\r\nexport const BASE_SWAP_COST = BigNumber.from(135000); // 115000, bumped up by 20_000 @eric 7/8/2022\r\n// Constant per extra hop in the route.\r\nexport const COST_PER_EXTRA_HOP = BigNumber.from(50000); // 20000, bumped up by 30_000 @eric 7/8/2022\r\n/**\r\n * Computes a gas estimate for a V2 swap using heuristics.\r\n * Considers number of hops in the route and the typical base cost for a swap.\r\n *\r\n * We compute gas estimates off-chain because\r\n *  1/ Calling eth_estimateGas for a swaps requires the caller to have\r\n *     the full balance token being swapped, and approvals.\r\n *  2/ Tracking gas used using a wrapper contract is not accurate with Multicall\r\n *     due to EIP-2929. We would have to make a request for every swap we wanted to estimate.\r\n *  3/ For V2 we simulate all our swaps off-chain so have no way to track gas used.\r\n *\r\n * Note, certain tokens e.g. rebasing/fee-on-transfer, may incur higher gas costs than\r\n * what we estimate here. This is because they run extra logic on token transfer.\r\n *\r\n * @export\r\n * @class V2HeuristicGasModelFactory\r\n */\r\nexport class V2HeuristicGasModelFactory extends IV2GasModelFactory {\r\n    constructor() {\r\n        super();\r\n    }\r\n    async buildGasModel({ chainId, gasPriceWei, poolProvider, token, }) {\r\n        if (token.equals(WRAPPED_NATIVE_CURRENCY[chainId])) {\r\n            const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);\r\n            return {\r\n                estimateGasCost: (routeWithValidQuote) => {\r\n                    const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n                    const ethToken0 = usdPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address;\r\n                    const ethTokenPrice = ethToken0\r\n                        ? usdPool.token0Price\r\n                        : usdPool.token1Price;\r\n                    const gasCostInTermsOfUSD = ethTokenPrice.quote(gasCostInEth);\r\n                    return {\r\n                        gasEstimate: gasUse,\r\n                        gasCostInToken: gasCostInEth,\r\n                        gasCostInUSD: gasCostInTermsOfUSD,\r\n                    };\r\n                },\r\n            };\r\n        }\r\n        // If the quote token is not WETH, we convert the gas cost to be in terms of the quote token.\r\n        // We do this by getting the highest liquidity <token>/ETH pool.\r\n        const ethPool = await this.getEthPool(chainId, token, poolProvider);\r\n        if (!ethPool) {\r\n            log.info('Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas.');\r\n        }\r\n        const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);\r\n        return {\r\n            estimateGasCost: (routeWithValidQuote) => {\r\n                const usdToken = usdPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address\r\n                    ? usdPool.token1\r\n                    : usdPool.token0;\r\n                const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n                if (!ethPool) {\r\n                    return {\r\n                        gasEstimate: gasUse,\r\n                        gasCostInToken: CurrencyAmount.fromRawAmount(token, 0),\r\n                        gasCostInUSD: CurrencyAmount.fromRawAmount(usdToken, 0),\r\n                    };\r\n                }\r\n                const ethToken0 = ethPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address;\r\n                const ethTokenPrice = ethToken0\r\n                    ? ethPool.token0Price\r\n                    : ethPool.token1Price;\r\n                let gasCostInTermsOfQuoteToken;\r\n                try {\r\n                    gasCostInTermsOfQuoteToken = ethTokenPrice.quote(gasCostInEth);\r\n                }\r\n                catch (err) {\r\n                    log.error({\r\n                        ethTokenPriceBase: ethTokenPrice.baseCurrency,\r\n                        ethTokenPriceQuote: ethTokenPrice.quoteCurrency,\r\n                        gasCostInEth: gasCostInEth.currency,\r\n                    }, 'Debug eth price token issue');\r\n                    throw err;\r\n                }\r\n                const ethToken0USDPool = usdPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address;\r\n                const ethTokenPriceUSDPool = ethToken0USDPool\r\n                    ? usdPool.token0Price\r\n                    : usdPool.token1Price;\r\n                let gasCostInTermsOfUSD;\r\n                try {\r\n                    gasCostInTermsOfUSD = ethTokenPriceUSDPool.quote(gasCostInEth);\r\n                }\r\n                catch (err) {\r\n                    log.error({\r\n                        usdT1: usdPool.token0.symbol,\r\n                        usdT2: usdPool.token1.symbol,\r\n                        gasCostInEthToken: gasCostInEth.currency.symbol,\r\n                    }, 'Failed to compute USD gas price');\r\n                    throw err;\r\n                }\r\n                return {\r\n                    gasEstimate: gasUse,\r\n                    gasCostInToken: gasCostInTermsOfQuoteToken,\r\n                    gasCostInUSD: gasCostInTermsOfUSD,\r\n                };\r\n            },\r\n        };\r\n    }\r\n    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {\r\n        const hops = routeWithValidQuote.route.pairs.length;\r\n        const gasUse = BASE_SWAP_COST.add(COST_PER_EXTRA_HOP.mul(hops - 1));\r\n        const totalGasCostWei = gasPriceWei.mul(gasUse);\r\n        const weth = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        const gasCostInEth = CurrencyAmount.fromRawAmount(weth, totalGasCostWei.toString());\r\n        return { gasCostInEth, gasUse };\r\n    }\r\n    async getEthPool(chainId, token, poolProvider) {\r\n        const weth = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        const poolAccessor = await poolProvider.getPools([[weth, token]]);\r\n        const pool = poolAccessor.getPool(weth, token);\r\n        if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {\r\n            log.error({\r\n                weth,\r\n                token,\r\n                reserve0: pool === null || pool === void 0 ? void 0 : pool.reserve0.toExact(),\r\n                reserve1: pool === null || pool === void 0 ? void 0 : pool.reserve1.toExact(),\r\n            }, `Could not find a valid WETH pool with ${token.symbol} for computing gas costs.`);\r\n            return null;\r\n        }\r\n        return pool;\r\n    }\r\n    async getHighestLiquidityUSDPool(chainId, poolProvider) {\r\n        const usdTokens = usdGasTokensByChain[chainId];\r\n        if (!usdTokens) {\r\n            throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`);\r\n        }\r\n        const usdPools = _.map(usdTokens, (usdToken) => [\r\n            usdToken,\r\n            WRAPPED_NATIVE_CURRENCY[chainId],\r\n        ]);\r\n        const poolAccessor = await poolProvider.getPools(usdPools);\r\n        const poolsRaw = poolAccessor.getAllPools();\r\n        const pools = _.filter(poolsRaw, (pool) => pool.reserve0.greaterThan(0) && pool.reserve1.greaterThan(0));\r\n        if (pools.length == 0) {\r\n            log.error({ pools }, `Could not find a USD/WETH pool for computing gas costs.`);\r\n            throw new Error(`Can't find USD/WETH pool for computing gas costs.`);\r\n        }\r\n        const maxPool = _.maxBy(pools, (pool) => {\r\n            if (pool.token0.equals(WRAPPED_NATIVE_CURRENCY[chainId])) {\r\n                return parseFloat(pool.reserve0.toSignificant(2));\r\n            }\r\n            else {\r\n                return parseFloat(pool.reserve1.toSignificant(2));\r\n            }\r\n        });\r\n        return maxPool;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUd2QixPQUFPLEVBQVcsR0FBRyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDekUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTFELE9BQU8sRUFHTCxrQkFBa0IsRUFDbEIsbUJBQW1CLEdBQ3BCLE1BQU0sY0FBYyxDQUFDO0FBRXRCLHdEQUF3RDtBQUN4RCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLDZDQUE2QztBQUVuRyx1Q0FBdUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLDRDQUE0QztBQUVyRzs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNILE1BQU0sT0FBTywwQkFBMkIsU0FBUSxrQkFBa0I7SUFDaEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssR0FDc0I7UUFDM0IsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDLEVBQUU7WUFDbkQsTUFBTSxPQUFPLEdBQVMsTUFBTSxJQUFJLENBQUMsMEJBQTBCLENBQ3pELE9BQU8sRUFDUCxZQUFZLENBQ2IsQ0FB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","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { partitionMixedRouteByProtocol } from '@uniswap/router-sdk';\r\nimport { Pair } from '@uniswap/v2-sdk';\r\nimport { Pool } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../../..';\r\nimport { log } from '../../../../util';\r\nimport { CurrencyAmount } from '../../../../util/amounts';\r\nimport { getHighestLiquidityV3NativePool, getHighestLiquidityV3USDPool, getV2NativePool, } from '../../../../util/gas-factory-helpers';\r\nimport { IOnChainGasModelFactory, } from '../gas-model';\r\nimport { BASE_SWAP_COST as BASE_SWAP_COST_V2, COST_PER_EXTRA_HOP as COST_PER_EXTRA_HOP_V2, } from '../v2/v2-heuristic-gas-model';\r\nimport { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, } from '../v3/gas-costs';\r\n/**\r\n * Computes a gas estimate for a mixed route swap using heuristics.\r\n * Considers number of hops in the route, number of ticks crossed\r\n * and the typical base cost for a swap.\r\n *\r\n * We get the number of ticks crossed in a swap from the MixedRouteQuoterV1\r\n * contract.\r\n *\r\n * We compute gas estimates off-chain because\r\n *  1/ Calling eth_estimateGas for a swaps requires the caller to have\r\n *     the full balance token being swapped, and approvals.\r\n *  2/ Tracking gas used using a wrapper contract is not accurate with Multicall\r\n *     due to EIP-2929. We would have to make a request for every swap we wanted to estimate.\r\n *  3/ For V2 we simulate all our swaps off-chain so have no way to track gas used.\r\n *\r\n * @export\r\n * @class MixedRouteHeuristicGasModelFactory\r\n */\r\nexport class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {\r\n    constructor() {\r\n        super();\r\n    }\r\n    async buildGasModel({ chainId, gasPriceWei, v3poolProvider: V3poolProvider, quoteToken, v2poolProvider: V2poolProvider, }) {\r\n        const usdPool = await getHighestLiquidityV3USDPool(chainId, V3poolProvider);\r\n        // If our quote token is WETH, we don't need to convert our gas use to be in terms\r\n        // of the quote token in order to produce a gas adjusted amount.\r\n        // We do return a gas use in USD however, so we still convert to usd.\r\n        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        if (quoteToken.equals(nativeCurrency)) {\r\n            const estimateGasCost = (routeWithValidQuote) => {\r\n                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n                const token0 = usdPool.token0.address == nativeCurrency.address;\r\n                const nativeTokenPrice = token0\r\n                    ? usdPool.token0Price\r\n                    : usdPool.token1Price;\r\n                const gasCostInTermsOfUSD = nativeTokenPrice.quote(totalGasCostNativeCurrency);\r\n                return {\r\n                    gasEstimate: baseGasUse,\r\n                    gasCostInToken: totalGasCostNativeCurrency,\r\n                    gasCostInUSD: gasCostInTermsOfUSD,\r\n                };\r\n            };\r\n            return {\r\n                estimateGasCost,\r\n            };\r\n        }\r\n        // If the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.\r\n        // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.\r\n        const nativeV3Pool = await getHighestLiquidityV3NativePool(quoteToken, V3poolProvider);\r\n        let nativeV2Pool;\r\n        if (V2poolProvider) {\r\n            /// MixedRoutes\r\n            nativeV2Pool = await getV2NativePool(quoteToken, V2poolProvider);\r\n        }\r\n        const usdToken = usdPool.token0.address == nativeCurrency.address\r\n            ? usdPool.token1\r\n            : usdPool.token0;\r\n        const estimateGasCost = (routeWithValidQuote) => {\r\n            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);\r\n            if (!nativeV3Pool && !nativeV2Pool) {\r\n                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);\r\n                return {\r\n                    gasEstimate: baseGasUse,\r\n                    gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\r\n                    gasCostInUSD: CurrencyAmount.fromRawAmount(usdToken, 0),\r\n                };\r\n            }\r\n            /// we will use nativeV2Pool for fallback if nativeV3 does not exist\r\n            /// can use ! here because we return above if v3Pool and v2Pool are null\r\n            const nativePool = !nativeV3Pool && nativeV2Pool ? nativeV2Pool : nativeV3Pool;\r\n            const token0 = nativePool.token0.address == nativeCurrency.address;\r\n            // returns mid price in terms of the native currency (the ratio of quoteToken/nativeToken)\r\n            const nativeTokenPrice = token0\r\n                ? nativePool.token0Price\r\n                : nativePool.token1Price;\r\n            let gasCostInTermsOfQuoteToken;\r\n            try {\r\n                // native token is base currency\r\n                gasCostInTermsOfQuoteToken = nativeTokenPrice.quote(totalGasCostNativeCurrency);\r\n            }\r\n            catch (err) {\r\n                log.info({\r\n                    nativeTokenPriceBase: nativeTokenPrice.baseCurrency,\r\n                    nativeTokenPriceQuote: nativeTokenPrice.quoteCurrency,\r\n                    gasCostInEth: totalGasCostNativeCurrency.currency,\r\n                }, 'Debug eth price token issue');\r\n                throw err;\r\n            }\r\n            // true if token0 is the native currency\r\n            const token0USDPool = usdPool.token0.address == nativeCurrency.address;\r\n            // gets the mid price of the pool in terms of the native token\r\n            const nativeTokenPriceUSDPool = token0USDPool\r\n                ? usdPool.token0Price\r\n                : usdPool.token1Price;\r\n            let gasCostInTermsOfUSD;\r\n            try {\r\n                gasCostInTermsOfUSD = nativeTokenPriceUSDPool.quote(totalGasCostNativeCurrency);\r\n            }\r\n            catch (err) {\r\n                log.info({\r\n                    usdT1: usdPool.token0.symbol,\r\n                    usdT2: usdPool.token1.symbol,\r\n                    gasCostInNativeToken: totalGasCostNativeCurrency.currency.symbol,\r\n                }, 'Failed to compute USD gas price');\r\n                throw err;\r\n            }\r\n            return {\r\n                gasEstimate: baseGasUse,\r\n                gasCostInToken: gasCostInTermsOfQuoteToken,\r\n                gasCostInUSD: gasCostInTermsOfUSD,\r\n            };\r\n        };\r\n        return {\r\n            estimateGasCost: estimateGasCost.bind(this),\r\n        };\r\n    }\r\n    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {\r\n        const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));\r\n        /**\r\n         * Since we must make a separate call to multicall for each v3 and v2 section, we will have to\r\n         * add the BASE_SWAP_COST to each section.\r\n         */\r\n        let baseGasUse = BigNumber.from(0);\r\n        const route = routeWithValidQuote.route;\r\n        const res = partitionMixedRouteByProtocol(route);\r\n        res.map((section) => {\r\n            if (section.every((pool) => pool instanceof Pool)) {\r\n                baseGasUse = baseGasUse.add(BASE_SWAP_COST(chainId));\r\n                baseGasUse = baseGasUse.add(COST_PER_HOP(chainId).mul(section.length));\r\n            }\r\n            else if (section.every((pool) => pool instanceof Pair)) {\r\n                baseGasUse = baseGasUse.add(BASE_SWAP_COST_V2);\r\n                baseGasUse = baseGasUse.add(\r\n                /// same behavior in v2 heuristic gas model factory\r\n                COST_PER_EXTRA_HOP_V2.mul(section.length - 1));\r\n            }\r\n        });\r\n        const tickGasUse = COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);\r\n        const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);\r\n        // base estimate gas used based on chainId estimates for hops and ticks gas useage\r\n        baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);\r\n        const baseGasCostWei = gasPriceWei.mul(baseGasUse);\r\n        const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];\r\n        const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());\r\n        return {\r\n            totalGasCostNativeCurrency,\r\n            totalInitializedTicksCrossed,\r\n            baseGasUse,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3RELE9BQU8sRUFBVyxHQUFHLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUNMLCtCQUErQixFQUMvQiw0QkFBNEIsRUFDNUIsZUFBZSxHQUNoQixNQUFNLHNDQUFzQyxDQUFDO0FBRTlDLE9BQU8sRUFHTCx1QkFBdUIsR0FDeEIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUNMLGNBQWMsSUFBSSxpQkFBaUIsRUFDbkMsa0JBQWtCLElBQUkscUJBQXFCLEdBQzVDLE1BQU0sOEJBQThCLENBQUM7QUFDdEMsT0FBTyxFQUNMLGNBQWMsRUFDZCxZQUFZLEVBQ1osa0JBQWtCLEVBQ2xCLG9CQUFvQixHQUNyQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNILE1BQU0sT0FBTyxrQ0FBbUMsU0FBUSx1QkFBdUI7SUFDN0U7UUFDRSxLQUFLLEVBQUUs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","import _ from 'lodash';\r\nimport { log, poolToString } from '../../../util';\r\n/**\r\n * Interface for a Quoter.\r\n * Defines the base dependencies, helper methods and interface for how to fetch quotes.\r\n *\r\n * @abstract\r\n * @template Route\r\n */\r\nexport class BaseQuoter {\r\n    constructor(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {\r\n        this.tokenProvider = tokenProvider;\r\n        this.chainId = chainId;\r\n        this.blockedTokenListProvider = blockedTokenListProvider;\r\n        this.tokenValidatorProvider = tokenValidatorProvider;\r\n    }\r\n    /**\r\n     * Public method which would first get the routes and then get the quotes.\r\n     *\r\n     * @param tokenIn The token that the user wants to provide\r\n     * @param tokenOut The token that the usaw wants to receive\r\n     * @param amounts the list of amounts to query for EACH route.\r\n     * @param percents the percentage of each amount.\r\n     * @param quoteToken\r\n     * @param tradeType\r\n     * @param routingConfig\r\n     * @param gasModel the gasModel to be used for estimating gas cost\r\n     * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel\r\n     */\r\n    getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, gasModel, gasPriceWei) {\r\n        return this.getRoutes(tokenIn, tokenOut, tradeType, routingConfig)\r\n            .then((routesResult) => this.getQuotes(routesResult.routes, amounts, percents, quoteToken, tradeType, routingConfig, routesResult.candidatePools, gasModel, gasPriceWei));\r\n    }\r\n    async applyTokenValidatorToPools(pools, isInvalidFn) {\r\n        if (!this.tokenValidatorProvider) {\r\n            return pools;\r\n        }\r\n        log.info(`Running token validator on ${pools.length} pools`);\r\n        const tokens = _.flatMap(pools, (pool) => [pool.token0, pool.token1]);\r\n        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(tokens);\r\n        const poolsFiltered = _.filter(pools, (pool) => {\r\n            const token0Validation = tokenValidationResults.getValidationByToken(pool.token0);\r\n            const token1Validation = tokenValidationResults.getValidationByToken(pool.token1);\r\n            const token0Invalid = isInvalidFn(pool.token0, token0Validation);\r\n            const token1Invalid = isInvalidFn(pool.token1, token1Validation);\r\n            if (token0Invalid || token1Invalid) {\r\n                log.info(`Dropping pool ${poolToString(pool)} because token is invalid. ${pool.token0.symbol}: ${token0Validation}, ${pool.token1.symbol}: ${token1Validation}`);\r\n            }\r\n            return !token0Invalid && !token1Invalid;\r\n        });\r\n        return poolsFiltered;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFHdkIsT0FBTyxFQUEyQixHQUFHLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUzNFOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBZ0IsVUFBVTtJQU05QixZQUNFLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLHdCQUF3QixHQUFHLHdCQUF3QixDQUFDO1FBQ3pELElBQUksQ0FBQyxzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQztJQUN2RCxDQUFDO0lBOENEOzs7Ozs7Ozs7Ozs7T0FZRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxhQUFhLENBQUM7YUFDL0QsSUFBSSxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FDckIsSUFBSSxDQUFDLFNBQVMsQ0FDWixZQUFZLENBQUMsTUFBTSxFQUNuQixPQUFPLEVBQ1AsUUFBUSxFQUNSLFVBQVUsRUFDVixTQUFTLEVBQ1QsYUFBYSxFQUNiLFlBQVksQ0FBQyxjQUFjLEVBQzNCLFFBQVEsRUFDUixXQUFXLENBQ1osQ0FDRixDQUFDO0lBQ04sQ0FBQztJQUVTLEtBQUssQ0FBQywwQkFBMEIsQ0FDeEMsS0FBVSxFQUNWLFdBR1k7UUFFWixJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFO1lBQ2hDLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxHQUFHLENBQUMsSUFBSSxDQUFDLDhCQUE4QixLQUFLLENBQUMsTUFBTSxRQUFRLENBQUMsQ0FBQztRQUU3RCxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXRFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxJQUFJLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXhGLE1BQU0sYUFBYSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBTyxFQUFFLEVBQUU7WUFDaEQsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBQ0YsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBRUYsTUFBTSxhQUFhLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUNqRSxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1lBRWpFLElBQUksYUFBYSxJQUFJLGFBQWEsRUFBRTtnQkFDbEMsR0FBRyxDQUFDLElBQUksQ0FDTixpQkFBaUIsWUFBWSxDQUFDLElBQUksQ0FBQyw4QkFBOEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUM3RSxLQUFLLGdCQUFnQixLQUFLLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLGdCQUFnQixFQUFFLENBQ3BFLENBQUM7YUFDSDtZQUVELE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0NBQ0YifQ==","import { Protocol } from '@uniswap/router-sdk';\r\nimport { TradeType } from '@uniswap/sdk-core';\r\nimport { Pool } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { CurrencyAmount } from '../../../util/amounts';\r\nimport { routeToString } from '../../../util/routes';\r\n/**\r\n * Represents a quote for swapping on a V2 only route. Contains all information\r\n * such as the route used, the amount specified by the user, the type of quote\r\n * (exact in or exact out), the quote itself, and gas estimates.\r\n *\r\n * @export\r\n * @class V2RouteWithValidQuote\r\n */\r\nexport class V2RouteWithValidQuote {\r\n    toString() {\r\n        return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;\r\n    }\r\n    constructor({ amount, rawQuote, percent, route, gasModel, quoteToken, tradeType, v2PoolProvider, }) {\r\n        this.protocol = Protocol.V2;\r\n        this.amount = amount;\r\n        this.rawQuote = rawQuote;\r\n        this.quote = CurrencyAmount.fromRawAmount(quoteToken, rawQuote.toString());\r\n        this.percent = percent;\r\n        this.route = route;\r\n        this.gasModel = gasModel;\r\n        this.quoteToken = quoteToken;\r\n        this.tradeType = tradeType;\r\n        const { gasEstimate, gasCostInToken, gasCostInUSD } = this.gasModel.estimateGasCost(this);\r\n        this.gasCostInToken = gasCostInToken;\r\n        this.gasCostInUSD = gasCostInUSD;\r\n        this.gasEstimate = gasEstimate;\r\n        // If its exact out, we need to request *more* of the input token to account for the gas.\r\n        if (this.tradeType == TradeType.EXACT_INPUT) {\r\n            const quoteGasAdjusted = this.quote.subtract(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        else {\r\n            const quoteGasAdjusted = this.quote.add(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        this.poolAddresses = _.map(route.pairs, (p) => v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress);\r\n        this.tokenPath = this.route.path;\r\n    }\r\n}\r\n/**\r\n * Represents a quote for swapping on a V3 only route. Contains all information\r\n * such as the route used, the amount specified by the user, the type of quote\r\n * (exact in or exact out), the quote itself, and gas estimates.\r\n *\r\n * @export\r\n * @class V3RouteWithValidQuote\r\n */\r\nexport class V3RouteWithValidQuote {\r\n    toString() {\r\n        return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;\r\n    }\r\n    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v3PoolProvider, }) {\r\n        this.protocol = Protocol.V3;\r\n        this.amount = amount;\r\n        this.rawQuote = rawQuote;\r\n        this.sqrtPriceX96AfterList = sqrtPriceX96AfterList;\r\n        this.initializedTicksCrossedList = initializedTicksCrossedList;\r\n        this.quoterGasEstimate = quoterGasEstimate;\r\n        this.quote = CurrencyAmount.fromRawAmount(quoteToken, rawQuote.toString());\r\n        this.percent = percent;\r\n        this.route = route;\r\n        this.gasModel = gasModel;\r\n        this.quoteToken = quoteToken;\r\n        this.tradeType = tradeType;\r\n        const { gasEstimate, gasCostInToken, gasCostInUSD } = this.gasModel.estimateGasCost(this);\r\n        this.gasCostInToken = gasCostInToken;\r\n        this.gasCostInUSD = gasCostInUSD;\r\n        this.gasEstimate = gasEstimate;\r\n        // If its exact out, we need to request *more* of the input token to account for the gas.\r\n        if (this.tradeType == TradeType.EXACT_INPUT) {\r\n            const quoteGasAdjusted = this.quote.subtract(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        else {\r\n            const quoteGasAdjusted = this.quote.add(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        this.poolAddresses = _.map(route.pools, (p) => v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress);\r\n        this.tokenPath = this.route.tokenPath;\r\n    }\r\n}\r\n/**\r\n * Represents a quote for swapping on a Mixed Route. Contains all information\r\n * such as the route used, the amount specified by the user, the type of quote\r\n * (exact in or exact out), the quote itself, and gas estimates.\r\n *\r\n * @export\r\n * @class MixedRouteWithValidQuote\r\n */\r\nexport class MixedRouteWithValidQuote {\r\n    toString() {\r\n        return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;\r\n    }\r\n    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v3PoolProvider, v2PoolProvider, }) {\r\n        this.protocol = Protocol.MIXED;\r\n        this.amount = amount;\r\n        this.rawQuote = rawQuote;\r\n        this.sqrtPriceX96AfterList = sqrtPriceX96AfterList;\r\n        this.initializedTicksCrossedList = initializedTicksCrossedList;\r\n        this.quoterGasEstimate = quoterGasEstimate;\r\n        this.quote = CurrencyAmount.fromRawAmount(quoteToken, rawQuote.toString());\r\n        this.percent = percent;\r\n        this.route = route;\r\n        this.gasModel = mixedRouteGasModel;\r\n        this.quoteToken = quoteToken;\r\n        this.tradeType = tradeType;\r\n        const { gasEstimate, gasCostInToken, gasCostInUSD } = this.gasModel.estimateGasCost(this);\r\n        this.gasCostInToken = gasCostInToken;\r\n        this.gasCostInUSD = gasCostInUSD;\r\n        this.gasEstimate = gasEstimate;\r\n        // If its exact out, we need to request *more* of the input token to account for the gas.\r\n        if (this.tradeType == TradeType.EXACT_INPUT) {\r\n            const quoteGasAdjusted = this.quote.subtract(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        else {\r\n            const quoteGasAdjusted = this.quote.add(gasCostInToken);\r\n            this.quoteAdjustedForGas = quoteGasAdjusted;\r\n        }\r\n        this.poolAddresses = _.map(route.pools, (p) => {\r\n            return p instanceof Pool\r\n                ? v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress\r\n                : v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress;\r\n        });\r\n        this.tokenPath = this.route.path;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtd2l0aC12YWxpZC1xdW90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9lbnRpdGllcy9yb3V0ZS13aXRoLXZhbGlkLXF1b3RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQVMsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBMERyRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQWtCekIsUUFBUTtRQUNiLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FDNUIsQ0FBQyxDQUNGLGlCQUFpQixJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLFdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsU0FBUyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxPQUFPLGFBQWEsQ0FDekksSUFBSSxDQUFDLEtBQUssQ0FDWCxFQUFFLENBQUM7SUFDTixDQUFDO0lBRUQsWUFBWSxFQUNWLE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxFQUNQLEtBQUssRUFDTCxRQUFRLEVBQ1IsVUFBVSxFQUNWLFNBQVMsRUFDVCxjQUFjLEdBQ2M7UUFsQ2QsYUFBUSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFtQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FB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","import { Pair } from '@uniswap/v2-sdk';\r\nimport { Pool } from '@uniswap/v3-sdk';\r\nimport { log } from '../../../util/log';\r\nimport { poolToString, routeToString } from '../../../util/routes';\r\nimport { MixedRoute, V2Route, V3Route } from '../../router';\r\nexport function computeAllV3Routes(tokenIn, tokenOut, pools, maxHops) {\r\n    return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\r\n        return new V3Route(route, tokenIn, tokenOut);\r\n    }, pools, maxHops);\r\n}\r\nexport function computeAllV2Routes(tokenIn, tokenOut, pools, maxHops) {\r\n    return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\r\n        return new V2Route(route, tokenIn, tokenOut);\r\n    }, pools, maxHops);\r\n}\r\nexport function computeAllMixedRoutes(tokenIn, tokenOut, parts, maxHops) {\r\n    const routesRaw = computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\r\n        return new MixedRoute(route, tokenIn, tokenOut);\r\n    }, parts, maxHops);\r\n    /// filter out pure v3 and v2 routes\r\n    return routesRaw.filter((route) => {\r\n        return (!route.pools.every((pool) => pool instanceof Pool) &&\r\n            !route.pools.every((pool) => pool instanceof Pair));\r\n    });\r\n}\r\nexport function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {\r\n    var _a;\r\n    const poolsUsed = Array(pools.length).fill(false);\r\n    const routes = [];\r\n    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, _previousTokenOut) => {\r\n        if (currentRoute.length > maxHops) {\r\n            return;\r\n        }\r\n        if (currentRoute.length > 0 &&\r\n            currentRoute[currentRoute.length - 1].involvesToken(tokenOut)) {\r\n            routes.push(buildRoute([...currentRoute], tokenIn, tokenOut));\r\n            return;\r\n        }\r\n        for (let i = 0; i < pools.length; i++) {\r\n            if (poolsUsed[i]) {\r\n                continue;\r\n            }\r\n            const curPool = pools[i];\r\n            const previousTokenOut = _previousTokenOut ? _previousTokenOut : tokenIn;\r\n            if (!curPool.involvesToken(previousTokenOut)) {\r\n                continue;\r\n            }\r\n            const currentTokenOut = curPool.token0.equals(previousTokenOut)\r\n                ? curPool.token1\r\n                : curPool.token0;\r\n            currentRoute.push(curPool);\r\n            poolsUsed[i] = true;\r\n            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, currentTokenOut);\r\n            poolsUsed[i] = false;\r\n            currentRoute.pop();\r\n        }\r\n    };\r\n    computeRoutes(tokenIn, tokenOut, [], poolsUsed);\r\n    log.info({\r\n        routes: routes.map(routeToString),\r\n        pools: pools.map(poolToString),\r\n    }, `Computed ${routes.length} possible routes for type ${(_a = routes[0]) === null || _a === void 0 ? void 0 : _a.protocol}.`);\r\n    return routes;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFNUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVBQ0wsT0FBTyxDQUNSLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVB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","import { Protocol } from '@uniswap/router-sdk';\r\nimport { TradeType } from '@uniswap/sdk-core';\r\nimport { FeeAmount } from '@uniswap/v3-sdk';\r\nimport _ from 'lodash';\r\nimport { USDC_FUJI, } from '../../../providers/token-provider';\r\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../../util';\r\nimport { parseFeeAmount, unparseFeeAmount } from '../../../util/amounts';\r\nimport { log } from '../../../util/log';\r\nimport { metric, MetricLoggerUnit } from '../../../util/metric';\r\nconst baseTokensByChain = {\r\n    [ChainId.FUJI]: [USDC_FUJI],\r\n};\r\nexport async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {\r\n    var _a, _b, _c, _d, _e, _f;\r\n    const { blockNumber, v3PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;\r\n    const tokenInAddress = tokenIn.address.toLowerCase();\r\n    const tokenOutAddress = tokenOut.address.toLowerCase();\r\n    const beforeSubgraphPools = Date.now();\r\n    const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {\r\n        blockNumber,\r\n    });\r\n    log.info({ samplePools: allPoolsRaw.slice(0, 3) }, 'Got all pools from V3 subgraph provider');\r\n    const allPools = _.map(allPoolsRaw, (pool) => {\r\n        return {\r\n            ...pool,\r\n            token0: {\r\n                ...pool.token0,\r\n                id: pool.token0.id.toLowerCase(),\r\n            },\r\n            token1: {\r\n                ...pool.token1,\r\n                id: pool.token1.id.toLowerCase(),\r\n            },\r\n        };\r\n    });\r\n    metric.putMetric('V3SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);\r\n    // Only consider pools where neither tokens are in the blocked token list.\r\n    let filteredPools = allPools;\r\n    if (blockedTokenListProvider) {\r\n        filteredPools = [];\r\n        for (const pool of allPools) {\r\n            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);\r\n            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);\r\n            if (token0InBlocklist || token1InBlocklist) {\r\n                continue;\r\n            }\r\n            filteredPools.push(pool);\r\n        }\r\n    }\r\n    const subgraphPoolsSorted = _(filteredPools)\r\n        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)\r\n        .value();\r\n    log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);\r\n    const poolAddressesSoFar = new Set();\r\n    const addToAddressSet = (pools) => {\r\n        _(pools)\r\n            .map((pool) => pool.id)\r\n            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));\r\n    };\r\n    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];\r\n    const topByBaseWithTokenIn = _(baseTokens)\r\n        .flatMap((token) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            const tokenAddress = token.address.toLowerCase();\r\n            return ((subgraphPool.token0.id == tokenAddress &&\r\n                subgraphPool.token1.id == tokenInAddress) ||\r\n                (subgraphPool.token1.id == tokenAddress &&\r\n                    subgraphPool.token0.id == tokenInAddress));\r\n        })\r\n            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)\r\n            .slice(0, topNWithEachBaseToken)\r\n            .value();\r\n    })\r\n        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)\r\n        .slice(0, topNWithBaseToken)\r\n        .value();\r\n    const topByBaseWithTokenOut = _(baseTokens)\r\n        .flatMap((token) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            const tokenAddress = token.address.toLowerCase();\r\n            return ((subgraphPool.token0.id == tokenAddress &&\r\n                subgraphPool.token1.id == tokenOutAddress) ||\r\n                (subgraphPool.token1.id == tokenAddress &&\r\n                    subgraphPool.token0.id == tokenOutAddress));\r\n        })\r\n            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)\r\n            .slice(0, topNWithEachBaseToken)\r\n            .value();\r\n    })\r\n        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)\r\n        .slice(0, topNWithBaseToken)\r\n        .value();\r\n    let top2DirectSwapPool = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n            ((subgraphPool.token0.id == tokenInAddress &&\r\n                subgraphPool.token1.id == tokenOutAddress) ||\r\n                (subgraphPool.token1.id == tokenInAddress &&\r\n                    subgraphPool.token0.id == tokenOutAddress)));\r\n    })\r\n        .slice(0, topNDirectSwaps)\r\n        .value();\r\n    if (top2DirectSwapPool.length == 0 && topNDirectSwaps > 0) {\r\n        // If we requested direct swap pools but did not find any in the subgraph query.\r\n        // Optimistically add them into the query regardless. Invalid pools ones will be dropped anyway\r\n        // when we query the pool on-chain. Ensures that new pools for new pairs can be swapped on immediately.\r\n        top2DirectSwapPool = _.map([FeeAmount.HIGH, FeeAmount.MEDIUM, FeeAmount.LOW, FeeAmount.LOWEST], (feeAmount) => {\r\n            const { token0, token1, poolAddress } = poolProvider.getPoolAddress(tokenIn, tokenOut, feeAmount);\r\n            return {\r\n                id: poolAddress,\r\n                feeTier: unparseFeeAmount(feeAmount),\r\n                liquidity: '10000',\r\n                token0: {\r\n                    id: token0.address,\r\n                },\r\n                token1: {\r\n                    id: token1.address,\r\n                },\r\n                tvlETH: 10000,\r\n                tvlUSD: 10000,\r\n            };\r\n        });\r\n    }\r\n    addToAddressSet(top2DirectSwapPool);\r\n    const wrappedNativeAddress = (_b = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address;\r\n    // Main reason we need this is for gas estimates, only needed if token out is not native.\r\n    // We don't check the seen address set because if we've already added pools for getting native quotes\r\n    // theres no need to add more.\r\n    let top2EthQuoteTokenPool = [];\r\n    if ((((_c = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _c === void 0 ? void 0 : _c.symbol) ==\r\n        ((_d = WRAPPED_NATIVE_CURRENCY[ChainId.FUJI]) === null || _d === void 0 ? void 0 : _d.symbol) &&\r\n        tokenOut.symbol != 'AVAX' &&\r\n        tokenOut.symbol != 'WAVAX') ||\r\n        (((_e = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _e === void 0 ? void 0 : _e.symbol) ==\r\n            ((_f = WRAPPED_NATIVE_CURRENCY[ChainId.AVAX]) === null || _f === void 0 ? void 0 : _f.symbol) &&\r\n            tokenOut.symbol != 'AVAX' &&\r\n            tokenOut.symbol != 'WAVAX')) {\r\n        top2EthQuoteTokenPool = _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            if (routeType == TradeType.EXACT_INPUT) {\r\n                return ((subgraphPool.token0.id == wrappedNativeAddress &&\r\n                    subgraphPool.token1.id == tokenOutAddress) ||\r\n                    (subgraphPool.token1.id == wrappedNativeAddress &&\r\n                        subgraphPool.token0.id == tokenOutAddress));\r\n            }\r\n            else {\r\n                return ((subgraphPool.token0.id == wrappedNativeAddress &&\r\n                    subgraphPool.token1.id == tokenInAddress) ||\r\n                    (subgraphPool.token1.id == wrappedNativeAddress &&\r\n                        subgraphPool.token0.id == tokenInAddress));\r\n            }\r\n        })\r\n            .slice(0, 1)\r\n            .value();\r\n    }\r\n    addToAddressSet(top2EthQuoteTokenPool);\r\n    const topByTVL = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return !poolAddressesSoFar.has(subgraphPool.id);\r\n    })\r\n        .slice(0, topN)\r\n        .value();\r\n    addToAddressSet(topByTVL);\r\n    const topByTVLUsingTokenIn = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n            (subgraphPool.token0.id == tokenInAddress ||\r\n                subgraphPool.token1.id == tokenInAddress));\r\n    })\r\n        .slice(0, topNTokenInOut)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenIn);\r\n    const topByTVLUsingTokenOut = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n            (subgraphPool.token0.id == tokenOutAddress ||\r\n                subgraphPool.token1.id == tokenOutAddress));\r\n    })\r\n        .slice(0, topNTokenInOut)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenOut);\r\n    const topByTVLUsingTokenInSecondHops = _(topByTVLUsingTokenIn)\r\n        .map((subgraphPool) => {\r\n        return tokenInAddress == subgraphPool.token0.id\r\n            ? subgraphPool.token1.id\r\n            : subgraphPool.token0.id;\r\n    })\r\n        .flatMap((secondHopId) => {\r\n        var _a;\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n                (subgraphPool.token0.id == secondHopId ||\r\n                    subgraphPool.token1.id == secondHopId));\r\n        })\r\n            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)\r\n            .value();\r\n    })\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenInSecondHops);\r\n    const topByTVLUsingTokenOutSecondHops = _(topByTVLUsingTokenOut)\r\n        .map((subgraphPool) => {\r\n        return tokenOutAddress == subgraphPool.token0.id\r\n            ? subgraphPool.token1.id\r\n            : subgraphPool.token0.id;\r\n    })\r\n        .flatMap((secondHopId) => {\r\n        var _a;\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n                (subgraphPool.token0.id == secondHopId ||\r\n                    subgraphPool.token1.id == secondHopId));\r\n        })\r\n            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)\r\n            .value();\r\n    })\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenOutSecondHops);\r\n    const subgraphPools = _([\r\n        ...topByBaseWithTokenIn,\r\n        ...topByBaseWithTokenOut,\r\n        ...top2DirectSwapPool,\r\n        ...top2EthQuoteTokenPool,\r\n        ...topByTVL,\r\n        ...topByTVLUsingTokenIn,\r\n        ...topByTVLUsingTokenOut,\r\n        ...topByTVLUsingTokenInSecondHops,\r\n        ...topByTVLUsingTokenOutSecondHops,\r\n    ])\r\n        .compact()\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    const tokenAddresses = _(subgraphPools)\r\n        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])\r\n        .compact()\r\n        .uniq()\r\n        .value();\r\n    log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V3 pools we are considering`);\r\n    const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {\r\n        blockNumber,\r\n    });\r\n    const printV3SubgraphPool = (s) => {\r\n        var _a, _b, _c, _d;\r\n        return `${(_b = (_a = tokenAccessor.getTokenByAddress(s.token0.id)) === null || _a === void 0 ? void 0 : _a.symbol) !== null && _b !== void 0 ? _b : s.token0.id}/${(_d = (_c = tokenAccessor.getTokenByAddress(s.token1.id)) === null || _c === void 0 ? void 0 : _c.symbol) !== null && _d !== void 0 ? _d : s.token1.id}/${s.feeTier}`;\r\n    };\r\n    log.info({\r\n        topByBaseWithTokenIn: topByBaseWithTokenIn.map(printV3SubgraphPool),\r\n        topByBaseWithTokenOut: topByBaseWithTokenOut.map(printV3SubgraphPool),\r\n        topByTVL: topByTVL.map(printV3SubgraphPool),\r\n        topByTVLUsingTokenIn: topByTVLUsingTokenIn.map(printV3SubgraphPool),\r\n        topByTVLUsingTokenOut: topByTVLUsingTokenOut.map(printV3SubgraphPool),\r\n        topByTVLUsingTokenInSecondHops: topByTVLUsingTokenInSecondHops.map(printV3SubgraphPool),\r\n        topByTVLUsingTokenOutSecondHops: topByTVLUsingTokenOutSecondHops.map(printV3SubgraphPool),\r\n        top2DirectSwap: top2DirectSwapPool.map(printV3SubgraphPool),\r\n        top2EthQuotePool: top2EthQuoteTokenPool.map(printV3SubgraphPool),\r\n    }, `V3 Candidate Pools`);\r\n    const tokenPairsRaw = _.map(subgraphPools, (subgraphPool) => {\r\n        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);\r\n        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);\r\n        let fee;\r\n        try {\r\n            fee = parseFeeAmount(subgraphPool.feeTier);\r\n        }\r\n        catch (err) {\r\n            log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);\r\n            return undefined;\r\n        }\r\n        if (!tokenA || !tokenB) {\r\n            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);\r\n            return undefined;\r\n        }\r\n        return [tokenA, tokenB, fee];\r\n    });\r\n    const tokenPairs = _.compact(tokenPairsRaw);\r\n    const beforePoolsLoad = Date.now();\r\n    const poolAccessor = await poolProvider.getPools(tokenPairs);\r\n    metric.putMetric('V3PoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);\r\n    const poolsBySelection = {\r\n        protocol: Protocol.V3,\r\n        selections: {\r\n            topByBaseWithTokenIn,\r\n            topByBaseWithTokenOut,\r\n            topByDirectSwapPool: top2DirectSwapPool,\r\n            topByEthQuoteTokenPool: top2EthQuoteTokenPool,\r\n            topByTVL,\r\n            topByTVLUsingTokenIn,\r\n            topByTVLUsingTokenOut,\r\n            topByTVLUsingTokenInSecondHops,\r\n            topByTVLUsingTokenOutSecondHops,\r\n        },\r\n    };\r\n    return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };\r\n}\r\nexport async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {\r\n    var _a;\r\n    const { blockNumber, v2PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;\r\n    const tokenInAddress = tokenIn.address.toLowerCase();\r\n    const tokenOutAddress = tokenOut.address.toLowerCase();\r\n    const beforeSubgraphPools = Date.now();\r\n    const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {\r\n        blockNumber,\r\n    });\r\n    const allPools = _.map(allPoolsRaw, (pool) => {\r\n        return {\r\n            ...pool,\r\n            token0: {\r\n                ...pool.token0,\r\n                id: pool.token0.id.toLowerCase(),\r\n            },\r\n            token1: {\r\n                ...pool.token1,\r\n                id: pool.token1.id.toLowerCase(),\r\n            },\r\n        };\r\n    });\r\n    metric.putMetric('V2SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);\r\n    // Only consider pools where neither tokens are in the blocked token list.\r\n    let filteredPools = allPools;\r\n    if (blockedTokenListProvider) {\r\n        filteredPools = [];\r\n        for (const pool of allPools) {\r\n            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);\r\n            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);\r\n            if (token0InBlocklist || token1InBlocklist) {\r\n                continue;\r\n            }\r\n            filteredPools.push(pool);\r\n        }\r\n    }\r\n    const subgraphPoolsSorted = _(filteredPools)\r\n        .sortBy((tokenListPool) => -tokenListPool.reserve)\r\n        .value();\r\n    log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);\r\n    const poolAddressesSoFar = new Set();\r\n    const addToAddressSet = (pools) => {\r\n        _(pools)\r\n            .map((pool) => pool.id)\r\n            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));\r\n    };\r\n    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];\r\n    const topByBaseWithTokenIn = _(baseTokens)\r\n        .flatMap((token) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            const tokenAddress = token.address.toLowerCase();\r\n            return ((subgraphPool.token0.id == tokenAddress &&\r\n                subgraphPool.token1.id == tokenInAddress) ||\r\n                (subgraphPool.token1.id == tokenAddress &&\r\n                    subgraphPool.token0.id == tokenInAddress));\r\n        })\r\n            .sortBy((tokenListPool) => -tokenListPool.reserve)\r\n            .slice(0, topNWithEachBaseToken)\r\n            .value();\r\n    })\r\n        .sortBy((tokenListPool) => -tokenListPool.reserve)\r\n        .slice(0, topNWithBaseToken)\r\n        .value();\r\n    const topByBaseWithTokenOut = _(baseTokens)\r\n        .flatMap((token) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            const tokenAddress = token.address.toLowerCase();\r\n            return ((subgraphPool.token0.id == tokenAddress &&\r\n                subgraphPool.token1.id == tokenOutAddress) ||\r\n                (subgraphPool.token1.id == tokenAddress &&\r\n                    subgraphPool.token0.id == tokenOutAddress));\r\n        })\r\n            .sortBy((tokenListPool) => -tokenListPool.reserve)\r\n            .slice(0, topNWithEachBaseToken)\r\n            .value();\r\n    })\r\n        .sortBy((tokenListPool) => -tokenListPool.reserve)\r\n        .slice(0, topNWithBaseToken)\r\n        .value();\r\n    // Always add the direct swap pool into the mix regardless of if it exists in the subgraph pool list.\r\n    // Ensures that new pools can be swapped on immediately, and that if a pool was filtered out of the\r\n    // subgraph query for some reason (e.g. trackedReserveETH was 0), then we still consider it.\r\n    let topByDirectSwapPool = [];\r\n    if (topNDirectSwaps != 0) {\r\n        const { token0, token1, poolAddress } = poolProvider.getPoolAddress(tokenIn, tokenOut);\r\n        topByDirectSwapPool = [\r\n            {\r\n                id: poolAddress,\r\n                token0: {\r\n                    id: token0.address,\r\n                },\r\n                token1: {\r\n                    id: token1.address,\r\n                },\r\n                supply: 10000,\r\n                reserve: 10000,\r\n                reserveUSD: 10000, // Not used. Set to arbitrary number.\r\n            },\r\n        ];\r\n    }\r\n    addToAddressSet(topByDirectSwapPool);\r\n    const wethAddress = WRAPPED_NATIVE_CURRENCY[chainId].address;\r\n    // Main reason we need this is for gas estimates, only needed if token out is not ETH.\r\n    // We don't check the seen address set because if we've already added pools for getting ETH quotes\r\n    // theres no need to add more.\r\n    // Note: we do not need to check other native currencies for the V2 Protocol\r\n    let topByEthQuoteTokenPool = [];\r\n    if (tokenOut.symbol != 'WETH' &&\r\n        tokenOut.symbol != 'WETH9' &&\r\n        tokenOut.symbol != 'ETH') {\r\n        topByEthQuoteTokenPool = _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            if (routeType == TradeType.EXACT_INPUT) {\r\n                return ((subgraphPool.token0.id == wethAddress &&\r\n                    subgraphPool.token1.id == tokenOutAddress) ||\r\n                    (subgraphPool.token1.id == wethAddress &&\r\n                        subgraphPool.token0.id == tokenOutAddress));\r\n            }\r\n            else {\r\n                return ((subgraphPool.token0.id == wethAddress &&\r\n                    subgraphPool.token1.id == tokenInAddress) ||\r\n                    (subgraphPool.token1.id == wethAddress &&\r\n                        subgraphPool.token0.id == tokenInAddress));\r\n            }\r\n        })\r\n            .slice(0, 1)\r\n            .value();\r\n    }\r\n    addToAddressSet(topByEthQuoteTokenPool);\r\n    const topByTVL = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return !poolAddressesSoFar.has(subgraphPool.id);\r\n    })\r\n        .slice(0, topN)\r\n        .value();\r\n    addToAddressSet(topByTVL);\r\n    const topByTVLUsingTokenIn = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n            (subgraphPool.token0.id == tokenInAddress ||\r\n                subgraphPool.token1.id == tokenInAddress));\r\n    })\r\n        .slice(0, topNTokenInOut)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenIn);\r\n    const topByTVLUsingTokenOut = _(subgraphPoolsSorted)\r\n        .filter((subgraphPool) => {\r\n        return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n            (subgraphPool.token0.id == tokenOutAddress ||\r\n                subgraphPool.token1.id == tokenOutAddress));\r\n    })\r\n        .slice(0, topNTokenInOut)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenOut);\r\n    const topByTVLUsingTokenInSecondHops = _(topByTVLUsingTokenIn)\r\n        .map((subgraphPool) => {\r\n        return tokenInAddress == subgraphPool.token0.id\r\n            ? subgraphPool.token1.id\r\n            : subgraphPool.token0.id;\r\n    })\r\n        .flatMap((secondHopId) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n                (subgraphPool.token0.id == secondHopId ||\r\n                    subgraphPool.token1.id == secondHopId));\r\n        })\r\n            .slice(0, topNSecondHop)\r\n            .value();\r\n    })\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenInSecondHops);\r\n    const topByTVLUsingTokenOutSecondHops = _(topByTVLUsingTokenOut)\r\n        .map((subgraphPool) => {\r\n        return tokenOutAddress == subgraphPool.token0.id\r\n            ? subgraphPool.token1.id\r\n            : subgraphPool.token0.id;\r\n    })\r\n        .flatMap((secondHopId) => {\r\n        return _(subgraphPoolsSorted)\r\n            .filter((subgraphPool) => {\r\n            return (!poolAddressesSoFar.has(subgraphPool.id) &&\r\n                (subgraphPool.token0.id == secondHopId ||\r\n                    subgraphPool.token1.id == secondHopId));\r\n        })\r\n            .slice(0, topNSecondHop)\r\n            .value();\r\n    })\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    addToAddressSet(topByTVLUsingTokenOutSecondHops);\r\n    const subgraphPools = _([\r\n        ...topByBaseWithTokenIn,\r\n        ...topByBaseWithTokenOut,\r\n        ...topByDirectSwapPool,\r\n        ...topByEthQuoteTokenPool,\r\n        ...topByTVL,\r\n        ...topByTVLUsingTokenIn,\r\n        ...topByTVLUsingTokenOut,\r\n        ...topByTVLUsingTokenInSecondHops,\r\n        ...topByTVLUsingTokenOutSecondHops,\r\n    ])\r\n        .compact()\r\n        .uniqBy((pool) => pool.id)\r\n        .value();\r\n    const tokenAddresses = _(subgraphPools)\r\n        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])\r\n        .compact()\r\n        .uniq()\r\n        .value();\r\n    log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V2 pools we are considering`);\r\n    const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {\r\n        blockNumber,\r\n    });\r\n    const printV2SubgraphPool = (s) => {\r\n        var _a, _b, _c, _d;\r\n        return `${(_b = (_a = tokenAccessor.getTokenByAddress(s.token0.id)) === null || _a === void 0 ? void 0 : _a.symbol) !== null && _b !== void 0 ? _b : s.token0.id}/${(_d = (_c = tokenAccessor.getTokenByAddress(s.token1.id)) === null || _c === void 0 ? void 0 : _c.symbol) !== null && _d !== void 0 ? _d : s.token1.id}`;\r\n    };\r\n    log.info({\r\n        topByBaseWithTokenIn: topByBaseWithTokenIn.map(printV2SubgraphPool),\r\n        topByBaseWithTokenOut: topByBaseWithTokenOut.map(printV2SubgraphPool),\r\n        topByTVL: topByTVL.map(printV2SubgraphPool),\r\n        topByTVLUsingTokenIn: topByTVLUsingTokenIn.map(printV2SubgraphPool),\r\n        topByTVLUsingTokenOut: topByTVLUsingTokenOut.map(printV2SubgraphPool),\r\n        topByTVLUsingTokenInSecondHops: topByTVLUsingTokenInSecondHops.map(printV2SubgraphPool),\r\n        topByTVLUsingTokenOutSecondHops: topByTVLUsingTokenOutSecondHops.map(printV2SubgraphPool),\r\n        top2DirectSwap: topByDirectSwapPool.map(printV2SubgraphPool),\r\n        top2EthQuotePool: topByEthQuoteTokenPool.map(printV2SubgraphPool),\r\n    }, `V2 Candidate pools`);\r\n    const tokenPairsRaw = _.map(subgraphPools, (subgraphPool) => {\r\n        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);\r\n        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);\r\n        if (!tokenA || !tokenB) {\r\n            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}`);\r\n            return undefined;\r\n        }\r\n        return [tokenA, tokenB];\r\n    });\r\n    const tokenPairs = _.compact(tokenPairsRaw);\r\n    const beforePoolsLoad = Date.now();\r\n    const poolAccessor = await poolProvider.getPools(tokenPairs, { blockNumber });\r\n    metric.putMetric('V2PoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);\r\n    const poolsBySelection = {\r\n        protocol: Protocol.V2,\r\n        selections: {\r\n            topByBaseWithTokenIn,\r\n            topByBaseWithTokenOut,\r\n            topByDirectSwapPool,\r\n            topByEthQuoteTokenPool: topByEthQuoteTokenPool,\r\n            topByTVL,\r\n            topByTVLUsingTokenIn,\r\n            topByTVLUsingTokenOut,\r\n            topByTVLUsingTokenInSecondHops,\r\n            topByTVLUsingTokenOutSecondHops,\r\n        },\r\n    };\r\n    return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };\r\n}\r\nexport async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routingConfig, v3subgraphProvider, v2subgraphProvider, tokenProvider, v3poolProvider, v2poolProvider, blockedTokenListProvider, chainId, }) {\r\n    const { blockNumber } = routingConfig;\r\n    const { subgraphPools: V3subgraphPools, candidatePools: V3candidatePools } = await getV3CandidatePools({\r\n        tokenIn,\r\n        tokenOut,\r\n        tokenProvider,\r\n        blockedTokenListProvider,\r\n        poolProvider: v3poolProvider,\r\n        routeType,\r\n        subgraphProvider: v3subgraphProvider,\r\n        routingConfig,\r\n        chainId,\r\n    });\r\n    const { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools } = await getV2CandidatePools({\r\n        tokenIn,\r\n        tokenOut,\r\n        tokenProvider,\r\n        blockedTokenListProvider,\r\n        poolProvider: v2poolProvider,\r\n        routeType,\r\n        subgraphProvider: v2subgraphProvider,\r\n        routingConfig,\r\n        chainId,\r\n    });\r\n    /**\r\n     * Main heuristic for pruning mixedRoutes:\r\n     * - we pick V2 pools with higher liq than respective V3 pools, or if the v3 pool doesn't exist\r\n     *\r\n     * This way we can reduce calls to our provider since it's possible to generate a lot of mixed routes\r\n     */\r\n    /// We only really care about pools involving the tokenIn or tokenOut explictly,\r\n    /// since there's no way a long tail token in V2 would be routed through as an intermediary\r\n    const V2topByTVLPoolIds = new Set([\r\n        ...V2candidatePools.selections.topByTVLUsingTokenIn,\r\n        ...V2candidatePools.selections.topByBaseWithTokenIn,\r\n        /// tokenOut:\r\n        ...V2candidatePools.selections.topByTVLUsingTokenOut,\r\n        ...V2candidatePools.selections.topByBaseWithTokenOut,\r\n        /// Direct swap:\r\n        ...V2candidatePools.selections.topByDirectSwapPool,\r\n    ].map((poolId) => poolId.id));\r\n    const V2topByTVLSortedPools = _(V2subgraphPools)\r\n        .filter((pool) => V2topByTVLPoolIds.has(pool.id))\r\n        .sortBy((pool) => -pool.reserveUSD)\r\n        .value();\r\n    /// we consider all returned V3 pools for this heuristic to \"fill in the gaps\"\r\n    const V3sortedPools = _(V3subgraphPools)\r\n        .sortBy((pool) => -pool.tvlUSD)\r\n        .value();\r\n    /// Finding pools with greater reserveUSD on v2 than tvlUSD on v3, or if there is no v3 liquidity\r\n    const buildV2Pools = [];\r\n    V2topByTVLSortedPools.forEach((V2subgraphPool) => {\r\n        const V3subgraphPool = V3sortedPools.find((pool) => (pool.token0.id == V2subgraphPool.token0.id &&\r\n            pool.token1.id == V2subgraphPool.token1.id) ||\r\n            (pool.token0.id == V2subgraphPool.token1.id &&\r\n                pool.token1.id == V2subgraphPool.token0.id));\r\n        if (V3subgraphPool) {\r\n            if (V2subgraphPool.reserveUSD > V3subgraphPool.tvlUSD) {\r\n                log.info({\r\n                    token0: V2subgraphPool.token0.id,\r\n                    token1: V2subgraphPool.token1.id,\r\n                    v2reserveUSD: V2subgraphPool.reserveUSD,\r\n                    v3tvlUSD: V3subgraphPool.tvlUSD,\r\n                }, `MixedRoute heuristic, found a V2 pool with higher liquidity than its V3 counterpart`);\r\n                buildV2Pools.push(V2subgraphPool);\r\n            }\r\n        }\r\n        else {\r\n            log.info({\r\n                token0: V2subgraphPool.token0.id,\r\n                token1: V2subgraphPool.token1.id,\r\n                v2reserveUSD: V2subgraphPool.reserveUSD,\r\n            }, `MixedRoute heuristic, found a V2 pool with no V3 counterpart`);\r\n            buildV2Pools.push(V2subgraphPool);\r\n        }\r\n    });\r\n    log.info(buildV2Pools.length, `Number of V2 candidate pools that fit first heuristic`);\r\n    const subgraphPools = [...buildV2Pools, ...V3sortedPools];\r\n    const tokenAddresses = _(subgraphPools)\r\n        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])\r\n        .compact()\r\n        .uniq()\r\n        .value();\r\n    log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} pools we are considering`);\r\n    const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {\r\n        blockNumber,\r\n    });\r\n    const V3tokenPairsRaw = _.map(V3sortedPools, (subgraphPool) => {\r\n        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);\r\n        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);\r\n        let fee;\r\n        try {\r\n            fee = parseFeeAmount(subgraphPool.feeTier);\r\n        }\r\n        catch (err) {\r\n            log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);\r\n            return undefined;\r\n        }\r\n        if (!tokenA || !tokenB) {\r\n            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);\r\n            return undefined;\r\n        }\r\n        return [tokenA, tokenB, fee];\r\n    });\r\n    const V3tokenPairs = _.compact(V3tokenPairsRaw);\r\n    const V2tokenPairsRaw = _.map(buildV2Pools, (subgraphPool) => {\r\n        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);\r\n        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);\r\n        if (!tokenA || !tokenB) {\r\n            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}`);\r\n            return undefined;\r\n        }\r\n        return [tokenA, tokenB];\r\n    });\r\n    const V2tokenPairs = _.compact(V2tokenPairsRaw);\r\n    const [V2poolAccessor, V3poolAccessor] = await Promise.all([\r\n        v2poolProvider.getPools(V2tokenPairs, {\r\n            blockNumber,\r\n        }),\r\n        v3poolProvider.getPools(V3tokenPairs, {\r\n            blockNumber,\r\n        }),\r\n    ]);\r\n    /// @dev a bit tricky here since the original V2CandidateSelections object included pools that we may have dropped\r\n    /// as part of the heuristic. We need to reconstruct a new object with the v3 pools too.\r\n    const buildPoolsBySelection = (key) => {\r\n        return [\r\n            ...buildV2Pools.filter((pool) => V2candidatePools.selections[key].map((p) => p.id).includes(pool.id)),\r\n            ...V3candidatePools.selections[key],\r\n        ];\r\n    };\r\n    const poolsBySelection = {\r\n        protocol: Protocol.MIXED,\r\n        selections: {\r\n            topByBaseWithTokenIn: buildPoolsBySelection('topByBaseWithTokenIn'),\r\n            topByBaseWithTokenOut: buildPoolsBySelection('topByBaseWithTokenOut'),\r\n            topByDirectSwapPool: buildPoolsBySelection('topByDirectSwapPool'),\r\n            topByEthQuoteTokenPool: buildPoolsBySelection('topByEthQuoteTokenPool'),\r\n            topByTVL: buildPoolsBySelection('topByTVL'),\r\n            topByTVLUsingTokenIn: buildPoolsBySelection('topByTVLUsingTokenIn'),\r\n            topByTVLUsingTokenOut: buildPoolsBySelection('topByTVLUsingTokenOut'),\r\n            topByTVLUsingTokenInSecondHops: buildPoolsBySelection('topByTVLUsingTokenInSecondHops'),\r\n            topByTVLUsingTokenOutSecondHops: buildPoolsBySelection('topByTVLUsingTokenOutSecondHops'),\r\n        },\r\n    };\r\n    return {\r\n        V2poolAccessor,\r\n        V3poolAccessor,\r\n        candidatePools: poolsBySelection,\r\n        subgraphPools,\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { TradeType } from '@uniswap/sdk-core';\r\nimport _ from 'lodash';\r\nimport { TokenValidationResult } from '../../../providers';\r\nimport { log, metric, MetricLoggerUnit, routeToString } from '../../../util';\r\nimport { V2RouteWithValidQuote } from '../entities';\r\nimport { computeAllV2Routes } from '../functions/compute-all-routes';\r\nimport { getV2CandidatePools } from '../functions/get-candidate-pools';\r\nimport { BaseQuoter } from './base-quoter';\r\nexport class V2Quoter extends BaseQuoter {\r\n    constructor(v2SubgraphProvider, v2PoolProvider, v2QuoteProvider, v2GasModelFactory, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {\r\n        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);\r\n        this.v2SubgraphProvider = v2SubgraphProvider;\r\n        this.v2PoolProvider = v2PoolProvider;\r\n        this.v2QuoteProvider = v2QuoteProvider;\r\n        this.v2GasModelFactory = v2GasModelFactory;\r\n    }\r\n    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {\r\n        // Fetch all the pools that we will consider routing via. There are thousands\r\n        // of pools, so we filter them to a set of candidate pools that we expect will\r\n        // result in good prices.\r\n        const { poolAccessor, candidatePools } = await getV2CandidatePools({\r\n            tokenIn,\r\n            tokenOut,\r\n            tokenProvider: this.tokenProvider,\r\n            blockedTokenListProvider: this.blockedTokenListProvider,\r\n            poolProvider: this.v2PoolProvider,\r\n            routeType: tradeType,\r\n            subgraphProvider: this.v2SubgraphProvider,\r\n            routingConfig,\r\n            chainId: this.chainId,\r\n        });\r\n        const poolsRaw = poolAccessor.getAllPools();\r\n        // Drop any pools that contain tokens that can not be transferred according to the token validator.\r\n        const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {\r\n            // If there is no available validation result we assume the token is fine.\r\n            if (!tokenValidation) {\r\n                return false;\r\n            }\r\n            // Only filters out *intermediate* pools that involve tokens that we detect\r\n            // cant be transferred. This prevents us trying to route through tokens that may\r\n            // not be transferrable, but allows users to still swap those tokens if they\r\n            // specify.\r\n            if (tokenValidation == TokenValidationResult.STF &&\r\n                (token.equals(tokenIn) || token.equals(tokenOut))) {\r\n                return false;\r\n            }\r\n            return tokenValidation == TokenValidationResult.STF;\r\n        });\r\n        // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.\r\n        const { maxSwapsPerPath } = routingConfig;\r\n        const routes = computeAllV2Routes(tokenIn, tokenOut, pools, maxSwapsPerPath);\r\n        return {\r\n            routes,\r\n            candidatePools,\r\n        };\r\n    }\r\n    async getQuotes(routes, amounts, percents, quoteToken, tradeType, _routingConfig, candidatePools, _gasModel, gasPriceWei) {\r\n        log.info('Starting to get V2 quotes');\r\n        if (gasPriceWei === undefined) {\r\n            throw new Error('GasPriceWei for V2Routes is required to getQuotes');\r\n        }\r\n        if (routes.length == 0) {\r\n            return { routesWithValidQuotes: [], candidatePools };\r\n        }\r\n        // For all our routes, and all the fractional amounts, fetch quotes on-chain.\r\n        const quoteFn = tradeType == TradeType.EXACT_INPUT\r\n            ? this.v2QuoteProvider.getQuotesManyExactIn.bind(this.v2QuoteProvider)\r\n            : this.v2QuoteProvider.getQuotesManyExactOut.bind(this.v2QuoteProvider);\r\n        const beforeQuotes = Date.now();\r\n        log.info(`Getting quotes for V2 for ${routes.length} routes with ${amounts.length} amounts per route.`);\r\n        const { routesWithQuotes } = await quoteFn(amounts, routes);\r\n        const v2GasModel = await this.v2GasModelFactory.buildGasModel({\r\n            chainId: this.chainId,\r\n            gasPriceWei,\r\n            poolProvider: this.v2PoolProvider,\r\n            token: quoteToken,\r\n        });\r\n        metric.putMetric('V2QuotesLoad', Date.now() - beforeQuotes, MetricLoggerUnit.Milliseconds);\r\n        metric.putMetric('V2QuotesFetched', _(routesWithQuotes)\r\n            .map(([, quotes]) => quotes.length)\r\n            .sum(), MetricLoggerUnit.Count);\r\n        const routesWithValidQuotes = [];\r\n        for (const routeWithQuote of routesWithQuotes) {\r\n            const [route, quotes] = routeWithQuote;\r\n            for (let i = 0; i < quotes.length; i++) {\r\n                const percent = percents[i];\r\n                const amountQuote = quotes[i];\r\n                const { quote, amount } = amountQuote;\r\n                if (!quote) {\r\n                    log.debug({\r\n                        route: routeToString(route),\r\n                        amountQuote,\r\n                    }, 'Dropping a null V2 quote for route.');\r\n                    continue;\r\n                }\r\n                const routeWithValidQuote = new V2RouteWithValidQuote({\r\n                    route,\r\n                    rawQuote: quote,\r\n                    amount,\r\n                    percent,\r\n                    gasModel: v2GasModel,\r\n                    quoteToken,\r\n                    tradeType,\r\n                    v2PoolProvider: this.v2PoolProvider,\r\n                });\r\n                routesWithValidQuotes.push(routeWithValidQuote);\r\n            }\r\n        }\r\n        return {\r\n            routesWithValidQuotes,\r\n            candidatePools\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBbUIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0QsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFPTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQTJCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3RHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQXFDLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHMUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQW1CO0lBTS9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLGlCQUFxQyxFQUNyQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQUM3QyxDQUFDO0lBRVMsS0FBSyxDQUFDLFNB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","import { TradeType } from '@uniswap/sdk-core';\r\nimport { PERMIT2_ADDRESS } from '@uniswap/universal-router-sdk';\r\nimport { BigNumber } from 'ethers/lib/ethers';\r\nimport { SwapType } from '../routers';\r\nimport { Erc20__factory } from '../types/other/factories/Erc20__factory';\r\nimport { Permit2__factory } from '../types/other/factories/Permit2__factory';\r\nimport { log, SWAP_ROUTER_02_ADDRESSES, } from '../util';\r\nexport var SimulationStatus;\r\n(function (SimulationStatus) {\r\n    SimulationStatus[SimulationStatus[\"NotSupported\"] = 0] = \"NotSupported\";\r\n    SimulationStatus[SimulationStatus[\"Failed\"] = 1] = \"Failed\";\r\n    SimulationStatus[SimulationStatus[\"Succeeded\"] = 2] = \"Succeeded\";\r\n    SimulationStatus[SimulationStatus[\"InsufficientBalance\"] = 3] = \"InsufficientBalance\";\r\n    SimulationStatus[SimulationStatus[\"NotApproved\"] = 4] = \"NotApproved\";\r\n})(SimulationStatus || (SimulationStatus = {}));\r\n/**\r\n * Provider for dry running transactions.\r\n *\r\n * @export\r\n * @class Simulator\r\n */\r\nexport class Simulator {\r\n    /**\r\n     * Returns a new SwapRoute with simulated gas estimates\r\n     * @returns SwapRoute\r\n     */\r\n    constructor(provider, chainId) {\r\n        this.chainId = chainId;\r\n        this.provider = provider;\r\n    }\r\n    async simulate(fromAddress, swapOptions, swapRoute, amount, quote, l2GasData, providerConfig) {\r\n        if (await this.userHasSufficientBalance(fromAddress, swapRoute.trade.tradeType, amount, quote)) {\r\n            log.info('User has sufficient balance to simulate. Simulating transaction.');\r\n            try {\r\n                return this.simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig);\r\n            }\r\n            catch (e) {\r\n                log.error({ e }, 'Error simulating transaction');\r\n                return {\r\n                    ...swapRoute,\r\n                    simulationStatus: SimulationStatus.Failed,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            log.error('User does not have sufficient balance to simulate.');\r\n            return {\r\n                ...swapRoute,\r\n                simulationStatus: SimulationStatus.InsufficientBalance,\r\n            };\r\n        }\r\n    }\r\n    async userHasSufficientBalance(fromAddress, tradeType, amount, quote) {\r\n        try {\r\n            const neededBalance = tradeType == TradeType.EXACT_INPUT ? amount : quote;\r\n            let balance;\r\n            if (neededBalance.currency.isNative) {\r\n                balance = await this.provider.getBalance(fromAddress);\r\n            }\r\n            else {\r\n                const tokenContract = Erc20__factory.connect(neededBalance.currency.address, this.provider);\r\n                balance = await tokenContract.balanceOf(fromAddress);\r\n            }\r\n            const hasBalance = balance.gte(BigNumber.from(neededBalance.quotient.toString()));\r\n            log.info({\r\n                fromAddress,\r\n                balance: balance.toString(),\r\n                neededBalance: neededBalance.quotient.toString(),\r\n                neededAddress: neededBalance.wrapped.currency.address,\r\n                hasBalance,\r\n            }, 'Result of balance check for simulation');\r\n            return hasBalance;\r\n        }\r\n        catch (e) {\r\n            log.error(e, 'Error while checking user balance');\r\n            return false;\r\n        }\r\n    }\r\n    async checkTokenApproved(fromAddress, inputAmount, swapOptions, provider) {\r\n        // Check token has approved Permit2 more than expected amount.\r\n        const tokenContract = Erc20__factory.connect(inputAmount.currency.wrapped.address, provider);\r\n        if (swapOptions.type == SwapType.UNIVERSAL_ROUTER) {\r\n            const permit2Allowance = await tokenContract.allowance(fromAddress, PERMIT2_ADDRESS);\r\n            // If a permit has been provided we don't need to check if UR has already been allowed.\r\n            if (swapOptions.inputTokenPermit) {\r\n                log.info({\r\n                    permitAllowance: permit2Allowance.toString(),\r\n                    inputAmount: inputAmount.quotient.toString(),\r\n                }, 'Permit was provided for simulation on UR, checking that Permit2 has been approved.');\r\n                return permit2Allowance.gte(BigNumber.from(inputAmount.quotient.toString()));\r\n            }\r\n            // Check UR has been approved from Permit2.\r\n            const permit2Contract = Permit2__factory.connect(PERMIT2_ADDRESS, provider);\r\n            const { amount: universalRouterAllowance, expiration: tokenExpiration } = await permit2Contract.allowance(fromAddress, inputAmount.currency.wrapped.address, SWAP_ROUTER_02_ADDRESSES(this.chainId));\r\n            const nowTimestampS = Math.round(Date.now() / 1000);\r\n            const inputAmountBN = BigNumber.from(inputAmount.quotient.toString());\r\n            const permit2Approved = permit2Allowance.gte(inputAmountBN);\r\n            const universalRouterApproved = universalRouterAllowance.gte(inputAmountBN);\r\n            const expirationValid = tokenExpiration > nowTimestampS;\r\n            log.info({\r\n                permitAllowance: permit2Allowance.toString(),\r\n                tokenAllowance: universalRouterAllowance.toString(),\r\n                tokenExpirationS: tokenExpiration,\r\n                nowTimestampS,\r\n                inputAmount: inputAmount.quotient.toString(),\r\n                permit2Approved,\r\n                universalRouterApproved,\r\n                expirationValid,\r\n            }, `Simulating on UR, Permit2 approved: ${permit2Approved}, UR approved: ${universalRouterApproved}, Expiraton valid: ${expirationValid}.`);\r\n            return permit2Approved && universalRouterApproved && expirationValid;\r\n        }\r\n        else if (swapOptions.type == SwapType.SWAP_ROUTER_02) {\r\n            if (swapOptions.inputTokenPermit) {\r\n                log.info({\r\n                    inputAmount: inputAmount.quotient.toString(),\r\n                }, 'Simulating on SwapRouter02 info - Permit was provided for simulation. Not checking allowances.');\r\n                return true;\r\n            }\r\n            const allowance = await tokenContract.allowance(fromAddress, SWAP_ROUTER_02_ADDRESSES(this.chainId));\r\n            const hasAllowance = allowance.gte(BigNumber.from(inputAmount.quotient.toString()));\r\n            log.info({\r\n                hasAllowance,\r\n                allowance: allowance.toString(),\r\n                inputAmount: inputAmount.quotient.toString(),\r\n            }, `Simulating on SwapRouter02 - Has allowance: ${hasAllowance}`);\r\n            // Return true if token allowance is greater than input amount\r\n            return hasAllowance;\r\n        }\r\n        throw new Error(`Unsupported swap type ${swapOptions}`);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUU5QyxPQUFPLEVBQTBCLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDekUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDN0UsT0FBTyxFQUdMLEdBQUcsRUFDSCx3QkFBd0IsR0FDekIsTUFBTSxTQUFTLENBQUM7QUFVakIsTUFBTSxDQUFOLElBQVksZ0JBTVg7QUFORCxXQUFZLGdCQUFnQjtJQUMxQix1RUFBZ0IsQ0FBQTtJQUNoQiwyREFBVSxDQUFBO0lBQ1YsaUVBQWEsQ0FBQTtJQUNiLHFGQUF1QixDQUFBO0lBQ3ZCLHFFQUFlLENBQUE7QUFDakIsQ0FBQyxFQU5XLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFNM0I7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sT0FBZ0IsU0FBUztJQUc3Qjs7O09BR0c7SUFDSCxZQUFZLFFBQXlCLEVBQVksT0FBZ0I7UUFBaEIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQVEsQ0FDbkIsV0FBbUIsRUFDbkIsV0FBd0IsRUFDeEIsU0FBb0IsRUFDcEIsTUFBc0IsRUFDdEIsS0FBcUIsRUFDckIsU0FBNkMsRUFDN0MsY0FBK0I7UUFFL0IsSUFDRSxNQUFNLElBQUks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","import { TradeType } from '@uniswap/sdk-core';\r\nimport _ from 'lodash';\r\nimport { TokenValidationResult } from '../../../providers';\r\nimport { log, metric, MetricLoggerUnit, routeToString } from '../../../util';\r\nimport { V3RouteWithValidQuote } from '../entities';\r\nimport { computeAllV3Routes } from '../functions/compute-all-routes';\r\nimport { getV3CandidatePools } from '../functions/get-candidate-pools';\r\nimport { BaseQuoter } from './base-quoter';\r\nexport class V3Quoter extends BaseQuoter {\r\n    constructor(v3SubgraphProvider, v3PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {\r\n        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);\r\n        this.v3SubgraphProvider = v3SubgraphProvider;\r\n        this.v3PoolProvider = v3PoolProvider;\r\n        this.onChainQuoteProvider = onChainQuoteProvider;\r\n    }\r\n    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {\r\n        // Fetch all the pools that we will consider routing via. There are thousands\r\n        // of pools, so we filter them to a set of candidate pools that we expect will\r\n        // result in good prices.\r\n        const { poolAccessor, candidatePools } = await getV3CandidatePools({\r\n            tokenIn,\r\n            tokenOut,\r\n            tokenProvider: this.tokenProvider,\r\n            blockedTokenListProvider: this.blockedTokenListProvider,\r\n            poolProvider: this.v3PoolProvider,\r\n            routeType: tradeType,\r\n            subgraphProvider: this.v3SubgraphProvider,\r\n            routingConfig,\r\n            chainId: this.chainId,\r\n        });\r\n        const poolsRaw = poolAccessor.getAllPools();\r\n        // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.\r\n        const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {\r\n            // If there is no available validation result we assume the token is fine.\r\n            if (!tokenValidation) {\r\n                return false;\r\n            }\r\n            // Only filters out *intermediate* pools that involve tokens that we detect\r\n            // cant be transferred. This prevents us trying to route through tokens that may\r\n            // not be transferrable, but allows users to still swap those tokens if they\r\n            // specify.\r\n            //\r\n            if (tokenValidation == TokenValidationResult.STF &&\r\n                (token.equals(tokenIn) || token.equals(tokenOut))) {\r\n                return false;\r\n            }\r\n            return (tokenValidation == TokenValidationResult.FOT ||\r\n                tokenValidation == TokenValidationResult.STF);\r\n        });\r\n        // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.\r\n        const { maxSwapsPerPath } = routingConfig;\r\n        const routes = computeAllV3Routes(tokenIn, tokenOut, pools, maxSwapsPerPath);\r\n        return {\r\n            routes,\r\n            candidatePools,\r\n        };\r\n    }\r\n    async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {\r\n        log.info('Starting to get V3 quotes');\r\n        if (gasModel === undefined) {\r\n            throw new Error('GasModel for V3RouteWithValidQuote is required to getQuotes');\r\n        }\r\n        if (routes.length == 0) {\r\n            return { routesWithValidQuotes: [], candidatePools };\r\n        }\r\n        // For all our routes, and all the fractional amounts, fetch quotes on-chain.\r\n        const quoteFn = tradeType == TradeType.EXACT_INPUT\r\n            ? this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider)\r\n            : this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider);\r\n        const beforeQuotes = Date.now();\r\n        log.info(`Getting quotes for V3 for ${routes.length} routes with ${amounts.length} amounts per route.`);\r\n        const { routesWithQuotes } = await quoteFn(amounts, routes, {\r\n            blockNumber: routingConfig.blockNumber,\r\n        });\r\n        metric.putMetric('V3QuotesLoad', Date.now() - beforeQuotes, MetricLoggerUnit.Milliseconds);\r\n        metric.putMetric('V3QuotesFetched', _(routesWithQuotes)\r\n            .map(([, quotes]) => quotes.length)\r\n            .sum(), MetricLoggerUnit.Count);\r\n        const routesWithValidQuotes = [];\r\n        for (const routeWithQuote of routesWithQuotes) {\r\n            const [route, quotes] = routeWithQuote;\r\n            for (let i = 0; i < quotes.length; i++) {\r\n                const percent = percents[i];\r\n                const amountQuote = quotes[i];\r\n                const { quote, amount, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate, } = amountQuote;\r\n                if (!quote ||\r\n                    !sqrtPriceX96AfterList ||\r\n                    !initializedTicksCrossedList ||\r\n                    !gasEstimate) {\r\n                    log.debug({\r\n                        route: routeToString(route),\r\n                        amountQuote,\r\n                    }, 'Dropping a null V3 quote for route.');\r\n                    continue;\r\n                }\r\n                const routeWithValidQuote = new V3RouteWithValidQuote({\r\n                    route,\r\n                    rawQuote: quote,\r\n                    amount,\r\n                    percent,\r\n                    sqrtPriceX96AfterList,\r\n                    initializedTicksCrossedList,\r\n                    quoterGasEstimate: gasEstimate,\r\n                    gasModel,\r\n                    quoteToken,\r\n                    tradeType,\r\n                    v3PoolProvider: this.v3PoolProvider,\r\n                });\r\n                routesWithValidQuotes.push(routeWithValidQuote);\r\n            }\r\n        }\r\n        return {\r\n            routesWithValidQuotes,\r\n            candidatePools\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBbUIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0QsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFPTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQTJCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3RHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQXFDLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHMUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQW1CO0lBSy9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixTQUFvQixFQUNwQixhQUFnQztRQUVoQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLE1BQU0sbUJBQW1CLENBQUM7WUFDakUsT0FBTztZQUNQLFFBQVE7WUFDUixhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDakMsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHdCQUF3QjtZQUN2RCxZQUFZLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDakMsU0FBUyxFQUFFLFNBQVM7WUFDcEIsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtZQUN6QyxhQUFhO1lBQ2IsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUMsQ0FBQztRQUNILE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1QyxrSEFBa0g7UUFDbEgsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsMEJBQTBCLENBQ2pELFFBQVEsRUFDUixDQUNFLEtBQWUsRUFDZixlQUFrRCxFQUN6QyxFQUFFO1lBQ1gsMEVBQTBFO1lBQzFFLElBQUksQ0FBQyxlQUFlLEVBQUU7Z0JBQ3BCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCwyRUFBMkU7WUFDM0UsZ0ZBQWdGO1lBQ2hGLDRFQUE0RTtZQUM1RSxXQUFXO1lBQ1gsRUFBRTtZQUNGLElBQ0UsZUFBZSxJQUFJLHFCQUFxQixDQUFDLEdBQUc7Z0JBQzVDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQ2pEO2dCQUNBLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxPQUFPLENBQ0wsZUFBZSxJQUFJLHFCQUFxQixDQUFDLEdBQUc7Z0JBQzVDLGVBQWUsSUFBSSxxQkFBcUIsQ0FBQyxHQUFHLENBQzdDLENBQUM7UUFDSixDQUFDLENBQ0YsQ0FBQztRQUVGLGtHQUFrRztRQUNsRyxNQUFNLEVBQUUsZUFBZSxFQUFFLEdBQUcsYUFBYSxDQUFDO1FBQzFDLE1BQU0sTUFBTSxHQUFHLGtCQUFrQixDQUMvQixPQUFPLEVBQ1AsUUFBUSxFQUNSLEtBQUssRUFDTCxlQUFlLENBQ2hCLENBQUM7UUFFRixPQUFPO1lBQ0wsTUFBTTtZQUNOLGNBQWM7U0FDZixDQUFDO0lBQ0osQ0FBQztJQUVNLEtBQUssQ0FBQyxTQUFTLENBQ3BCLE1BQWlCLEVBQ2pCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLGNBQWtELEVBQ2xELFFBQTJDO1FBRTNDLEdBQUcsQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUV0QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FBQyw2REFBNkQsQ0FBQyxDQUFDO1NBQ2hGO1FBRUQsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN0QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxDQUFDO1NBQ3REO1FBRUQsNkVBQTZFO1FBQzdFLE1BQU0sT0FBTyxHQUNYLFNBQVMsSUFBSSxTQUFTLENBQUMsV0FBVztZQUNoQyxDQUFDLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FDbkQsSUFBSSxDQUFDLG9CQUFvQixDQUMxQjtZQUNELENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUNwRCxJQUFJLENBQUMsb0JBQW9CLENBQzFCLENBQUM7UUFFTixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDaEMsR0FBRyxDQUFDLElBQUksQ0FDTiw2QkFBNkIsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLE9BQU8sQ0FBQyxNQUFNLHFCQUFxQixDQUM5RixDQUFDO1FBRUYsTUFBTSxFQUFFLGdCQUFnQixFQUFFLEdBQUcsTUFBTSxPQUFPLENBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtZQUNuRSxXQUFXLEVBQUUsYUFBYSxDQUFDLFdBQVc7U0FDdkMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLFNBQVMsQ0FDZCxjQUFjLEVBQ2QsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLFlBQVksRUFDekIsZ0JBQWdCLENBQUMsWUFBWSxDQUM5QixDQUFDO1FBRUYsTUFBTSxDQUFDLFNBQVMsQ0FDZCxpQkFBaUIsRUFDakIsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO2FBQ2hCLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQzthQUNsQyxHQUFHLEVBQUUsRUFDUixnQkFBZ0IsQ0FBQyxLQUFLLENBQ3ZCLENBQUM7UUFFRixNQUFNLHFCQUFxQixHQUFHLEVBQUUsQ0FBQztRQUVqQyxLQUFLLE1BQU0sY0FBYyxJQUFJLGdCQUFnQixFQUFFO1lBQzdDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsY0FBYyxDQUFDO1lBRXZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN0QyxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFFLENBQUM7Z0JBQzdCLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUUsQ0FBQztnQkFDL0IsTUFBTSxFQUNKLEtBQUssRUFDTCxNQUFNLEVBQ04scUJBQXFCLEVBQ3JCLDJCQUEyQixFQUMzQixXQUFXLEdBQ1osR0FBRyxXQUFXLENBQUM7Z0JBRWhCLElBQ0UsQ0FBQyxLQUFLO29CQUNOLENBQUMscUJBQXFCO29CQUN0QixDQUFDLDJCQUEyQjtvQkFDNUIsQ0FBQyxXQUFXLEVBQ1o7b0JBQ0EsR0FBRyxDQUFDLEtBQUssQ0FDUDt3QkFDRSxLQUFLLEVBQUUsYUFBYSxDQUFDLEtBQUssQ0FBQzt3QkFDM0IsV0FBVztxQkFDWixFQUNELHFDQUFxQyxDQUN0QyxDQUFDO29CQUNGLFNBQVM7aUJBQ1Y7Z0JBRUQsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLHFCQUFxQixDQUFDO29CQUNwRCxLQUFLO29CQUNMLFFBQVEsRUFBRSxLQUFLO29CQUNmLE1BQU07b0JBQ04sT0FBTztvQkFDUCxxQkFBcUI7b0JBQ3JCLDJCQUEyQjtvQkFDM0IsaUJBQWlCLEVBQUUsV0FBVztvQkFDOUIsUUFBUTtvQkFDUixVQUFVO29CQUNWLFNBQVM7b0JBQ1QsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2lCQUNwQyxDQUFDLENBQUM7Z0JBRUgscUJBQXFCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7YUFDakQ7U0FDRjtRQUVELE9BQU87WUFDTCxxQkFBcUI7WUFDckIsY0FBYztTQUNmLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==","import { TradeType } from '@uniswap/sdk-core';\r\nimport _ from 'lodash';\r\nimport { TokenValidationResult } from '../../../providers';\r\nimport { log, metric, MetricLoggerUnit, routeToString } from '../../../util';\r\nimport { MixedRouteWithValidQuote } from '../entities';\r\nimport { computeAllMixedRoutes } from '../functions/compute-all-routes';\r\nimport { getMixedRouteCandidatePools } from '../functions/get-candidate-pools';\r\nimport { BaseQuoter } from './base-quoter';\r\nexport class MixedQuoter extends BaseQuoter {\r\n    constructor(v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {\r\n        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);\r\n        this.v3SubgraphProvider = v3SubgraphProvider;\r\n        this.v3PoolProvider = v3PoolProvider;\r\n        this.v2SubgraphProvider = v2SubgraphProvider;\r\n        this.v2PoolProvider = v2PoolProvider;\r\n        this.onChainQuoteProvider = onChainQuoteProvider;\r\n    }\r\n    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {\r\n        if (tradeType != TradeType.EXACT_INPUT) {\r\n            throw new Error('Mixed route quotes are not supported for EXACT_OUTPUT');\r\n        }\r\n        const { V2poolAccessor, V3poolAccessor, candidatePools: mixedRouteCandidatePools, } = await getMixedRouteCandidatePools({\r\n            tokenIn,\r\n            tokenOut,\r\n            tokenProvider: this.tokenProvider,\r\n            blockedTokenListProvider: this.blockedTokenListProvider,\r\n            v3poolProvider: this.v3PoolProvider,\r\n            v2poolProvider: this.v2PoolProvider,\r\n            routeType: tradeType,\r\n            v3subgraphProvider: this.v3SubgraphProvider,\r\n            v2subgraphProvider: this.v2SubgraphProvider,\r\n            routingConfig,\r\n            chainId: this.chainId,\r\n        });\r\n        const V3poolsRaw = V3poolAccessor.getAllPools();\r\n        const V2poolsRaw = V2poolAccessor.getAllPools();\r\n        const poolsRaw = [...V3poolsRaw, ...V2poolsRaw];\r\n        const candidatePools = mixedRouteCandidatePools;\r\n        // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.\r\n        const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {\r\n            // If there is no available validation result we assume the token is fine.\r\n            if (!tokenValidation) {\r\n                return false;\r\n            }\r\n            // Only filters out *intermediate* pools that involve tokens that we detect\r\n            // cant be transferred. This prevents us trying to route through tokens that may\r\n            // not be transferrable, but allows users to still swap those tokens if they\r\n            // specify.\r\n            //\r\n            if (tokenValidation == TokenValidationResult.STF &&\r\n                (token.equals(tokenIn) || token.equals(tokenOut))) {\r\n                return false;\r\n            }\r\n            return (tokenValidation == TokenValidationResult.FOT ||\r\n                tokenValidation == TokenValidationResult.STF);\r\n        });\r\n        const { maxSwapsPerPath } = routingConfig;\r\n        const routes = computeAllMixedRoutes(tokenIn, tokenOut, pools, maxSwapsPerPath);\r\n        return {\r\n            routes,\r\n            candidatePools\r\n        };\r\n    }\r\n    async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {\r\n        log.info('Starting to get mixed quotes');\r\n        if (gasModel === undefined) {\r\n            throw new Error('GasModel for MixedRouteWithValidQuote is required to getQuotes');\r\n        }\r\n        if (routes.length == 0) {\r\n            return { routesWithValidQuotes: [], candidatePools };\r\n        }\r\n        // For all our routes, and all the fractional amounts, fetch quotes on-chain.\r\n        const quoteFn = this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider);\r\n        const beforeQuotes = Date.now();\r\n        log.info(`Getting quotes for mixed for ${routes.length} routes with ${amounts.length} amounts per route.`);\r\n        const { routesWithQuotes } = await quoteFn(amounts, routes, {\r\n            blockNumber: routingConfig.blockNumber,\r\n        });\r\n        metric.putMetric('MixedQuotesLoad', Date.now() - beforeQuotes, MetricLoggerUnit.Milliseconds);\r\n        metric.putMetric('MixedQuotesFetched', _(routesWithQuotes)\r\n            .map(([, quotes]) => quotes.length)\r\n            .sum(), MetricLoggerUnit.Count);\r\n        const routesWithValidQuotes = [];\r\n        for (const routeWithQuote of routesWithQuotes) {\r\n            const [route, quotes] = routeWithQuote;\r\n            for (let i = 0; i < quotes.length; i++) {\r\n                const percent = percents[i];\r\n                const amountQuote = quotes[i];\r\n                const { quote, amount, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate, } = amountQuote;\r\n                if (!quote ||\r\n                    !sqrtPriceX96AfterList ||\r\n                    !initializedTicksCrossedList ||\r\n                    !gasEstimate) {\r\n                    log.debug({\r\n                        route: routeToString(route),\r\n                        amountQuote,\r\n                    }, 'Dropping a null mixed quote for route.');\r\n                    continue;\r\n                }\r\n                const routeWithValidQuote = new MixedRouteWithValidQuote({\r\n                    route,\r\n                    rawQuote: quote,\r\n                    amount,\r\n                    percent,\r\n                    sqrtPriceX96AfterList,\r\n                    initializedTicksCrossedList,\r\n                    quoterGasEstimate: gasEstimate,\r\n                    mixedRouteGasModel: gasModel,\r\n                    quoteToken,\r\n                    tradeType,\r\n                    v3PoolProvider: this.v3PoolProvider,\r\n                    v2PoolProvider: this.v2PoolProvider,\r\n                });\r\n                routesWithValidQuotes.push(routeWithValidQuote);\r\n            }\r\n        }\r\n        return {\r\n            routesWithValidQuotes,\r\n            candidatePools\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBbUIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0QsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFTTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQTJCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3RHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN4RSxPQUFPLEVBQXFDLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHbEgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxNQUFNLE9BQU8sV0FBWSxTQUFRLFVBQXNCO0lBT3JELFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFB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","//@ts-nocheck\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\nimport DEFAULT_TOKEN_LIST from '@uniswap/default-token-list';\r\nimport { Protocol, SwapRouter } from '@uniswap/router-sdk';\r\nimport { Fraction, TradeType } from '@uniswap/sdk-core';\r\nimport { Pool, Position, SqrtPriceMath, TickMath } from '@uniswap/v3-sdk';\r\nimport retry from 'async-retry';\r\nimport JSBI from 'jsbi';\r\nimport _ from 'lodash';\r\nimport NodeCache from 'node-cache';\r\nimport { CachedRoutes, CacheMode, CachingGasStationProvider, CachingTokenProviderWithFallback, CachingV2PoolProvider, CachingV2SubgraphProvider, CachingV3PoolProvider, CachingV3SubgraphProvider, EIP1559GasPriceProvider, ETHGasStationInfoProvider, LegacyGasPriceProvider, NodeJSCache, OnChainGasPriceProvider, OnChainQuoteProvider, StaticV2SubgraphProvider, StaticV3SubgraphProvider, SwapRouterProvider, UniswapMulticallProvider, URISubgraphProvider, V2QuoteProvider, V2SubgraphProviderWithFallBacks, V3SubgraphProviderWithFallBacks, } from '../../providers';\r\nimport { CachingTokenListProvider } from '../../providers/caching-token-list-provider';\r\nimport { TokenProvider } from '../../providers/token-provider';\r\nimport { TokenValidatorProvider, } from '../../providers/token-validator-provider';\r\nimport { V2PoolProvider } from '../../providers/v2/pool-provider';\r\nimport { ArbitrumGasDataProvider, OptimismGasDataProvider, } from '../../providers/v3/gas-data-provider';\r\nimport { V3PoolProvider } from '../../providers/v3/pool-provider';\r\nimport { Erc20__factory } from '../../types/other/factories/Erc20__factory';\r\nimport { SWAP_ROUTER_02_ADDRESSES } from '../../util';\r\nimport { CurrencyAmount } from '../../util/amounts';\r\nimport { ID_TO_CHAIN_ID, ID_TO_NETWORK_NAME, V2_SUPPORTED } from '../../util/chains';\r\nimport { log } from '../../util/log';\r\nimport { buildSwapMethodParameters, buildTrade } from '../../util/methodParameters';\r\nimport { metric, MetricLoggerUnit } from '../../util/metric';\r\nimport { UNSUPPORTED_TOKENS } from '../../util/unsupported-tokens';\r\nimport { SwapToRatioStatus, } from '../router';\r\nimport { DEFAULT_ROUTING_CONFIG_BY_CHAIN, ETH_GAS_STATION_API_URL } from './config';\r\nimport { getBestSwapRoute } from './functions/best-swap-route';\r\nimport { calculateRatioAmountIn } from './functions/calculate-ratio-amount-in';\r\nimport { MixedRouteHeuristicGasModelFactory } from './gas-models/mixedRoute/mixed-route-heuristic-gas-model';\r\nimport { V2HeuristicGasModelFactory } from './gas-models/v2/v2-heuristic-gas-model';\r\nimport { V3HeuristicGasModelFactory } from './gas-models/v3/v3-heuristic-gas-model';\r\nimport { MixedQuoter, V2Quoter, V3Quoter } from './quoters';\r\nexport class MapWithLowerCaseKey extends Map {\r\n    set(key, value) {\r\n        return super.set(key.toLowerCase(), value);\r\n    }\r\n}\r\nexport class AlphaRouter {\r\n    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, }) {\r\n        this.chainId = chainId;\r\n        this.provider = provider;\r\n        this.multicall2Provider =\r\n            multicall2Provider !== null && multicall2Provider !== void 0 ? multicall2Provider : new UniswapMulticallProvider(chainId, provider, 375000);\r\n        this.v3PoolProvider =\r\n            v3PoolProvider !== null && v3PoolProvider !== void 0 ? v3PoolProvider : new CachingV3PoolProvider(this.chainId, new V3PoolProvider(ID_TO_CHAIN_ID(chainId), this.multicall2Provider), new NodeJSCache(new NodeCache({ stdTTL: 360, useClones: false })));\r\n        this.simulator = simulator;\r\n        this.routeCachingProvider = routeCachingProvider;\r\n        if (onChainQuoteProvider) {\r\n            this.onChainQuoteProvider = onChainQuoteProvider;\r\n        }\r\n        else {\r\n            switch (chainId) {\r\n                default:\r\n                    this.onChainQuoteProvider = new OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {\r\n                        retries: 2,\r\n                        minTimeout: 100,\r\n                        maxTimeout: 1000,\r\n                    }, {\r\n                        multicallChunk: 210,\r\n                        gasLimitPerCall: 705000,\r\n                        quoteMinSuccessRate: 0.15,\r\n                    }, {\r\n                        gasLimitOverride: 2000000,\r\n                        multicallChunk: 70,\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n        this.v2PoolProvider =\r\n            v2PoolProvider !== null && v2PoolProvider !== void 0 ? v2PoolProvider : new CachingV2PoolProvider(chainId, new V2PoolProvider(chainId, this.multicall2Provider), new NodeJSCache(new NodeCache({ stdTTL: 60, useClones: false })));\r\n        this.v2QuoteProvider = v2QuoteProvider !== null && v2QuoteProvider !== void 0 ? v2QuoteProvider : new V2QuoteProvider();\r\n        this.blockedTokenListProvider =\r\n            blockedTokenListProvider !== null && blockedTokenListProvider !== void 0 ? blockedTokenListProvider : new CachingTokenListProvider(chainId, UNSUPPORTED_TOKENS, new NodeJSCache(new NodeCache({ stdTTL: 3600, useClones: false })));\r\n        this.tokenProvider =\r\n            tokenProvider !== null && tokenProvider !== void 0 ? tokenProvider : new CachingTokenProviderWithFallback(chainId, new NodeJSCache(new NodeCache({ stdTTL: 3600, useClones: false })), new CachingTokenListProvider(chainId, DEFAULT_TOKEN_LIST, new NodeJSCache(new NodeCache({ stdTTL: 3600, useClones: false }))), new TokenProvider(chainId, this.multicall2Provider));\r\n        const chainName = ID_TO_NETWORK_NAME(chainId);\r\n        // ipfs urls in the following format: `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/${protocol}/${chainName}.json`;\r\n        if (v2SubgraphProvider) {\r\n            this.v2SubgraphProvider = v2SubgraphProvider;\r\n        }\r\n        else {\r\n            this.v2SubgraphProvider = new V2SubgraphProviderWithFallBacks([\r\n                new CachingV2SubgraphProvider(chainId, new URISubgraphProvider(chainId, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/${chainName}.json`, undefined, 0), new NodeJSCache(new NodeCache({ stdTTL: 300, useClones: false }))),\r\n                new StaticV2SubgraphProvider(chainId),\r\n            ]);\r\n        }\r\n        if (v3SubgraphProvider) {\r\n            this.v3SubgraphProvider = v3SubgraphProvider;\r\n        }\r\n        else {\r\n            this.v3SubgraphProvider = new V3SubgraphProviderWithFallBacks([\r\n                new CachingV3SubgraphProvider(chainId, new URISubgraphProvider(chainId, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v3/${chainName}.json`, undefined, 0), new NodeJSCache(new NodeCache({ stdTTL: 300, useClones: false }))),\r\n                new StaticV3SubgraphProvider(chainId, this.v3PoolProvider),\r\n            ]);\r\n        }\r\n        let gasPriceProviderInstance;\r\n        if (JsonRpcProvider.isProvider(this.provider)) {\r\n            gasPriceProviderInstance = new OnChainGasPriceProvider(chainId, new EIP1559GasPriceProvider(this.provider), new LegacyGasPriceProvider(this.provider));\r\n        }\r\n        else {\r\n            gasPriceProviderInstance = new ETHGasStationInfoProvider(ETH_GAS_STATION_API_URL);\r\n        }\r\n        this.gasPriceProvider =\r\n            gasPriceProvider !== null && gasPriceProvider !== void 0 ? gasPriceProvider : new CachingGasStationProvider(chainId, gasPriceProviderInstance, new NodeJSCache(new NodeCache({ stdTTL: 15, useClones: false })));\r\n        this.v3GasModelFactory =\r\n            v3GasModelFactory !== null && v3GasModelFactory !== void 0 ? v3GasModelFactory : new V3HeuristicGasModelFactory();\r\n        this.v2GasModelFactory =\r\n            v2GasModelFactory !== null && v2GasModelFactory !== void 0 ? v2GasModelFactory : new V2HeuristicGasModelFactory();\r\n        this.mixedRouteGasModelFactory =\r\n            mixedRouteGasModelFactory !== null && mixedRouteGasModelFactory !== void 0 ? mixedRouteGasModelFactory : new MixedRouteHeuristicGasModelFactory();\r\n        this.swapRouterProvider =\r\n            swapRouterProvider !== null && swapRouterProvider !== void 0 ? swapRouterProvider : new SwapRouterProvider(this.multicall2Provider, this.chainId);\r\n        if (chainId === undefined) {\r\n            this.l2GasDataProvider =\r\n                optimismGasDataProvider !== null && optimismGasDataProvider !== void 0 ? optimismGasDataProvider : new OptimismGasDataProvider(chainId, this.multicall2Provider);\r\n        }\r\n        if (chainId === undefined) {\r\n            this.l2GasDataProvider =\r\n                arbitrumGasDataProvider !== null && arbitrumGasDataProvider !== void 0 ? arbitrumGasDataProvider : new ArbitrumGasDataProvider(chainId, this.provider);\r\n        }\r\n        if (tokenValidatorProvider) {\r\n            this.tokenValidatorProvider = tokenValidatorProvider;\r\n        }\r\n        else if (this.chainId === undefined) {\r\n            this.tokenValidatorProvider = new TokenValidatorProvider(this.chainId, this.multicall2Provider, new NodeJSCache(new NodeCache({ stdTTL: 30000, useClones: false })));\r\n        }\r\n        // Initialize the Quoters.\r\n        // Quoters are an abstraction encapsulating the business logic of fetching routes and quotes.\r\n        this.v2Quoter = new V2Quoter(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);\r\n        this.v3Quoter = new V3Quoter(this.v3SubgraphProvider, this.v3PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);\r\n        this.mixedQuoter = new MixedQuoter(this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);\r\n    }\r\n    async routeToRatio(token0Balance, token1Balance, position, swapAndAddConfig, swapAndAddOptions, routingConfig = DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId)) {\r\n        if (token1Balance.currency.wrapped.sortsBefore(token0Balance.currency.wrapped)) {\r\n            [token0Balance, token1Balance] = [token1Balance, token0Balance];\r\n        }\r\n        let preSwapOptimalRatio = this.calculateOptimalRatio(position, position.pool.sqrtRatioX96, true);\r\n        // set up parameters according to which token will be swapped\r\n        let zeroForOne;\r\n        if (position.pool.tickCurrent > position.tickUpper) {\r\n            zeroForOne = true;\r\n        }\r\n        else if (position.pool.tickCurrent < position.tickLower) {\r\n            zeroForOne = false;\r\n        }\r\n        else {\r\n            zeroForOne = new Fraction(token0Balance.quotient, token1Balance.quotient).greaterThan(preSwapOptimalRatio);\r\n            if (!zeroForOne)\r\n                preSwapOptimalRatio = preSwapOptimalRatio.invert();\r\n        }\r\n        const [inputBalance, outputBalance] = zeroForOne\r\n            ? [token0Balance, token1Balance]\r\n            : [token1Balance, token0Balance];\r\n        let optimalRatio = preSwapOptimalRatio;\r\n        let postSwapTargetPool = position.pool;\r\n        let exchangeRate = zeroForOne\r\n            ? position.pool.token0Price\r\n            : position.pool.token1Price;\r\n        let swap = null;\r\n        let ratioAchieved = false;\r\n        let n = 0;\r\n        // iterate until we find a swap with a sufficient ratio or return null\r\n        while (!ratioAchieved) {\r\n            n++;\r\n            if (n > swapAndAddConfig.maxIterations) {\r\n                log.info('max iterations exceeded');\r\n                return {\r\n                    status: SwapToRatioStatus.NO_ROUTE_FOUND,\r\n                    error: 'max iterations exceeded',\r\n                };\r\n            }\r\n            const amountToSwap = calculateRatioAmountIn(optimalRatio, exchangeRate, inputBalance, outputBalance);\r\n            if (amountToSwap.equalTo(0)) {\r\n                log.info(`no swap needed: amountToSwap = 0`);\r\n                return {\r\n                    status: SwapToRatioStatus.NO_SWAP_NEEDED,\r\n                };\r\n            }\r\n            swap = await this.route(amountToSwap, outputBalance.currency, TradeType.EXACT_INPUT, undefined, {\r\n                ...DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId),\r\n                ...routingConfig,\r\n                /// @dev We do not want to query for mixedRoutes for routeToRatio as they are not supported\r\n                /// [Protocol.V3, Protocol.V2] will make sure we only query for V3 and V2\r\n                protocols: [Protocol.V3, Protocol.V2],\r\n            });\r\n            if (!swap) {\r\n                log.info('no route found from this.route()');\r\n                return {\r\n                    status: SwapToRatioStatus.NO_ROUTE_FOUND,\r\n                    error: 'no route found',\r\n                };\r\n            }\r\n            const inputBalanceUpdated = inputBalance.subtract(swap.trade.inputAmount);\r\n            const outputBalanceUpdated = outputBalance.add(swap.trade.outputAmount);\r\n            const newRatio = inputBalanceUpdated.divide(outputBalanceUpdated);\r\n            let targetPoolPriceUpdate;\r\n            swap.route.forEach((route) => {\r\n                if (route.protocol === Protocol.V3) {\r\n                    const v3Route = route;\r\n                    v3Route.route.pools.forEach((pool, i) => {\r\n                        if (pool.token0.equals(position.pool.token0) &&\r\n                            pool.token1.equals(position.pool.token1) &&\r\n                            pool.fee === position.pool.fee) {\r\n                            targetPoolPriceUpdate = JSBI.BigInt(v3Route.sqrtPriceX96AfterList[i].toString());\r\n                            optimalRatio = this.calculateOptimalRatio(position, JSBI.BigInt(targetPoolPriceUpdate.toString()), zeroForOne);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            if (!targetPoolPriceUpdate) {\r\n                optimalRatio = preSwapOptimalRatio;\r\n            }\r\n            ratioAchieved =\r\n                newRatio.equalTo(optimalRatio) ||\r\n                    this.absoluteValue(newRatio.asFraction.divide(optimalRatio).subtract(1)).lessThan(swapAndAddConfig.ratioErrorTolerance);\r\n            if (ratioAchieved && targetPoolPriceUpdate) {\r\n                postSwapTargetPool = new Pool(position.pool.token0, position.pool.token1, position.pool.fee, targetPoolPriceUpdate, position.pool.liquidity, TickMath.getTickAtSqrtRatio(targetPoolPriceUpdate), position.pool.tickDataProvider);\r\n            }\r\n            exchangeRate = swap.trade.outputAmount.divide(swap.trade.inputAmount);\r\n            log.info({\r\n                exchangeRate: exchangeRate.asFraction.toFixed(18),\r\n                optimalRatio: optimalRatio.asFraction.toFixed(18),\r\n                newRatio: newRatio.asFraction.toFixed(18),\r\n                inputBalanceUpdated: inputBalanceUpdated.asFraction.toFixed(18),\r\n                outputBalanceUpdated: outputBalanceUpdated.asFraction.toFixed(18),\r\n                ratioErrorTolerance: swapAndAddConfig.ratioErrorTolerance.toFixed(18),\r\n                iterationN: n.toString(),\r\n            }, 'QuoteToRatio Iteration Parameters');\r\n            if (exchangeRate.equalTo(0)) {\r\n                log.info('exchangeRate to 0');\r\n                return {\r\n                    status: SwapToRatioStatus.NO_ROUTE_FOUND,\r\n                    error: 'insufficient liquidity to swap to optimal ratio',\r\n                };\r\n            }\r\n        }\r\n        if (!swap) {\r\n            return {\r\n                status: SwapToRatioStatus.NO_ROUTE_FOUND,\r\n                error: 'no route found',\r\n            };\r\n        }\r\n        let methodParameters;\r\n        if (swapAndAddOptions) {\r\n            methodParameters = await this.buildSwapAndAddMethodParameters(swap.trade, swapAndAddOptions, {\r\n                initialBalanceTokenIn: inputBalance,\r\n                initialBalanceTokenOut: outputBalance,\r\n                preLiquidityPosition: position,\r\n            });\r\n        }\r\n        return {\r\n            status: SwapToRatioStatus.SUCCESS,\r\n            result: { ...swap, methodParameters, optimalRatio, postSwapTargetPool },\r\n        };\r\n    }\r\n    /**\r\n     * @inheritdoc IRouter\r\n     */\r\n    async route(amount, quoteCurrency, tradeType, swapConfig, partialRoutingConfig = {}) {\r\n        var _a, _c, _d;\r\n        const { currencyIn, currencyOut } = this.determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency);\r\n        const tokenIn = currencyIn.wrapped;\r\n        const tokenOut = currencyOut.wrapped;\r\n        metric.setProperty('chainId', this.chainId);\r\n        metric.setProperty('pair', `${tokenIn.symbol}/${tokenOut.symbol}`);\r\n        metric.setProperty('tokenIn', tokenIn.address);\r\n        metric.setProperty('tokenOut', tokenOut.address);\r\n        metric.setProperty('tradeType', tradeType === TradeType.EXACT_INPUT ? 'ExactIn' : 'ExactOut');\r\n        metric.putMetric(`QuoteRequestedForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n        // Get a block number to specify in all our calls. Ensures data we fetch from chain is\r\n        // from the same block.\r\n        const blockNumber = (_a = partialRoutingConfig.blockNumber) !== null && _a !== void 0 ? _a : this.getBlockNumberPromise();\r\n        const routingConfig = _.merge({}, DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId), partialRoutingConfig, { blockNumber });\r\n        const gasPriceWei = await this.getGasPriceWei();\r\n        const quoteToken = quoteCurrency.wrapped;\r\n        const [v3GasModel, mixedRouteGasModel] = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken);\r\n        // Create a Set to sanitize the protocols input, a Set of undefined becomes an empty set,\r\n        // Then create an Array from the values of that Set.\r\n        const protocols = Array.from(new Set(routingConfig.protocols).values());\r\n        const cacheMode = await ((_c = this.routeCachingProvider) === null || _c === void 0 ? void 0 : _c.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols));\r\n        // Fetch CachedRoutes\r\n        let cachedRoutes;\r\n        if (cacheMode !== CacheMode.Darkmode) {\r\n            cachedRoutes = await ((_d = this.routeCachingProvider) === null || _d === void 0 ? void 0 : _d.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber));\r\n        }\r\n        if (cacheMode && cacheMode !== CacheMode.Darkmode && !cachedRoutes) {\r\n            metric.putMetric(`GetCachedRoute_miss_${cacheMode}`, 1, MetricLoggerUnit.Count);\r\n            log.info({\r\n                tokenIn: tokenIn.symbol,\r\n                tokenInAddress: tokenIn.address,\r\n                tokenOut: tokenOut.symbol,\r\n                tokenOutAddress: tokenOut.address,\r\n                cacheMode,\r\n                amount: amount.toExact(),\r\n                chainId: this.chainId,\r\n                tradeType: this.tradeTypeStr(tradeType)\r\n            }, `GetCachedRoute miss ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);\r\n        }\r\n        else if (cachedRoutes) {\r\n            metric.putMetric(`GetCachedRoute_hit_${cacheMode}`, 1, MetricLoggerUnit.Count);\r\n            log.info({\r\n                tokenIn: tokenIn.symbol,\r\n                tokenInAddress: tokenIn.address,\r\n                tokenOut: tokenOut.symbol,\r\n                tokenOutAddress: tokenOut.address,\r\n                cacheMode,\r\n                amount: amount.toExact(),\r\n                chainId: this.chainId,\r\n                tradeType: this.tradeTypeStr(tradeType)\r\n            }, `GetCachedRoute hit ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);\r\n        }\r\n        let swapRouteFromCachePromise = Promise.resolve(null);\r\n        if (cachedRoutes) {\r\n            swapRouteFromCachePromise = this.getSwapRouteFromCache(cachedRoutes, await blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei);\r\n        }\r\n        let swapRouteFromChainPromise = Promise.resolve(null);\r\n        if (!cachedRoutes || cacheMode !== CacheMode.Livemode) {\r\n            swapRouteFromChainPromise = this.getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei);\r\n        }\r\n        const [swapRouteFromCache, swapRouteFromChain] = await Promise.all([\r\n            swapRouteFromCachePromise,\r\n            swapRouteFromChainPromise\r\n        ]);\r\n        let swapRouteRaw;\r\n        if (cacheMode === CacheMode.Livemode && swapRouteFromCache) {\r\n            log.info(`CacheMode is ${cacheMode}, and we are using swapRoute from cache`);\r\n            swapRouteRaw = swapRouteFromCache;\r\n        }\r\n        else {\r\n            log.info(`CacheMode is ${cacheMode}, and we are using materialized swapRoute`);\r\n            swapRouteRaw = swapRouteFromChain;\r\n        }\r\n        if (cacheMode === CacheMode.Tapcompare && swapRouteFromCache && swapRouteFromChain) {\r\n            const quoteDiff = swapRouteFromChain.quote.subtract(swapRouteFromCache.quote);\r\n            const quoteGasAdjustedDiff = swapRouteFromChain.quoteGasAdjusted.subtract(swapRouteFromCache.quoteGasAdjusted);\r\n            const gasUsedDiff = swapRouteFromChain.estimatedGasUsed.sub(swapRouteFromCache.estimatedGasUsed);\r\n            log.info({\r\n                quoteFromChain: swapRouteFromChain.quote.toExact(),\r\n                quoteFromCache: swapRouteFromCache.quote.toExact(),\r\n                quoteDiff: quoteDiff.toExact(),\r\n                quoteGasAdjustedFromChain: swapRouteFromChain.quoteGasAdjusted.toExact(),\r\n                quoteGasAdjustedFromCache: swapRouteFromCache.quoteGasAdjusted.toExact(),\r\n                quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),\r\n                gasUsedFromChain: swapRouteFromChain.estimatedGasUsed.toString(),\r\n                gasUsedFromCache: swapRouteFromCache.estimatedGasUsed.toString(),\r\n                gasUsedDiff: gasUsedDiff.toString(),\r\n                routesFromChain: swapRouteFromChain.routes.toString(),\r\n                routesFromCache: swapRouteFromCache.routes.toString(),\r\n                amount: amount.toExact(),\r\n                pair: this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)\r\n            }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);\r\n        }\r\n        if (!swapRouteRaw) {\r\n            return null;\r\n        }\r\n        const { quote, quoteGasAdjusted, estimatedGasUsed, routes: routeAmounts, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, } = swapRouteRaw;\r\n        if (this.routeCachingProvider && cacheMode !== CacheMode.Darkmode && swapRouteFromChain) {\r\n            // Generate the object to be cached\r\n            const routesToCache = CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), // sort it for consistency in the order of the protocols.\r\n            await blockNumber, tradeType);\r\n            if (routesToCache) {\r\n                const tokenPairSymbolTradeTypeChainId = this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType);\r\n                // Attempt to insert the entry in cache. This is fire and forget promise.\r\n                // The catch method will prevent any exception from blocking the normal code execution.\r\n                this.routeCachingProvider.setCachedRoute(routesToCache, amount).then((success) => {\r\n                    const status = success ? 'success' : 'rejected';\r\n                    metric.putMetric(`SetCachedRoute_${tokenPairSymbolTradeTypeChainId}_${status}`, 1, MetricLoggerUnit.Count);\r\n                }).catch((reason) => {\r\n                    log.info({\r\n                        reason: reason,\r\n                        tokenPair: tokenPairSymbolTradeTypeChainId\r\n                    }, `SetCachedRoute failure`);\r\n                    metric.putMetric(`SetCachedRoute_${tokenPairSymbolTradeTypeChainId}_failure`, 1, MetricLoggerUnit.Count);\r\n                });\r\n            }\r\n        }\r\n        metric.putMetric(`QuoteFoundForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n        // Build Trade object that represents the optimal swap.\r\n        const trade = buildTrade(currencyIn, currencyOut, tradeType, routeAmounts);\r\n        let methodParameters;\r\n        // If user provided recipient, deadline etc. we also generate the calldata required to execute\r\n        // the swap and return it too.\r\n        if (swapConfig) {\r\n            methodParameters = buildSwapMethodParameters(trade, swapConfig, this.chainId);\r\n        }\r\n        const swapRoute = {\r\n            quote,\r\n            quoteGasAdjusted,\r\n            estimatedGasUsed,\r\n            estimatedGasUsedQuoteToken,\r\n            estimatedGasUsedUSD,\r\n            gasPriceWei,\r\n            route: routeAmounts,\r\n            trade,\r\n            methodParameters,\r\n            blockNumber: BigNumber.from(await blockNumber),\r\n        };\r\n        if (swapConfig &&\r\n            swapConfig.simulate &&\r\n            methodParameters &&\r\n            methodParameters.calldata) {\r\n            if (!this.simulator) {\r\n                throw new Error('Simulator not initialized!');\r\n            }\r\n            log.info({ swapConfig, methodParameters }, 'Starting simulation');\r\n            const fromAddress = swapConfig.simulate.fromAddress;\r\n            const beforeSimulate = Date.now();\r\n            const swapRouteWithSimulation = await this.simulator.simulate(fromAddress, swapConfig, swapRoute, amount, \r\n            // Quote will be in WETH even if quoteCurrency is ETH\r\n            // So we init a new CurrencyAmount object here\r\n            CurrencyAmount.fromRawAmount(quoteCurrency, quote.quotient.toString()), this.l2GasDataProvider\r\n                ? await this.l2GasDataProvider.getGasData()\r\n                : undefined, { blockNumber });\r\n            metric.putMetric('SimulateTransaction', Date.now() - beforeSimulate, MetricLoggerUnit.Milliseconds);\r\n            return swapRouteWithSimulation;\r\n        }\r\n        return swapRoute;\r\n    }\r\n    async getSwapRouteFromCache(cachedRoutes, blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei) {\r\n        log.info({\r\n            protocols: cachedRoutes.protocolsCovered,\r\n            tradeType: cachedRoutes.tradeType,\r\n            cachedBlockNumber: cachedRoutes.blockNumber,\r\n            quoteBlockNumber: blockNumber,\r\n        }, 'Routing across CachedRoute');\r\n        const quotePromises = [];\r\n        const v3Routes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.V3);\r\n        const v2Routes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.V2);\r\n        const mixedRoutes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.MIXED);\r\n        const percents = [];\r\n        if (v3Routes) {\r\n            const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);\r\n            const v3PercentsFromCache = v3Routes.map((cachedRoute) => cachedRoute.percent);\r\n            percents.push(...v3PercentsFromCache);\r\n            const v3Amounts = v3PercentsFromCache.map((percent) => amount.multiply(new Fraction(percent, 100)));\r\n            quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache, v3Amounts, v3PercentsFromCache, quoteToken, tradeType, routingConfig, undefined, v3GasModel));\r\n        }\r\n        if (v2Routes) {\r\n            const v2RoutesFromCache = v2Routes.map((cachedRoute) => cachedRoute.route);\r\n            const v2PercentsFromCache = v2Routes.map((cachedRoute) => cachedRoute.percent);\r\n            percents.push(...v2PercentsFromCache);\r\n            const v2Amounts = v2PercentsFromCache.map((percent) => amount.multiply(new Fraction(percent, 100)));\r\n            quotePromises.push(this.v2Quoter.getQuotes(v2RoutesFromCache, v2Amounts, v2PercentsFromCache, quoteToken, tradeType, routingConfig, undefined, undefined, gasPriceWei));\r\n        }\r\n        if (mixedRoutes) {\r\n            const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);\r\n            const mixedPercentsFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.percent);\r\n            percents.push(...mixedPercentsFromCache);\r\n            const mixedAmounts = mixedPercentsFromCache.map((percent) => amount.multiply(new Fraction(percent, 100)));\r\n            quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache, mixedAmounts, mixedPercentsFromCache, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel));\r\n        }\r\n        const getQuotesResults = await Promise.all(quotePromises);\r\n        const allRoutesWithValidQuotes = _.flatMap(getQuotesResults, (quoteResult) => quoteResult.routesWithValidQuotes);\r\n        return getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, v3GasModel);\r\n    }\r\n    async getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei) {\r\n        // Generate our distribution of amounts, i.e. fractions of the input amount.\r\n        // We will get quotes for fractions of the input amount for different routes, then\r\n        // combine to generate split routes.\r\n        const [percents, amounts] = this.getAmountDistribution(amount, routingConfig);\r\n        const noProtocolsSpecified = protocols.length === 0;\r\n        const v3ProtocolSpecified = protocols.includes(Protocol.V3);\r\n        const v2ProtocolSpecified = protocols.includes(Protocol.V2);\r\n        //@ts-ignore\r\n        const v2SupportedInChain = V2_SUPPORTED.includes(this.chainId);\r\n        const shouldQueryMixedProtocol = protocols.includes(Protocol.MIXED) || (noProtocolsSpecified && v2SupportedInChain);\r\n        const mixedProtocolAllowed = false;\r\n        const quotePromises = [];\r\n        // Maybe Quote V3 - if V3 is specified, or no protocol is specified\r\n        if (v3ProtocolSpecified || noProtocolsSpecified) {\r\n            log.info({ protocols, tradeType }, 'Routing across V3');\r\n            quotePromises.push(this.v3Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, v3GasModel));\r\n        }\r\n        // Maybe Quote V2 - if V2 is specified, or no protocol is specified AND v2 is supported in this chain\r\n        if (v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) {\r\n            log.info({ protocols, tradeType }, 'Routing across V2');\r\n            quotePromises.push(this.v2Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, undefined, gasPriceWei));\r\n        }\r\n        // Maybe Quote mixed routes\r\n        // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn\r\n        // AND is Mainnet or Gorli\r\n        if (shouldQueryMixedProtocol && mixedProtocolAllowed) {\r\n            log.info({ protocols, tradeType }, 'Routing across MixedRoutes');\r\n            quotePromises.push(this.mixedQuoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, mixedRouteGasModel));\r\n        }\r\n        const getQuotesResults = await Promise.all(quotePromises);\r\n        const allRoutesWithValidQuotes = [];\r\n        const allCandidatePools = [];\r\n        getQuotesResults.forEach((getQuoteResult) => {\r\n            allRoutesWithValidQuotes.push(...getQuoteResult.routesWithValidQuotes);\r\n            if (getQuoteResult.candidatePools) {\r\n                allCandidatePools.push(getQuoteResult.candidatePools);\r\n            }\r\n        });\r\n        if (allRoutesWithValidQuotes.length === 0) {\r\n            log.info({ allRoutesWithValidQuotes }, 'Received no valid quotes');\r\n            return null;\r\n        }\r\n        // Given all the quotes for all the amounts for all the routes, find the best combination.\r\n        const bestSwapRoute = await getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, v3GasModel);\r\n        if (bestSwapRoute) {\r\n            this.emitPoolSelectionMetrics(bestSwapRoute, allCandidatePools);\r\n        }\r\n        return bestSwapRoute;\r\n    }\r\n    tradeTypeStr(tradeType) {\r\n        return tradeType === TradeType.EXACT_INPUT ? 'ExactIn' : 'ExactOut';\r\n    }\r\n    tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType) {\r\n        return `${tokenIn.symbol}/${tokenOut.symbol}/${this.tradeTypeStr(tradeType)}/${this.chainId}`;\r\n    }\r\n    determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency) {\r\n        if (tradeType === TradeType.EXACT_INPUT) {\r\n            return {\r\n                currencyIn: amount.currency,\r\n                currencyOut: quoteCurrency\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                currencyIn: quoteCurrency,\r\n                currencyOut: amount.currency\r\n            };\r\n        }\r\n    }\r\n    async getGasPriceWei() {\r\n        // Track how long it takes to resolve this async call.\r\n        const beforeGasTimestamp = Date.now();\r\n        // Get an estimate of the gas price to use when estimating gas cost of different routes.\r\n        const { gasPriceWei } = await this.gasPriceProvider.getGasPrice();\r\n        metric.putMetric('GasPriceLoad', Date.now() - beforeGasTimestamp, MetricLoggerUnit.Milliseconds);\r\n        return gasPriceWei;\r\n    }\r\n    async getGasModels(gasPriceWei, amountToken, quoteToken) {\r\n        const beforeGasModel = Date.now();\r\n        const v3GasModelPromise = this.v3GasModelFactory.buildGasModel({\r\n            chainId: this.chainId,\r\n            gasPriceWei,\r\n            v3poolProvider: this.v3PoolProvider,\r\n            amountToken,\r\n            quoteToken,\r\n            v2poolProvider: this.v2PoolProvider,\r\n            l2GasDataProvider: this.l2GasDataProvider,\r\n        });\r\n        const mixedRouteGasModelPromise = this.mixedRouteGasModelFactory.buildGasModel({\r\n            chainId: this.chainId,\r\n            gasPriceWei,\r\n            v3poolProvider: this.v3PoolProvider,\r\n            amountToken,\r\n            quoteToken,\r\n            v2poolProvider: this.v2PoolProvider,\r\n        });\r\n        const [v3GasModel, mixedRouteGasModel] = await Promise.all([\r\n            v3GasModelPromise,\r\n            mixedRouteGasModelPromise\r\n        ]);\r\n        metric.putMetric('GasModelCreation', Date.now() - beforeGasModel, MetricLoggerUnit.Milliseconds);\r\n        return [v3GasModel, mixedRouteGasModel];\r\n    }\r\n    // Note multiplications here can result in a loss of precision in the amounts (e.g. taking 50% of 101)\r\n    // This is reconcilled at the end of the algorithm by adding any lost precision to one of\r\n    // the splits in the route.\r\n    getAmountDistribution(amount, routingConfig) {\r\n        const { distributionPercent } = routingConfig;\r\n        const percents = [];\r\n        const amounts = [];\r\n        for (let i = 1; i <= 100 / distributionPercent; i++) {\r\n            percents.push(i * distributionPercent);\r\n            amounts.push(amount.multiply(new Fraction(i * distributionPercent, 100)));\r\n        }\r\n        return [percents, amounts];\r\n    }\r\n    async buildSwapAndAddMethodParameters(trade, swapAndAddOptions, swapAndAddParameters) {\r\n        const { swapOptions: { recipient, slippageTolerance, deadline, inputTokenPermit }, addLiquidityOptions: addLiquidityConfig, } = swapAndAddOptions;\r\n        const preLiquidityPosition = swapAndAddParameters.preLiquidityPosition;\r\n        const finalBalanceTokenIn = swapAndAddParameters.initialBalanceTokenIn.subtract(trade.inputAmount);\r\n        const finalBalanceTokenOut = swapAndAddParameters.initialBalanceTokenOut.add(trade.outputAmount);\r\n        const approvalTypes = await this.swapRouterProvider.getApprovalType(finalBalanceTokenIn, finalBalanceTokenOut);\r\n        const zeroForOne = finalBalanceTokenIn.currency.wrapped.sortsBefore(finalBalanceTokenOut.currency.wrapped);\r\n        return {\r\n            ...SwapRouter.swapAndAddCallParameters(trade, {\r\n                recipient,\r\n                slippageTolerance,\r\n                deadlineOrPreviousBlockhash: deadline,\r\n                inputTokenPermit,\r\n            }, Position.fromAmounts({\r\n                pool: preLiquidityPosition.pool,\r\n                tickLower: preLiquidityPosition.tickLower,\r\n                tickUpper: preLiquidityPosition.tickUpper,\r\n                amount0: zeroForOne\r\n                    ? finalBalanceTokenIn.quotient.toString()\r\n                    : finalBalanceTokenOut.quotient.toString(),\r\n                amount1: zeroForOne\r\n                    ? finalBalanceTokenOut.quotient.toString()\r\n                    : finalBalanceTokenIn.quotient.toString(),\r\n                useFullPrecision: false,\r\n            }), addLiquidityConfig, approvalTypes.approvalTokenIn, approvalTypes.approvalTokenOut),\r\n            to: SWAP_ROUTER_02_ADDRESSES(this.chainId),\r\n        };\r\n    }\r\n    emitPoolSelectionMetrics(swapRouteRaw, allPoolsBySelection) {\r\n        const poolAddressesUsed = new Set();\r\n        const { routes: routeAmounts } = swapRouteRaw;\r\n        _(routeAmounts)\r\n            .flatMap((routeAmount) => {\r\n            const { poolAddresses } = routeAmount;\r\n            return poolAddresses;\r\n        })\r\n            .forEach((address) => {\r\n            poolAddressesUsed.add(address.toLowerCase());\r\n        });\r\n        for (const poolsBySelection of allPoolsBySelection) {\r\n            const { protocol } = poolsBySelection;\r\n            _.forIn(poolsBySelection.selections, (pools, topNSelection) => {\r\n                const topNUsed = _.findLastIndex(pools, (pool) => poolAddressesUsed.has(pool.id.toLowerCase())) + 1;\r\n                metric.putMetric(_.capitalize(`${protocol}${topNSelection}`), topNUsed, MetricLoggerUnit.Count);\r\n            });\r\n        }\r\n        let hasV3Route = false;\r\n        let hasV2Route = false;\r\n        let hasMixedRoute = false;\r\n        for (const routeAmount of routeAmounts) {\r\n            if (routeAmount.protocol === Protocol.V3) {\r\n                hasV3Route = true;\r\n            }\r\n            if (routeAmount.protocol === Protocol.V2) {\r\n                hasV2Route = true;\r\n            }\r\n            if (routeAmount.protocol === Protocol.MIXED) {\r\n                hasMixedRoute = true;\r\n            }\r\n        }\r\n        if (hasMixedRoute && (hasV3Route || hasV2Route)) {\r\n            if (hasV3Route && hasV2Route) {\r\n                metric.putMetric(`MixedAndV3AndV2SplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`MixedAndV3AndV2SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n            else if (hasV3Route) {\r\n                metric.putMetric(`MixedAndV3SplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`MixedAndV3SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n            else if (hasV2Route) {\r\n                metric.putMetric(`MixedAndV2SplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`MixedAndV2SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n        }\r\n        else if (hasV3Route && hasV2Route) {\r\n            metric.putMetric(`V3AndV2SplitRoute`, 1, MetricLoggerUnit.Count);\r\n            metric.putMetric(`V3AndV2SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n        }\r\n        else if (hasMixedRoute) {\r\n            if (routeAmounts.length > 1) {\r\n                metric.putMetric(`MixedSplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`MixedSplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n            else {\r\n                metric.putMetric(`MixedRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`MixedRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n        }\r\n        else if (hasV3Route) {\r\n            if (routeAmounts.length > 1) {\r\n                metric.putMetric(`V3SplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`V3SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n            else {\r\n                metric.putMetric(`V3Route`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`V3RouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n        }\r\n        else if (hasV2Route) {\r\n            if (routeAmounts.length > 1) {\r\n                metric.putMetric(`V2SplitRoute`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`V2SplitRouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n            else {\r\n                metric.putMetric(`V2Route`, 1, MetricLoggerUnit.Count);\r\n                metric.putMetric(`V2RouteForChain${this.chainId}`, 1, MetricLoggerUnit.Count);\r\n            }\r\n        }\r\n    }\r\n    calculateOptimalRatio(position, sqrtRatioX96, zeroForOne) {\r\n        const upperSqrtRatioX96 = TickMath.getSqrtRatioAtTick(position.tickUpper);\r\n        const lowerSqrtRatioX96 = TickMath.getSqrtRatioAtTick(position.tickLower);\r\n        // returns Fraction(0, 1) for any out of range position regardless of zeroForOne. Implication: function\r\n        // cannot be used to determine the trading direction of out of range positions.\r\n        if (JSBI.greaterThan(sqrtRatioX96, upperSqrtRatioX96) ||\r\n            JSBI.lessThan(sqrtRatioX96, lowerSqrtRatioX96)) {\r\n            return new Fraction(0, 1);\r\n        }\r\n        const precision = JSBI.BigInt('1' + '0'.repeat(18));\r\n        let optimalRatio = new Fraction(SqrtPriceMath.getAmount0Delta(sqrtRatioX96, upperSqrtRatioX96, precision, true), SqrtPriceMath.getAmount1Delta(sqrtRatioX96, lowerSqrtRatioX96, precision, true));\r\n        if (!zeroForOne)\r\n            optimalRatio = optimalRatio.invert();\r\n        return optimalRatio;\r\n    }\r\n    async userHasSufficientBalance(fromAddress, tradeType, amount, quote) {\r\n        try {\r\n            const neededBalance = tradeType === TradeType.EXACT_INPUT ? amount : quote;\r\n            let balance;\r\n            if (neededBalance.currency.isNative) {\r\n                balance = await this.provider.getBalance(fromAddress);\r\n            }\r\n            else {\r\n                const tokenContract = Erc20__factory.connect(neededBalance.currency.address, this.provider);\r\n                balance = await tokenContract.balanceOf(fromAddress);\r\n            }\r\n            return balance.gte(BigNumber.from(neededBalance.quotient.toString()));\r\n        }\r\n        catch (e) {\r\n            log.error(e, 'Error while checking user balance');\r\n            return false;\r\n        }\r\n    }\r\n    absoluteValue(fraction) {\r\n        const numeratorAbs = JSBI.lessThan(fraction.numerator, JSBI.BigInt(0))\r\n            ? JSBI.unaryMinus(fraction.numerator)\r\n            : fraction.numerator;\r\n        const denominatorAbs = JSBI.lessThan(fraction.denominator, JSBI.BigInt(0))\r\n            ? JSBI.unaryMinus(fraction.denominator)\r\n            : fraction.denominator;\r\n        return new Fraction(numeratorAbs, denominatorAbs);\r\n    }\r\n    getBlockNumberPromise() {\r\n        return retry(async (_b, attempt) => {\r\n            if (attempt > 1) {\r\n                log.info(`Get block number attempt ${attempt}`);\r\n            }\r\n            return this.provider.getBlockNumber();\r\n        }, {\r\n            retries: 2,\r\n            minTimeout: 100,\r\n            maxTimeout: 1000,\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (\r\n//@ts-ignore\r\nchainId) => {\r\n    return {\r\n        v2PoolSelection: {\r\n            topN: 3,\r\n            topNDirectSwaps: 1,\r\n            topNTokenInOut: 5,\r\n            topNSecondHop: 2,\r\n            topNWithEachBaseToken: 2,\r\n            topNWithBaseToken: 6,\r\n        },\r\n        v3PoolSelection: {\r\n            topN: 2,\r\n            topNDirectSwaps: 2,\r\n            topNTokenInOut: 3,\r\n            topNSecondHop: 1,\r\n            topNWithEachBaseToken: 3,\r\n            topNWithBaseToken: 5,\r\n        },\r\n        maxSwapsPerPath: 3,\r\n        minSplits: 1,\r\n        maxSplits: 7,\r\n        distributionPercent: 5,\r\n        forceCrossProtocol: false,\r\n    };\r\n};\r\nexport const ETH_GAS_STATION_API_URL = 'https://ethgasstation.info/api/ethgasAPI.json';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRztBQUM3QyxZQUFZO0FBQ1osT0FBZ0IsRUFDRyxFQUFFO0lBQ3JCLE9BQU87UUFDTCxlQUFlLEVBQUU7WUFDZixJQUFJLEVBQUUsQ0FBQztZQUNQLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLGNBQWMsRUFBRSxDQUFDO1lBQ2pCLGFBQWEsRUFBRSxDQUFDO1lBQ2hCLHFCQUFxQixFQUFFLENBQUM7WUFDeEIsaUJBQWlCLEVBQUUsQ0FBQztTQUNyQjtRQUNELGVBQWUsRUFBRTtZQUNmLElBQUksRUFBRSxDQUFDO1lBQ1AsZUFBZSxFQUFFLENBQUM7WUFDbEIsY0FBYyxFQUFFLENBQUM7WUFDakIsYUFBYSxFQUFFLENBQUM7WUFDaEIscUJBQXFCLEVBQUUsQ0FBQztZQUN4QixpQkFBaUIsRUFBRSxDQUFDO1NBQ3JCO1FBQ0QsZUFBZSxFQUFFLENBQUM7UUFDbEIsU0FBUyxFQUFFLENBQUM7UUFDWixTQUFTLEVBQUUsQ0FBQztRQUNaLG1CQUFtQixFQUFFLENBQUM7UUFDdEIsa0JBQWtCLEVBQUUsS0FBSztLQUMxQixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQ2xDLCtDQUErQyxDQUFDIn0=","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, ContractFactory, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"deadline\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"AllowanceExpired\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"ExcessiveInvalidation\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"InsufficientAllowance\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"maxAmount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"InvalidAmount\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"InvalidContractSignature\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"InvalidNonce\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"InvalidSignature\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"InvalidSignatureLength\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"InvalidSigner\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"LengthMismatch\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"signatureDeadline\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"SignatureExpired\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint160\",\r\n                name: \"amount\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint48\",\r\n                name: \"expiration\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"Lockdown\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint48\",\r\n                name: \"newNonce\",\r\n                type: \"uint48\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint48\",\r\n                name: \"oldNonce\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        name: \"NonceInvalidation\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint160\",\r\n                name: \"amount\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint48\",\r\n                name: \"expiration\",\r\n                type: \"uint48\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint48\",\r\n                name: \"nonce\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        name: \"Permit\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"word\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"mask\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"UnorderedNonceInvalidation\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"DOMAIN_SEPARATOR\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"amount\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint48\",\r\n                name: \"expiration\",\r\n                type: \"uint48\",\r\n            },\r\n            {\r\n                internalType: \"uint48\",\r\n                name: \"nonce\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"amount\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint48\",\r\n                name: \"expiration\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint48\",\r\n                name: \"newNonce\",\r\n                type: \"uint48\",\r\n            },\r\n        ],\r\n        name: \"invalidateNonces\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"wordPos\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"mask\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"invalidateUnorderedNonces\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"spender\",\r\n                        type: \"address\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IAllowanceTransfer.TokenSpenderPair[]\",\r\n                name: \"approvals\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"lockdown\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"nonceBitmap\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint160\",\r\n                                name: \"amount\",\r\n                                type: \"uint160\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint48\",\r\n                                name: \"expiration\",\r\n                                type: \"uint48\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint48\",\r\n                                name: \"nonce\",\r\n                                type: \"uint48\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct IAllowanceTransfer.PermitDetails[]\",\r\n                        name: \"details\",\r\n                        type: \"tuple[]\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"spender\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"sigDeadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IAllowanceTransfer.PermitBatch\",\r\n                name: \"permitBatch\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permit\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint160\",\r\n                                name: \"amount\",\r\n                                type: \"uint160\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint48\",\r\n                                name: \"expiration\",\r\n                                type: \"uint48\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint48\",\r\n                                name: \"nonce\",\r\n                                type: \"uint48\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct IAllowanceTransfer.PermitDetails\",\r\n                        name: \"details\",\r\n                        type: \"tuple\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"spender\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"sigDeadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IAllowanceTransfer.PermitSingle\",\r\n                name: \"permitSingle\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permit\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint256\",\r\n                                name: \"amount\",\r\n                                type: \"uint256\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct ISignatureTransfer.TokenPermissions\",\r\n                        name: \"permitted\",\r\n                        type: \"tuple\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"nonce\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"deadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.PermitTransferFrom\",\r\n                name: \"permit\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"to\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"requestedAmount\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.SignatureTransferDetails\",\r\n                name: \"transferDetails\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permitTransferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint256\",\r\n                                name: \"amount\",\r\n                                type: \"uint256\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct ISignatureTransfer.TokenPermissions[]\",\r\n                        name: \"permitted\",\r\n                        type: \"tuple[]\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"nonce\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"deadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.PermitBatchTransferFrom\",\r\n                name: \"permit\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"to\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"requestedAmount\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.SignatureTransferDetails[]\",\r\n                name: \"transferDetails\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permitTransferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint256\",\r\n                                name: \"amount\",\r\n                                type: \"uint256\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct ISignatureTransfer.TokenPermissions\",\r\n                        name: \"permitted\",\r\n                        type: \"tuple\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"nonce\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"deadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.PermitTransferFrom\",\r\n                name: \"permit\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"to\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"requestedAmount\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.SignatureTransferDetails\",\r\n                name: \"transferDetails\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"witness\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"string\",\r\n                name: \"witnessTypeString\",\r\n                type: \"string\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permitWitnessTransferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: \"address\",\r\n                                name: \"token\",\r\n                                type: \"address\",\r\n                            },\r\n                            {\r\n                                internalType: \"uint256\",\r\n                                name: \"amount\",\r\n                                type: \"uint256\",\r\n                            },\r\n                        ],\r\n                        internalType: \"struct ISignatureTransfer.TokenPermissions[]\",\r\n                        name: \"permitted\",\r\n                        type: \"tuple[]\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"nonce\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"deadline\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.PermitBatchTransferFrom\",\r\n                name: \"permit\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"to\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"requestedAmount\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct ISignatureTransfer.SignatureTransferDetails[]\",\r\n                name: \"transferDetails\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"witness\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"string\",\r\n                name: \"witnessTypeString\",\r\n                type: \"string\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"signature\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"permitWitnessTransferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"from\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"to\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"amount\",\r\n                        type: \"uint160\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token\",\r\n                        type: \"address\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\r\n                name: \"transferDetails\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"amount\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nconst _bytecode = \"0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a557826040525190206080526123c090816100c1823960805181611a90015260a05181611a6a0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db1461126c578063137c29fe146110755780632a2d80d114610db75780632b67b57014610bde57806330f28b7a14610ade5780633644e51514610a9d57806336c7851614610a285780633ff9dcb1146109a85780634fe02b441461093f57806365d9723c146107ac57806387517c451461067a578063927da105146105c3578063cc53287f146104a3578063edd9444b1461033a5763fe8ec1a7146100c657600080fd5b346103365760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff833581811161033257610114903690860161164b565b60243582811161032e5761012b903690870161161a565b6101336114e6565b9160843585811161032a5761014b9036908a016115c1565b98909560a43590811161032657610164913691016115c1565b969095815190610173826113ff565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301527f3620646561646c696e652c000000000000000000000000000000000000000000608083015282519a8b9181610222602085018096611edc565b918237018a8152039961025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c8101835282611437565b5190209085515161026b81611e04565b908a5b8181106102f95750506102f6999a6102ed9183516102a081610294602082018095611eaf565b03848101835282611437565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282611437565b51902093611c40565b80f35b8061031161030b610321938c5161175e565b51611f9d565b61031b828661175e565b52611e53565b61026e565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff9080358281116103325761038b903690830161164b565b60243583811161032e576103a2903690840161161a565b9390926103ad6114e6565b9160643590811161049f576103c4913691016115c1565b949093835151976103d489611e04565b98885b81811061047d5750506102f697988151610425816103f9602082018095611eaf565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611437565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102ed8161141b565b808b61031b8261049461030b61049a968d5161175e565b9261175e565b6103d7565b8680fd5b5082346105bf57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103325780359067ffffffffffffffff821161032e576104f49136910161161a565b929091845b848110610504578580f35b8061051a61051560019388886118b5565b6118c5565b61052f84610529848a8a6118b5565b016118c5565b3389528385528589209173ffffffffffffffffffffffffffffffffffffffff80911692838b528652868a20911690818a5285528589207fffffffffffffffffffffffff000000000000000000000000000000000000000081541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a2016104f9565b8280fd5b50346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610676816105ff6114a0565b936106086114c3565b6106106114e6565b73ffffffffffffffffffffffffffffffffffffffff968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336576106b26114a0565b906106bb6114c3565b916106c46114e6565b65ffffffffffff926064358481169081810361032a5779ffffffffffff0000000000000000000000000000000000000000947fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b94338a5260016020527fffffffffffff0000000000000000000000000000000000000000000000000000858b209873ffffffffffffffffffffffffffffffffffffffff809416998a8d5260205283878d209b169a8b8d52602052868c209486156000146107a457504216925b8454921697889360a01b16911617179055815193845260208401523392a480f35b905092610783565b5082346105bf5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576107e56114a0565b906107ee6114c3565b9265ffffffffffff604435818116939084810361032a57338852602091600183528489209673ffffffffffffffffffffffffffffffffffffffff80911697888b528452858a20981697888a5283528489205460d01c93848711156109175761ffff9085840316116108f05750907f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f393929133895260018252838920878a528252838920888a5282528389209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b16911617905582519485528401523392a480f35b84517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b5084517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b503461033657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336578060209273ffffffffffffffffffffffffffffffffffffffff61098f6114a0565b1681528084528181206024358252845220549051908152f35b5082346105bf57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b8234610a9a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a9a57610a606114a0565b610a686114c3565b610a706114e6565b6064359173ffffffffffffffffffffffffffffffffffffffff8316830361032e576102f6936117a1565b80fd5b503461033657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657602090610ad7611a67565b9051908152f35b508290346105bf576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf57610b1a3661152a565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261033257610b4c611478565b9160e43567ffffffffffffffff8111610bda576102f694610b6f913691016115c1565b939092610b7c8351611f9d565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a08152610bd18161141b565b51902091611b6e565b8580fd5b509134610336576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610c186114a0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360160c08112610332576080855191610c51836113e3565b1261033257845190610c6282611398565b73ffffffffffffffffffffffffffffffffffffffff91602435838116810361049f578152604435838116810361049f57602082015265ffffffffffff606435818116810361032a5788830152608435908116810361049f576060820152815260a435938285168503610bda576020820194855260c4359087830182815260e43567ffffffffffffffff811161032657610cfe90369084016115c1565b929093804211610d88575050918591610d786102f6999a610d7e95610d238851611f07565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610d70816113ff565b519020611b22565b91612010565b51925116916118e6565b602492508a51917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b5091346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc93818536011261033257610df36114a0565b9260249081359267ffffffffffffffff9788851161032a578590853603011261049f578051978589018981108282111761104a578252848301358181116103265785019036602383011215610326578382013591610e50836115ef565b90610e5d85519283611437565b838252602093878584019160071b83010191368311611046578801905b828210610fe9575050508a526044610e93868801611509565b96838c01978852013594838b0191868352604435908111610fe557610ebb90369087016115c1565b959096804211610fba575050508998995151610ed681611e04565b908b5b818110610f9757505092889492610d7892610f6497958351610f02816103f98682018095611eaf565b5190209073ffffffffffffffffffffffffffffffffffffffff9a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610d70816113ff565b51169082515192845b848110610f78578580f35b80610f918585610f8b600195875161175e565b516118e6565b01610f6d565b80610311610fac8e9f9e93610fb2945161175e565b51611f07565b9b9a9b610ed9565b8551917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b8a80fd5b6080823603126110465785608091885161100281611398565b61100b85611509565b8152611018838601611509565b838201526110278a8601611607565b8a8201528d611037818701611607565b90820152815201910190610e7a565b8c80fd5b84896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5082346105bf576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576110b03661152a565b91807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c360112610332576110e2611478565b67ffffffffffffffff93906101043585811161049f5761110590369086016115c1565b90936101243596871161032a57611125610bd1966102f6983691016115c1565b969095825190611134826113ff565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c60608301527f696e652c0000000000000000000000000000000000000000000000000000000060808301528351948591816111e3602085018096611edc565b918237018b8152039361121c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611437565b5190209261122a8651611f9d565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e081016102e1565b5082346105bf576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033257813567ffffffffffffffff92838211610bda5736602383011215610bda5781013592831161032e576024906007368386831b8401011161049f57865b8581106112e5578780f35b80821b83019060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc83360301126103265761139288876001946060835161132c81611398565b611368608461133c8d8601611509565b9485845261134c60448201611509565b809785015261135d60648201611509565b809885015201611509565b918291015273ffffffffffffffffffffffffffffffffffffffff80808093169516931691166117a1565b016112da565b6080810190811067ffffffffffffffff8211176113b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176113b457604052565b60a0810190811067ffffffffffffffff8211176113b457604052565b60c0810190811067ffffffffffffffff8211176113b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176113b457604052565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01906080821261149b576040805190611563826113e3565b8082941261149b57805181810181811067ffffffffffffffff8211176113b457825260043573ffffffffffffffffffffffffffffffffffffffff8116810361149b578152602435602082015282526044356020830152606435910152565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020838186019501011161149b57565b67ffffffffffffffff81116113b45760051b60200190565b359065ffffffffffff8216820361149b57565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020808501948460061b01011161149b57565b91909160608184031261149b576040805191611666836113e3565b8294813567ffffffffffffffff9081811161149b57830182601f8201121561149b578035611693816115ef565b926116a087519485611437565b818452602094858086019360061b8501019381851161149b579086899897969594939201925b8484106116e3575050505050855280820135908501520135910152565b90919293949596978483031261149b578851908982019082821085831117611730578a928992845261171487611509565b81528287013583820152815201930191908897969594936116c6565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80518210156117725760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92919273ffffffffffffffffffffffffffffffffffffffff604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c16804211611884575082871696838803611812575b5050611810955016926122fc565b565b878484161160001461184f57602488604051907ff96fb0710000000000000000000000000000000000000000000000000000000082526004820152fd5b7fffffffffffffffffffffffff000000000000000000000000000000000000000084846118109a031691161790553880611802565b602490604051907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b91908110156117725760061b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361149b5790565b9065ffffffffffff908160608401511673ffffffffffffffffffffffffffffffffffffffff908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c03611a3e579185611a1794927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014611a1c5779ffffffffffff00000000000000000000000000000000000000009042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b1617179055519384938491604091949373ffffffffffffffffffffffffffffffffffffffff606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5079ffffffffffff0000000000000000000000000000000000000000876119a9565b600484517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b467f000000000000000000000000000000000000000000000000000000000000000003611ab2577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152611b1c816113ff565b51902090565b611b2a611a67565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611b1c81611398565b9192909360a435936040840151804211611c0f5750602084510151808611611bde5750918591610d78611bae94611ba9602088015186611d90565b611b22565b73ffffffffffffffffffffffffffffffffffffffff809151511692608435918216820361149b57611810936122fc565b602490604051907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b959093958051519560409283830151804211611d605750848803611d3757611c77918691610d7860209b611ba98d88015186611d90565b60005b868110611c8b575050505050505050565b611c9681835161175e565b5188611ca383878a6118b5565b01359089810151808311611d07575091818888886001968596611ccd575b50505050505001611c7a565b611cfc95611cf69273ffffffffffffffffffffffffffffffffffffffff610515935116956118b5565b916122fc565b803888888883611cc1565b6024908651907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b600484517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b6024908551907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b9073ffffffffffffffffffffffffffffffffffffffff600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611dda57565b60046040517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b90611e0e826115ef565b611e1b6040519182611437565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e4982946115ef565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e805760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805160208092019160005b828110611ec8575050505090565b835185529381019392810192600101611eba565b9081519160005b838110611ef4575050016000815290565b8060208092840101518185015201611ee3565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835273ffffffffffffffffffffffffffffffffffffffff8082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176113b45760405251902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845273ffffffffffffffffffffffffffffffffffffffff81511660408401520151606082015260608152611b1c81611398565b919082604091031261149b576020823592013590565b6000843b6121775750604182036120f55761202d82820182611ffa565b939092604010156117725760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa156120e95773ffffffffffffffffffffffffffffffffffffffff80600051169182156120bf57160361209557565b60046040517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b6040513d6000823e3d90fd5b6040820361214d5761210991810190611ffa565b91601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169360ff1c019060ff8211611e805760209360009360ff60809461204b565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b929391601f928173ffffffffffffffffffffffffffffffffffffffff60646020957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604051988997889687947f1626ba7e000000000000000000000000000000000000000000000000000000009e8f8752600487015260406024870152816044870152868601378b85828601015201168101030192165afa9081156122f1578291612273575b507fffffffff000000000000000000000000000000000000000000000000000000009150160361224957565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d82116122e9575b8161228d60209383611437565b810103126103365751907fffffffff0000000000000000000000000000000000000000000000000000000082168203610a9a57507fffffffff00000000000000000000000000000000000000000000000000000000903861221d565b3d9150612280565b6040513d84823e3d90fd5b9060006064926020958295604051947f23b872dd0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401525af13d15601f3d116001600051141617161561235557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea164736f6c6343000811000a\";\r\nexport class Permit2__factory extends ContractFactory {\r\n    constructor(signer) {\r\n        super(_abi, _bytecode, signer);\r\n    }\r\n    deploy(overrides) {\r\n        return super.deploy(overrides || {});\r\n    }\r\n    getDeployTransaction(overrides) {\r\n        return super.getDeployTransaction(overrides || {});\r\n    }\r\n    attach(address) {\r\n        return super.attach(address);\r\n    }\r\n    connect(signer) {\r\n        return super.connect(signer);\r\n    }\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nPermit2__factory.bytecode = _bytecode;\r\nPermit2__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVybWl0Ml9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvUGVybWl0Ml9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBcUIsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRzdFLE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSx1QkFBdUI7UUFDN0IsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxXQUFXO2dCQUNqQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGVBQWU7UUFDckIsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsMEJBQTBCO1FBQ2hDLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFB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","import { BigNumber } from '@ethersproject/bignumber';\r\nimport retry from 'async-retry';\r\nimport axios from 'axios';\r\nimport { log } from '../util/log';\r\nimport { IGasPriceProvider } from './gas-price-provider';\r\nexport class ETHGasStationInfoProvider extends IGasPriceProvider {\r\n    constructor(url) {\r\n        super();\r\n        this.url = url;\r\n    }\r\n    async getGasPrice() {\r\n        log.info(`About to get gas prices from gas station ${this.url}`);\r\n        const response = await retry(async () => {\r\n            return axios.get(this.url);\r\n        }, { retries: 1 });\r\n        const { data: gasPriceResponse, status } = response;\r\n        if (status != 200) {\r\n            log.error({ response }, `Unabled to get gas price from ${this.url}.`);\r\n            throw new Error(`Unable to get gas price from ${this.url}`);\r\n        }\r\n        log.info({ gasPriceResponse }, 'Gas price response from API. About to parse \"fast\" to big number');\r\n        // Gas prices from ethgasstation are in GweiX10.\r\n        const gasPriceWei = BigNumber.from(gasPriceResponse.fast)\r\n            .div(BigNumber.from(10))\r\n            .mul(BigNumber.from(10).pow(9));\r\n        log.info(`Gas price in wei: ${gasPriceWei} as of block ${gasPriceResponse.blockNum}`);\r\n        return { gasPriceWei: gasPriceWei };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWdhcy1zdGF0aW9uLWluZm8tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9ldGgtZ2FzLXN0YXRpb24taW5mby1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3JELE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFFMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVsQyxPQUFPLEVBQVksaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWlCbkUsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGlCQUFpQjtJQUU5RCxZQUFZLEdBQVc7UUFDckIsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNqQixDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsR0FBRyxDQUFDLElBQUksQ0FBQyw0Q0FBNEMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDakUsTUFBTSxRQUFRLEdBQUcsTUFBTSxLQUFLLENBQzFCLEtBQUssSUFBSSxFQUFFO1lBQ1QsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUF3QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEQsQ0FBQyxFQUNELEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUNmLENBQUM7UUFFRixNQUFNLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQztRQUVwRCxJQUFJLE1BQU0sSUFBSSxHQUFHLEVBQUU7WUFDakIsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLGlDQUFpQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztZQUV0RSxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztTQUM3RDtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSxnQkFBZ0IsRUFBRSxFQUNwQixrRUFBa0UsQ0FDbkUsQ0FBQztRQUVGLGdEQUFnRDtRQUNoRCxNQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQzthQUN0RCxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUN2QixHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVsQyxHQUFHLENBQUMsSUFBSSxDQUNOLHFCQUFxQixXQUFXLGdCQUFnQixnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FDNUUsQ0FBQztRQUVGLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUNGIn0=","import { log } from '../util';\r\nimport { IGasPriceProvider } from './gas-price-provider';\r\nexport class LegacyGasPriceProvider extends IGasPriceProvider {\r\n    constructor(provider) {\r\n        super();\r\n        this.provider = provider;\r\n    }\r\n    async getGasPrice() {\r\n        const gasPriceWei = await this.provider.getGasPrice();\r\n        log.info({ gasPriceWei }, `Got gas price ${gasPriceWei} using eth_gasPrice RPC`);\r\n        return {\r\n            gasPriceWei,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnYWN5LWdhcy1wcmljZS1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvbGVnYWN5LWdhcy1wcmljZS1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRTlCLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRW5FLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxpQkFBaUI7SUFDM0QsWUFBc0IsUUFBeUI7UUFDN0MsS0FBSyxFQUFFLENBQUM7UUFEWSxhQUFRLEdBQVIsUUFBUSxDQUFpQjtJQUUvQyxDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3RELEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSxXQUFXLEVBQUUsRUFDZixpQkFBaUIsV0FBVyx5QkFBeUIsQ0FDdEQsQ0FBQztRQUVGLE9BQU87WUFDTCxXQUFXO1NBQ1osQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","/**\r\n * Provider for fetching data on chain using multicall contracts.\r\n *\r\n * @export\r\n * @abstract\r\n * @class IMulticallProvider\r\n * @template TMulticallConfig\r\n */\r\nexport class IMulticallProvider {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGljYWxsLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9tdWx0aWNhbGwtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcURBOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLE9BQWdCLGtCQUFrQjtDQStEdkMifQ==","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, ContractFactory, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [],\r\n        name: \"getCurrentBlockTimestamp\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"timestamp\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"addr\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"getEthBalance\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"balance\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"target\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"gasLimit\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"bytes\",\r\n                        name: \"callData\",\r\n                        type: \"bytes\",\r\n                    },\r\n                ],\r\n                internalType: \"struct UniswapInterfaceMulticall.Call[]\",\r\n                name: \"calls\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"multicall\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"blockNumber\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"bool\",\r\n                        name: \"success\",\r\n                        type: \"bool\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"gasUsed\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"bytes\",\r\n                        name: \"returnData\",\r\n                        type: \"bytes\",\r\n                    },\r\n                ],\r\n                internalType: \"struct UniswapInterfaceMulticall.Result[]\",\r\n                name: \"returnData\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nconst _bytecode = \"0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a\";\r\nexport class UniswapInterfaceMulticall__factory extends ContractFactory {\r\n    constructor(signer) {\r\n        super(_abi, _bytecode, signer);\r\n    }\r\n    deploy(overrides) {\r\n        return super.deploy(overrides || {});\r\n    }\r\n    getDeployTransaction(overrides) {\r\n        return super.getDeployTransaction(overrides || {});\r\n    }\r\n    attach(address) {\r\n        return super.attach(address);\r\n    }\r\n    connect(signer) {\r\n        return super.connect(signer);\r\n    }\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nUniswapInterfaceMulticall__factory.bytecode = _bytecode;\r\nUniswapInterfaceMulticall__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5pc3dhcEludGVyZmFjZU11bHRpY2FsbF9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy92My9mYWN0b3JpZXMvVW5pc3dhcEludGVyZmFjZU11bHRpY2FsbF9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBcUIsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBTTdFLE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSwwQkFBMEI7UUFDaEMsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxXQUFXO2dCQUNqQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGVBQWU7UUFDckIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsVUFBVSxFQUFFO29CQUNWO3dCQUNFLFlBQVksRUFBRSxTQUFTO3dCQUN2QixJQUFJLEVBQUUsUUFBUTt3QkFDZCxJQUFJLEVBQUUsU0FBUztxQkFDaEI7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLFNBQVM7d0JBQ3ZCLElBQUksRUFBRSxVQUFVO3dCQUNoQixJQUFJLEVBQUUsU0FBUztxQkFDaEI7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLE9BQU87d0JBQ3JCLElBQUksRUFBRSxVQUFVO3dCQUNoQixJQUFJLEVBQUUsT0FBTztxQkFDZDtpQkFDRjtnQkFDRCxZQUFZLEVBQUUseUNBQXlDO2dCQUN2RCxJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLFdBQVc7UUFDakIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxhQUFhO2dCQUNuQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZQUFZLEVBQUUsTUFBTTt3QkFDcEIsSUFBSSxFQUFFLFNBQVM7d0JBQ2YsSUFBSSxFQUFFLE1BQU07cUJBQ2I7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLFNBQVM7d0JBQ3ZCLElBQUksRUFBRSxTQUFTO3dCQUNmLElBQUksRUFBRSxTQUFTO3FCQUNoQjtvQkFDRDt3QkFDRSxZQUFZLEVBQUUsT0FBTzt3QkFDckIsSUFBSSxFQUFFLFlBQVk7d0JBQ2xCLElBQUksRUFBRSxPQUFPO3FCQUNkO2lCQUNGO2dCQUNELFlBQVksRUFBRSwyQ0FBMkM7Z0JBQ3pELElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLFVBQVU7S0FDakI7Q0FDRixDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQ2Isa3hGQUFreEYsQ0FBQztBQUVyeEYsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLGVBQWU7SUFDckUsWUFBWSxNQUFlO1FBQ3pCLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxNQUFNLENBQ0osU0FBMkQ7UUFFM0QsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQXVDLENBQUM7SUFDN0UsQ0FBQztJQUNELG9CQUFvQixDQUNsQixTQUEyRDtRQUUzRCxPQUFPLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFlO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQThCLENBQUM7SUFDNUQsQ0FBQztJQUNELE9BQU8sQ0FBQyxNQUFjO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQXVDLENBQUM7SUFDckUsQ0FBQztJQUdELE1BQU0sQ0FBQyxlQUFlO1FBQ3BCLE9BQU8sSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBdUMsQ0FBQztJQUN6RSxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFlLEVBQ2YsZ0JBQW1DO1FBRW5DLE9BQU8sSUFBSSxRQUFRLENBQ2pCLE9BQU8sRUFDUCxJQUFJLEVBQ0osZ0JBQWdCLENBQ1ksQ0FBQztJQUNqQyxDQUFDOztBQWRlLDJDQUFRLEdBQUcsU0FBUyxDQUFDO0FBQ3JCLHNDQUFHLEdBQUcsSUFBSSxDQUFDIn0=","import _ from 'lodash';\r\nimport stats from 'stats-lite';\r\nimport { UniswapInterfaceMulticall__factory } from '../types/v3/factories/UniswapInterfaceMulticall__factory';\r\nimport { UNISWAP_MULTICALL_ADDRESSES } from '../util/addresses';\r\nimport { log } from '../util/log';\r\nimport { IMulticallProvider, } from './multicall-provider';\r\n/**\r\n * The UniswapMulticall contract has added functionality for limiting the amount of gas\r\n * that each call within the multicall can consume. This is useful for operations where\r\n * a call could consume such a large amount of gas that it causes the node to error out\r\n * with an out of gas error.\r\n *\r\n * @export\r\n * @class UniswapMulticallProvider\r\n */\r\nexport class UniswapMulticallProvider extends IMulticallProvider {\r\n    constructor(chainId, provider, gasLimitPerCall = 1000000) {\r\n        super();\r\n        this.chainId = chainId;\r\n        this.provider = provider;\r\n        this.gasLimitPerCall = gasLimitPerCall;\r\n        const multicallAddress = UNISWAP_MULTICALL_ADDRESSES[this.chainId];\r\n        if (!multicallAddress) {\r\n            throw new Error(`No address for Uniswap Multicall Contract on chain id: ${chainId}`);\r\n        }\r\n        this.multicallContract = UniswapInterfaceMulticall__factory.connect(multicallAddress, this.provider);\r\n    }\r\n    async callSameFunctionOnMultipleContracts(params) {\r\n        var _a;\r\n        const { addresses, contractInterface, functionName, functionParams, providerConfig, } = params;\r\n        const blockNumberOverride = (_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) !== null && _a !== void 0 ? _a : undefined;\r\n        const fragment = contractInterface.getFunction(functionName);\r\n        const callData = contractInterface.encodeFunctionData(fragment, functionParams);\r\n        const calls = _.map(addresses, (address) => {\r\n            return {\r\n                target: address,\r\n                callData,\r\n                gasLimit: this.gasLimitPerCall,\r\n            };\r\n        });\r\n        log.debug({ calls }, `About to multicall for ${functionName} across ${addresses.length} addresses`);\r\n        const { blockNumber, returnData: aggregateResults } = await this.multicallContract.callStatic.multicall(calls, {\r\n            blockTag: blockNumberOverride,\r\n        });\r\n        const results = [];\r\n        for (let i = 0; i < aggregateResults.length; i++) {\r\n            const { success, returnData } = aggregateResults[i];\r\n            // Return data \"0x\" is sometimes returned for invalid calls.\r\n            if (!success || returnData.length <= 2) {\r\n                log.debug({ result: aggregateResults[i] }, `Invalid result calling ${functionName} on address ${addresses[i]}`);\r\n                results.push({\r\n                    success: false,\r\n                    returnData,\r\n                });\r\n                continue;\r\n            }\r\n            results.push({\r\n                success: true,\r\n                result: contractInterface.decodeFunctionResult(fragment, returnData),\r\n            });\r\n        }\r\n        log.debug({ results }, `Results for multicall on ${functionName} across ${addresses.length} addresses as of block ${blockNumber}`);\r\n        return { blockNumber, results };\r\n    }\r\n    async callSameFunctionOnContractWithMultipleParams(params) {\r\n        var _a, _b;\r\n        const { address, contractInterface, functionName, functionParams, additionalConfig, providerConfig, } = params;\r\n        const fragment = contractInterface.getFunction(functionName);\r\n        const gasLimitPerCall = (_a = additionalConfig === null || additionalConfig === void 0 ? void 0 : additionalConfig.gasLimitPerCallOverride) !== null && _a !== void 0 ? _a : this.gasLimitPerCall;\r\n        const blockNumberOverride = (_b = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) !== null && _b !== void 0 ? _b : undefined;\r\n        const calls = _.map(functionParams, (functionParam) => {\r\n            const callData = contractInterface.encodeFunctionData(fragment, functionParam);\r\n            return {\r\n                target: address,\r\n                callData,\r\n                gasLimit: gasLimitPerCall,\r\n            };\r\n        });\r\n        log.debug({ calls }, `About to multicall for ${functionName} at address ${address} with ${functionParams.length} different sets of params`);\r\n        const { blockNumber, returnData: aggregateResults } = await this.multicallContract.callStatic.multicall(calls, {\r\n            blockTag: blockNumberOverride,\r\n        });\r\n        const results = [];\r\n        const gasUsedForSuccess = [];\r\n        for (let i = 0; i < aggregateResults.length; i++) {\r\n            const { success, returnData, gasUsed } = aggregateResults[i];\r\n            // Return data \"0x\" is sometimes returned for invalid pools.\r\n            if (!success || returnData.length <= 2) {\r\n                log.debug({ result: aggregateResults[i] }, `Invalid result calling ${functionName} with params ${functionParams[i]}`);\r\n                results.push({\r\n                    success: false,\r\n                    returnData,\r\n                });\r\n                continue;\r\n            }\r\n            gasUsedForSuccess.push(gasUsed.toNumber());\r\n            results.push({\r\n                success: true,\r\n                result: contractInterface.decodeFunctionResult(fragment, returnData),\r\n            });\r\n        }\r\n        log.debug({ results, functionName, address }, `Results for multicall for ${functionName} at address ${address} with ${functionParams.length} different sets of params. Results as of block ${blockNumber}`);\r\n        return {\r\n            blockNumber,\r\n            results,\r\n            approxGasUsedPerSuccessCall: stats.percentile(gasUsedForSuccess, 99),\r\n        };\r\n    }\r\n    async callMultipleFunctionsOnSameContract(params) {\r\n        var _a, _b;\r\n        const { address, contractInterface, functionNames, functionParams, additionalConfig, providerConfig, } = params;\r\n        const gasLimitPerCall = (_a = additionalConfig === null || additionalConfig === void 0 ? void 0 : additionalConfig.gasLimitPerCallOverride) !== null && _a !== void 0 ? _a : this.gasLimitPerCall;\r\n        const blockNumberOverride = (_b = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) !== null && _b !== void 0 ? _b : undefined;\r\n        const calls = _.map(functionNames, (functionName, i) => {\r\n            const fragment = contractInterface.getFunction(functionName);\r\n            const param = functionParams ? functionParams[i] : [];\r\n            const callData = contractInterface.encodeFunctionData(fragment, param);\r\n            return {\r\n                target: address,\r\n                callData,\r\n                gasLimit: gasLimitPerCall,\r\n            };\r\n        });\r\n        log.debug({ calls }, `About to multicall for ${functionNames.length} functions at address ${address} with ${functionParams === null || functionParams === void 0 ? void 0 : functionParams.length} different sets of params`);\r\n        const { blockNumber, returnData: aggregateResults } = await this.multicallContract.callStatic.multicall(calls, {\r\n            blockTag: blockNumberOverride,\r\n        });\r\n        const results = [];\r\n        const gasUsedForSuccess = [];\r\n        for (let i = 0; i < aggregateResults.length; i++) {\r\n            const fragment = contractInterface.getFunction(functionNames[i]);\r\n            const { success, returnData, gasUsed } = aggregateResults[i];\r\n            // Return data \"0x\" is sometimes returned for invalid pools.\r\n            if (!success || returnData.length <= 2) {\r\n                log.debug({ result: aggregateResults[i] }, `Invalid result calling ${functionNames[i]} with ${functionParams ? functionParams[i] : '0'} params`);\r\n                results.push({\r\n                    success: false,\r\n                    returnData,\r\n                });\r\n                continue;\r\n            }\r\n            gasUsedForSuccess.push(gasUsed.toNumber());\r\n            results.push({\r\n                success: true,\r\n                result: contractInterface.decodeFunctionResult(fragment, returnData),\r\n            });\r\n        }\r\n        log.debug({ results, functionNames, address }, `Results for multicall for ${functionNames.length} functions at address ${address} with ${functionParams ? functionParams.length : ' 0'} different sets of params. Results as of block ${blockNumber}`);\r\n        return {\r\n            blockNumber,\r\n            results,\r\n            approxGasUsedPerSuccessCall: stats.percentile(gasUsedForSuccess, 99),\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGljYWxsLXVuaXN3YXAtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL211bHRpY2FsbC11bmlzd2FwLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLEtBQUssTUFBTSxZQUFZLENBQUM7QUFHL0IsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sMERBQTBELENBQUM7QUFFOUcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDaEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVsQyxPQUFPLEVBSUwsa0JBQWtCLEdBRW5CLE1BQU0sc0JBQXNCLENBQUM7QUFNOUI7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsa0JBQTBDO0lBR3RGLFlBQ1ksT0FBZ0IsRUFDaEIsUUFBc0IsRUFDdEIsa0JBQWtCLE9BQVM7UUFFckMsS0FBSyxFQUFFLENBQUM7UUFKRSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQWM7UUFDdEIsb0JBQWUsR0FBZixlQUFlLENBQVk7UUFHckMsTUFBTSxnQkFBZ0IsR0FBRywyQkFBMkIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFbkUsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQ2IsMERBQTBELE9BQU8sRUFBRSxDQUNwRSxDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsa0NBQWtDLENBQUMsT0FBTyxDQUNqRSxnQkFBZ0IsRUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FDZCxDQUFDO0lBQ0osQ0FBQztJQUVNLEtBQUssQ0FBQyxtQ0FBbUMsQ0FJOUMsTUFBa0U7O1FBS2xFLE1BQU0sRUFDSixTQUFTLEVBQ1Qs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","import { ChainId } from '../util/chains';\r\nimport { IGasPriceProvider } from './gas-price-provider';\r\nconst DEFAULT_EIP_1559_SUPPORTED_CHAINS = [\r\n    ChainId.FUJI\r\n    // infura endpoint having difficulty w/ eip-1559 on kovan\r\n    // ChainId.KOVAN,\r\n];\r\n/**\r\n * Gets gas prices on chain. If the chain supports EIP-1559 and has the feeHistory API,\r\n * uses the EIP1559 provider. Otherwise it will use a legacy provider that uses eth_gasPrice\r\n *\r\n * @export\r\n * @class OnChainGasPriceProvider\r\n */\r\nexport class OnChainGasPriceProvider extends IGasPriceProvider {\r\n    constructor(chainId, eip1559GasPriceProvider, legacyGasPriceProvider, eipChains = DEFAULT_EIP_1559_SUPPORTED_CHAINS) {\r\n        super();\r\n        this.chainId = chainId;\r\n        this.eip1559GasPriceProvider = eip1559GasPriceProvider;\r\n        this.legacyGasPriceProvider = legacyGasPriceProvider;\r\n        this.eipChains = eipChains;\r\n    }\r\n    async getGasPrice() {\r\n        if (this.eipChains.includes(this.chainId)) {\r\n            return this.eip1559GasPriceProvider.getGasPrice();\r\n        }\r\n        return this.legacyGasPriceProvider.getGasPrice();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3pDLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR25FLE1BQU0saUNBQWlDLEdBQUc7SUFDeEMsT0FBTyxDQUFDLElBQUk7SUFDWix5REFBeUQ7SUFDekQsaUJBQWlCO0NBQ2xCLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsaUJBQWlCO0lBQzVELFlBQ1ksT0FBZ0IsRUFDaEIsdUJBQWdELEVBQ2hELHNCQUE4QyxFQUM5QyxZQUF1QixpQ0FBaUM7UUFFbEUsS0FBSyxFQUFFLENBQUM7UUFMRSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7UUFDaEQsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQUM5QyxjQUFTLEdBQVQsU0FBUyxDQUErQztJQUdwRSxDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDekMsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDbkQ7UUFFRCxPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0NBQ0YifQ==","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"path\",\r\n                type: \"bytes\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"quoteExactInput\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160[]\",\r\n                name: \"v3SqrtPriceX96AfterList\",\r\n                type: \"uint160[]\",\r\n            },\r\n            {\r\n                internalType: \"uint32[]\",\r\n                name: \"v3InitializedTicksCrossedList\",\r\n                type: \"uint32[]\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"v3SwapGasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountIn\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"quoteExactInputSingleV2\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountIn\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"sqrtPriceLimitX96\",\r\n                        type: \"uint160\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"quoteExactInputSingleV3\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96After\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"initializedTicksCrossed\",\r\n                type: \"uint32\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"gasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class IMixedRouteQuoterV1__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nIMixedRouteQuoterV1__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSU1peGVkUm91dGVRdW90ZXJWMV9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvSU1peGVkUm91dGVRdW90ZXJWMV9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLElBQUksRUFBRSxNQUFNO2dCQUNaLElBQUksRUFBRSxPQUFPO2FBQ2Q7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsV0FBVztnQkFDekIsSUFBSSxFQUFFLHlCQUF5QjtnQkFDL0IsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsVUFBVTtnQkFDeEIsSUFBSSxFQUFFLCtCQUErQjtnQkFDckMsSUFBSSxFQUFFLFVBQVU7YUFDakI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLG1CQUFtQjtnQkFDekIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxVQUFV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","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"path\",\r\n                type: \"bytes\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"quoteExactInput\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160[]\",\r\n                name: \"sqrtPriceX96AfterList\",\r\n                type: \"uint160[]\",\r\n            },\r\n            {\r\n                internalType: \"uint32[]\",\r\n                name: \"initializedTicksCrossedList\",\r\n                type: \"uint32[]\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"gasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountIn\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"sqrtPriceLimitX96\",\r\n                        type: \"uint160\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IQuoterV2.QuoteExactInputSingleParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"quoteExactInputSingle\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96After\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"initializedTicksCrossed\",\r\n                type: \"uint32\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"gasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"path\",\r\n                type: \"bytes\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"quoteExactOutput\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160[]\",\r\n                name: \"sqrtPriceX96AfterList\",\r\n                type: \"uint160[]\",\r\n            },\r\n            {\r\n                internalType: \"uint32[]\",\r\n                name: \"initializedTicksCrossedList\",\r\n                type: \"uint32[]\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"gasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amount\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"sqrtPriceLimitX96\",\r\n                        type: \"uint160\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IQuoterV2.QuoteExactOutputSingleParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"quoteExactOutputSingle\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96After\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"initializedTicksCrossed\",\r\n                type: \"uint32\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"gasEstimate\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\nexport class IQuoterV2__factory {\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nIQuoterV2__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVF1b3RlclYyX19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3R5cGVzL3YzL2ZhY3Rvcmllcy9JUXVvdGVyVjJfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFHcEIsT0FBTyxFQUFFLFFBQVEsRUFBVSxLQUFLLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFHakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxPQUFPO2dCQUNyQixJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsT0FBTzthQUNkO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxVQUFVO2dCQUNoQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFdBQVc7Z0JBQ3pCLElBQUksRUFBRSx1QkFBdUI7Z0JBQzdCLElBQUksRUFBRSxXQUFXO2FBQ2xCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFVBQVU7Z0JBQ3hCLElBQUksRUFBRSw2QkFBNkI7Z0JBQ25DLElBQUksRUFBRSxVQUFVO2FBQ2pCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxhQUFhO2dCQUNuQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZQUFZLEVB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","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { encodeMixedRouteToPath, MixedRouteSDK, Protocol, } from '@uniswap/router-sdk';\r\nimport { encodeRouteToPath } from '@uniswap/v3-sdk';\r\nimport retry from 'async-retry';\r\nimport _ from 'lodash';\r\nimport stats from 'stats-lite';\r\nimport { V2Route } from '../routers/router';\r\nimport { IMixedRouteQuoterV1__factory } from '../types/other/factories/IMixedRouteQuoterV1__factory';\r\nimport { IQuoterV2__factory } from '../types/v3/factories/IQuoterV2__factory';\r\nimport { metric, MetricLoggerUnit } from '../util';\r\nimport { MIXED_ROUTE_QUOTER_V1_ADDRESSES, QUOTER_V2_ADDRESSES, } from '../util/addresses';\r\nimport { log } from '../util/log';\r\nimport { routeToString } from '../util/routes';\r\nexport class BlockConflictError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'BlockConflictError';\r\n    }\r\n}\r\nexport class SuccessRateError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'SuccessRateError';\r\n    }\r\n}\r\nexport class ProviderBlockHeaderError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'ProviderBlockHeaderError';\r\n    }\r\n}\r\nexport class ProviderTimeoutError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'ProviderTimeoutError';\r\n    }\r\n}\r\n/**\r\n * This error typically means that the gas used by the multicall has\r\n * exceeded the total call gas limit set by the node provider.\r\n *\r\n * This can be resolved by modifying BatchParams to request fewer\r\n * quotes per call, or to set a lower gas limit per quote.\r\n *\r\n * @export\r\n * @class ProviderGasError\r\n */\r\nexport class ProviderGasError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'ProviderGasError';\r\n    }\r\n}\r\nconst DEFAULT_BATCH_RETRIES = 2;\r\n/**\r\n * Computes on chain quotes for swaps. For pure V3 routes, quotes are computed on-chain using\r\n * the 'QuoterV2' smart contract. For exactIn mixed and V2 routes, quotes are computed using the 'MixedRouteQuoterV1' contract\r\n * This is because computing quotes off-chain would require fetching all the tick data for each pool, which is a lot of data.\r\n *\r\n * To minimize the number of requests for quotes we use a Multicall contract. Generally\r\n * the number of quotes to fetch exceeds the maximum we can fit in a single multicall\r\n * while staying under gas limits, so we also batch these quotes across multiple multicalls.\r\n *\r\n * The biggest challenge with the quote provider is dealing with various gas limits.\r\n * Each provider sets a limit on the amount of gas a call can consume (on Infura this\r\n * is approximately 10x the block max size), so we must ensure each multicall does not\r\n * exceed this limit. Additionally, each quote on V3 can consume a large number of gas if\r\n * the pool lacks liquidity and the swap would cause all the ticks to be traversed.\r\n *\r\n * To ensure we don't exceed the node's call limit, we limit the gas used by each quote to\r\n * a specific value, and we limit the number of quotes in each multicall request. Users of this\r\n * class should set BatchParams such that multicallChunk * gasLimitPerCall is less than their node\r\n * providers total gas limit per call.\r\n *\r\n * @export\r\n * @class OnChainQuoteProvider\r\n */\r\nexport class OnChainQuoteProvider {\r\n    /**\r\n     * Creates an instance of OnChainQuoteProvider.\r\n     *\r\n     * @param chainId The chain to get quotes for.\r\n     * @param provider The web 3 provider.\r\n     * @param multicall2Provider The multicall provider to use to get the quotes on-chain.\r\n     * Only supports the Uniswap Multicall contract as it needs the gas limitting functionality.\r\n     * @param retryOptions The retry options for each call to the multicall.\r\n     * @param batchParams The parameters for each batched call to the multicall.\r\n     * @param gasErrorFailureOverride The gas and chunk parameters to use when retrying a batch that failed due to out of gas.\r\n     * @param successRateFailureOverrides The parameters for retries when we fail to get quotes.\r\n     * @param blockNumberConfig Parameters for adjusting which block we get quotes from, and how to handle block header not found errors.\r\n     * @param [quoterAddressOverride] Overrides the address of the quoter contract to use.\r\n     */\r\n    constructor(chainId, provider, \r\n    // Only supports Uniswap Multicall as it needs the gas limitting functionality.\r\n    multicall2Provider, retryOptions = {\r\n        retries: DEFAULT_BATCH_RETRIES,\r\n        minTimeout: 25,\r\n        maxTimeout: 250,\r\n    }, batchParams = {\r\n        multicallChunk: 150,\r\n        gasLimitPerCall: 1000000,\r\n        quoteMinSuccessRate: 0.2,\r\n    }, gasErrorFailureOverride = {\r\n        gasLimitOverride: 1500000,\r\n        multicallChunk: 100,\r\n    }, successRateFailureOverrides = {\r\n        gasLimitOverride: 1300000,\r\n        multicallChunk: 110,\r\n    }, blockNumberConfig = {\r\n        baseBlockOffset: 0,\r\n        rollback: { enabled: false },\r\n    }, quoterAddressOverride) {\r\n        this.chainId = chainId;\r\n        this.provider = provider;\r\n        this.multicall2Provider = multicall2Provider;\r\n        this.retryOptions = retryOptions;\r\n        this.batchParams = batchParams;\r\n        this.gasErrorFailureOverride = gasErrorFailureOverride;\r\n        this.successRateFailureOverrides = successRateFailureOverrides;\r\n        this.blockNumberConfig = blockNumberConfig;\r\n        this.quoterAddressOverride = quoterAddressOverride;\r\n    }\r\n    getQuoterAddress(useMixedRouteQuoter) {\r\n        if (this.quoterAddressOverride) {\r\n            return this.quoterAddressOverride;\r\n        }\r\n        const quoterAddress = useMixedRouteQuoter\r\n            ? MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]\r\n            : QUOTER_V2_ADDRESSES[this.chainId];\r\n        if (!quoterAddress) {\r\n            throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`);\r\n        }\r\n        return quoterAddress;\r\n    }\r\n    async getQuotesManyExactIn(amountIns, routes, providerConfig) {\r\n        return this.getQuotesManyData(amountIns, routes, 'quoteExactInput', providerConfig);\r\n    }\r\n    async getQuotesManyExactOut(amountOuts, routes, providerConfig) {\r\n        return this.getQuotesManyData(amountOuts, routes, 'quoteExactOutput', providerConfig);\r\n    }\r\n    async getQuotesManyData(amounts, routes, functionName, _providerConfig) {\r\n        var _a;\r\n        const useMixedRouteQuoter = routes.some((route) => route.protocol === Protocol.V2) ||\r\n            routes.some((route) => route.protocol === Protocol.MIXED);\r\n        /// Validate that there are no incorrect routes / function combinations\r\n        this.validateRoutes(routes, functionName, useMixedRouteQuoter);\r\n        let multicallChunk = this.batchParams.multicallChunk;\r\n        let gasLimitOverride = this.batchParams.gasLimitPerCall;\r\n        const { baseBlockOffset, rollback } = this.blockNumberConfig;\r\n        // Apply the base block offset if provided\r\n        const originalBlockNumber = await this.provider.getBlockNumber();\r\n        const providerConfig = {\r\n            ..._providerConfig,\r\n            blockNumber: (_a = _providerConfig === null || _providerConfig === void 0 ? void 0 : _providerConfig.blockNumber) !== null && _a !== void 0 ? _a : originalBlockNumber + baseBlockOffset,\r\n        };\r\n        const inputs = _(routes)\r\n            .flatMap((route) => {\r\n            const encodedRoute = route.protocol === Protocol.V3\r\n                ? encodeRouteToPath(route, functionName == 'quoteExactOutput' // For exactOut must be true to ensure the routes are reversed.\r\n                )\r\n                : encodeMixedRouteToPath(route instanceof V2Route\r\n                    ? new MixedRouteSDK(route.pairs, route.input, route.output)\r\n                    : route);\r\n            const routeInputs = amounts.map((amount) => [\r\n                encodedRoute,\r\n                `0x${amount.quotient.toString(16)}`,\r\n            ]);\r\n            return routeInputs;\r\n        })\r\n            .value();\r\n        const normalizedChunk = Math.ceil(inputs.length / Math.ceil(inputs.length / multicallChunk));\r\n        const inputsChunked = _.chunk(inputs, normalizedChunk);\r\n        let quoteStates = _.map(inputsChunked, (inputChunk) => {\r\n            return {\r\n                status: 'pending',\r\n                inputs: inputChunk,\r\n            };\r\n        });\r\n        log.info(`About to get ${inputs.length} quotes in chunks of ${normalizedChunk} [${_.map(inputsChunked, (i) => i.length).join(',')}] ${gasLimitOverride\r\n            ? `with a gas limit override of ${gasLimitOverride}`\r\n            : ''} and block number: ${await providerConfig.blockNumber} [Original before offset: ${originalBlockNumber}].`);\r\n        let haveRetriedForSuccessRate = false;\r\n        let haveRetriedForBlockHeader = false;\r\n        let blockHeaderRetryAttemptNumber = 0;\r\n        let haveIncrementedBlockHeaderFailureCounter = false;\r\n        let blockHeaderRolledBack = false;\r\n        let haveRetriedForBlockConflictError = false;\r\n        let haveRetriedForOutOfGas = false;\r\n        let haveRetriedForTimeout = false;\r\n        let haveRetriedForUnknownReason = false;\r\n        let finalAttemptNumber = 1;\r\n        const expectedCallsMade = quoteStates.length;\r\n        let totalCallsMade = 0;\r\n        const { results: quoteResults, blockNumber, approxGasUsedPerSuccessCall, } = await retry(async (_bail, attemptNumber) => {\r\n            haveIncrementedBlockHeaderFailureCounter = false;\r\n            finalAttemptNumber = attemptNumber;\r\n            const [success, failed, pending] = this.partitionQuotes(quoteStates);\r\n            log.info(`Starting attempt: ${attemptNumber}.\n          Currently ${success.length} success, ${failed.length} failed, ${pending.length} pending.\n          Gas limit override: ${gasLimitOverride} Block number override: ${providerConfig.blockNumber}.`);\r\n            quoteStates = await Promise.all(_.map(quoteStates, async (quoteState, idx) => {\r\n                if (quoteState.status == 'success') {\r\n                    return quoteState;\r\n                }\r\n                // QuoteChunk is pending or failed, so we try again\r\n                const { inputs } = quoteState;\r\n                try {\r\n                    totalCallsMade = totalCallsMade + 1;\r\n                    const results = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({\r\n                        address: this.getQuoterAddress(useMixedRouteQuoter),\r\n                        contractInterface: useMixedRouteQuoter\r\n                            ? IMixedRouteQuoterV1__factory.createInterface()\r\n                            : IQuoterV2__factory.createInterface(),\r\n                        functionName,\r\n                        functionParams: inputs,\r\n                        providerConfig,\r\n                        additionalConfig: {\r\n                            gasLimitPerCallOverride: gasLimitOverride,\r\n                        },\r\n                    });\r\n                    const successRateError = this.validateSuccessRate(results.results, haveRetriedForSuccessRate);\r\n                    if (successRateError) {\r\n                        return {\r\n                            status: 'failed',\r\n                            inputs,\r\n                            reason: successRateError,\r\n                            results,\r\n                        };\r\n                    }\r\n                    return {\r\n                        status: 'success',\r\n                        inputs,\r\n                        results,\r\n                    };\r\n                }\r\n                catch (err) {\r\n                    // Error from providers have huge messages that include all the calldata and fill the logs.\r\n                    // Catch them and rethrow with shorter message.\r\n                    if (err.message.includes('header not found')) {\r\n                        return {\r\n                            status: 'failed',\r\n                            inputs,\r\n                            reason: new ProviderBlockHeaderError(err.message.slice(0, 500)),\r\n                        };\r\n                    }\r\n                    if (err.message.includes('timeout')) {\r\n                        return {\r\n                            status: 'failed',\r\n                            inputs,\r\n                            reason: new ProviderTimeoutError(`Req ${idx}/${quoteStates.length}. Request had ${inputs.length} inputs. ${err.message.slice(0, 500)}`),\r\n                        };\r\n                    }\r\n                    if (err.message.includes('out of gas')) {\r\n                        return {\r\n                            status: 'failed',\r\n                            inputs,\r\n                            reason: new ProviderGasError(err.message.slice(0, 500)),\r\n                        };\r\n                    }\r\n                    return {\r\n                        status: 'failed',\r\n                        inputs,\r\n                        reason: new Error(`Unknown error from provider: ${err.message.slice(0, 500)}`),\r\n                    };\r\n                }\r\n            }));\r\n            const [successfulQuoteStates, failedQuoteStates, pendingQuoteStates] = this.partitionQuotes(quoteStates);\r\n            if (pendingQuoteStates.length > 0) {\r\n                throw new Error('Pending quote after waiting for all promises.');\r\n            }\r\n            let retryAll = false;\r\n            const blockNumberError = this.validateBlockNumbers(successfulQuoteStates, inputsChunked.length, gasLimitOverride);\r\n            // If there is a block number conflict we retry all the quotes.\r\n            if (blockNumberError) {\r\n                retryAll = true;\r\n            }\r\n            const reasonForFailureStr = _.map(failedQuoteStates, (failedQuoteState) => failedQuoteState.reason.name).join(', ');\r\n            if (failedQuoteStates.length > 0) {\r\n                log.info(`On attempt ${attemptNumber}: ${failedQuoteStates.length}/${quoteStates.length} quotes failed. Reasons: ${reasonForFailureStr}`);\r\n                for (const failedQuoteState of failedQuoteStates) {\r\n                    const { reason: error } = failedQuoteState;\r\n                    log.info({ error }, `[QuoteFetchError] Attempt ${attemptNumber}. ${error.message}`);\r\n                    if (error instanceof BlockConflictError) {\r\n                        if (!haveRetriedForBlockConflictError) {\r\n                            metric.putMetric('QuoteBlockConflictErrorRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForBlockConflictError = true;\r\n                        }\r\n                        retryAll = true;\r\n                    }\r\n                    else if (error instanceof ProviderBlockHeaderError) {\r\n                        if (!haveRetriedForBlockHeader) {\r\n                            metric.putMetric('QuoteBlockHeaderNotFoundRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForBlockHeader = true;\r\n                        }\r\n                        // Ensure that if multiple calls fail due to block header in the current pending batch,\r\n                        // we only count once.\r\n                        if (!haveIncrementedBlockHeaderFailureCounter) {\r\n                            blockHeaderRetryAttemptNumber =\r\n                                blockHeaderRetryAttemptNumber + 1;\r\n                            haveIncrementedBlockHeaderFailureCounter = true;\r\n                        }\r\n                        if (rollback.enabled) {\r\n                            const { rollbackBlockOffset, attemptsBeforeRollback } = rollback;\r\n                            if (blockHeaderRetryAttemptNumber >= attemptsBeforeRollback &&\r\n                                !blockHeaderRolledBack) {\r\n                                log.info(`Attempt ${attemptNumber}. Have failed due to block header ${blockHeaderRetryAttemptNumber - 1} times. Rolling back block number by ${rollbackBlockOffset} for next retry`);\r\n                                providerConfig.blockNumber = providerConfig.blockNumber\r\n                                    ? (await providerConfig.blockNumber) + rollbackBlockOffset\r\n                                    : (await this.provider.getBlockNumber()) +\r\n                                        rollbackBlockOffset;\r\n                                retryAll = true;\r\n                                blockHeaderRolledBack = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (error instanceof ProviderTimeoutError) {\r\n                        if (!haveRetriedForTimeout) {\r\n                            metric.putMetric('QuoteTimeoutRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForTimeout = true;\r\n                        }\r\n                    }\r\n                    else if (error instanceof ProviderGasError) {\r\n                        if (!haveRetriedForOutOfGas) {\r\n                            metric.putMetric('QuoteOutOfGasExceptionRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForOutOfGas = true;\r\n                        }\r\n                        gasLimitOverride = this.gasErrorFailureOverride.gasLimitOverride;\r\n                        multicallChunk = this.gasErrorFailureOverride.multicallChunk;\r\n                        retryAll = true;\r\n                    }\r\n                    else if (error instanceof SuccessRateError) {\r\n                        if (!haveRetriedForSuccessRate) {\r\n                            metric.putMetric('QuoteSuccessRateRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForSuccessRate = true;\r\n                            // Low success rate can indicate too little gas given to each call.\r\n                            gasLimitOverride =\r\n                                this.successRateFailureOverrides.gasLimitOverride;\r\n                            multicallChunk =\r\n                                this.successRateFailureOverrides.multicallChunk;\r\n                            retryAll = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!haveRetriedForUnknownReason) {\r\n                            metric.putMetric('QuoteUnknownReasonRetry', 1, MetricLoggerUnit.Count);\r\n                            haveRetriedForUnknownReason = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (retryAll) {\r\n                log.info(`Attempt ${attemptNumber}. Resetting all requests to pending for next attempt.`);\r\n                const normalizedChunk = Math.ceil(inputs.length / Math.ceil(inputs.length / multicallChunk));\r\n                const inputsChunked = _.chunk(inputs, normalizedChunk);\r\n                quoteStates = _.map(inputsChunked, (inputChunk) => {\r\n                    return {\r\n                        status: 'pending',\r\n                        inputs: inputChunk,\r\n                    };\r\n                });\r\n            }\r\n            if (failedQuoteStates.length > 0) {\r\n                // TODO: Work with Arbitrum to find a solution for making large multicalls with gas limits that always\r\n                // successfully.\r\n                //\r\n                // On Arbitrum we can not set a gas limit for every call in the multicall and guarantee that\r\n                // we will not run out of gas on the node. This is because they have a different way of accounting\r\n                // for gas, that seperates storage and compute gas costs, and we can not cover both in a single limit.\r\n                //\r\n                // To work around this and avoid throwing errors when really we just couldn't get a quote, we catch this\r\n                // case and return 0 quotes found.\r\n                if (\r\n                //eslint-disable-next-line\r\n                false &&\r\n                    _.every(failedQuoteStates, (failedQuoteState) => failedQuoteState.reason instanceof ProviderGasError) &&\r\n                    attemptNumber == this.retryOptions.retries) {\r\n                    log.error(`Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes.`);\r\n                    return {\r\n                        results: [],\r\n                        blockNumber: BigNumber.from(0),\r\n                        approxGasUsedPerSuccessCall: 0,\r\n                    };\r\n                }\r\n                throw new Error(`Failed to get ${failedQuoteStates.length} quotes. Reasons: ${reasonForFailureStr}`);\r\n            }\r\n            const callResults = _.map(successfulQuoteStates, (quoteState) => quoteState.results);\r\n            return {\r\n                results: _.flatMap(callResults, (result) => result.results),\r\n                blockNumber: BigNumber.from(callResults[0].blockNumber),\r\n                approxGasUsedPerSuccessCall: stats.percentile(_.map(callResults, (result) => result.approxGasUsedPerSuccessCall), 100),\r\n            };\r\n        }, {\r\n            retries: DEFAULT_BATCH_RETRIES,\r\n            ...this.retryOptions,\r\n        });\r\n        const routesQuotes = this.processQuoteResults(quoteResults, routes, amounts);\r\n        metric.putMetric('QuoteApproxGasUsedPerSuccessfulCall', approxGasUsedPerSuccessCall, MetricLoggerUnit.Count);\r\n        metric.putMetric('QuoteNumRetryLoops', finalAttemptNumber - 1, MetricLoggerUnit.Count);\r\n        metric.putMetric('QuoteTotalCallsToProvider', totalCallsMade, MetricLoggerUnit.Count);\r\n        metric.putMetric('QuoteExpectedCallsToProvider', expectedCallsMade, MetricLoggerUnit.Count);\r\n        metric.putMetric('QuoteNumRetriedCalls', totalCallsMade - expectedCallsMade, MetricLoggerUnit.Count);\r\n        const [successfulQuotes, failedQuotes] = _(routesQuotes)\r\n            .flatMap((routeWithQuotes) => routeWithQuotes[1])\r\n            .partition((quote) => quote.quote != null)\r\n            .value();\r\n        log.info(`Got ${successfulQuotes.length} successful quotes, ${failedQuotes.length} failed quotes. Took ${finalAttemptNumber - 1} attempt loops. Total calls made to provider: ${totalCallsMade}. Have retried for timeout: ${haveRetriedForTimeout}`);\r\n        return { routesWithQuotes: routesQuotes, blockNumber };\r\n    }\r\n    partitionQuotes(quoteStates) {\r\n        const successfulQuoteStates = _.filter(quoteStates, (quoteState) => quoteState.status == 'success');\r\n        const failedQuoteStates = _.filter(quoteStates, (quoteState) => quoteState.status == 'failed');\r\n        const pendingQuoteStates = _.filter(quoteStates, (quoteState) => quoteState.status == 'pending');\r\n        return [successfulQuoteStates, failedQuoteStates, pendingQuoteStates];\r\n    }\r\n    processQuoteResults(quoteResults, routes, amounts) {\r\n        const routesQuotes = [];\r\n        const quotesResultsByRoute = _.chunk(quoteResults, amounts.length);\r\n        const debugFailedQuotes = [];\r\n        for (let i = 0; i < quotesResultsByRoute.length; i++) {\r\n            const route = routes[i];\r\n            const quoteResults = quotesResultsByRoute[i];\r\n            const quotes = _.map(quoteResults, (quoteResult, index) => {\r\n                const amount = amounts[index];\r\n                if (!quoteResult.success) {\r\n                    const percent = (100 / amounts.length) * (index + 1);\r\n                    const amountStr = amount.toFixed(Math.min(amount.currency.decimals, 2));\r\n                    const routeStr = routeToString(route);\r\n                    debugFailedQuotes.push({\r\n                        route: routeStr,\r\n                        percent,\r\n                        amount: amountStr,\r\n                    });\r\n                    return {\r\n                        amount,\r\n                        quote: null,\r\n                        sqrtPriceX96AfterList: null,\r\n                        gasEstimate: null,\r\n                        initializedTicksCrossedList: null,\r\n                    };\r\n                }\r\n                return {\r\n                    amount,\r\n                    quote: quoteResult.result[0],\r\n                    sqrtPriceX96AfterList: quoteResult.result[1],\r\n                    initializedTicksCrossedList: quoteResult.result[2],\r\n                    gasEstimate: quoteResult.result[3],\r\n                };\r\n            });\r\n            routesQuotes.push([route, quotes]);\r\n        }\r\n        // For routes and amounts that we failed to get a quote for, group them by route\r\n        // and batch them together before logging to minimize number of logs.\r\n        const debugChunk = 80;\r\n        _.forEach(_.chunk(debugFailedQuotes, debugChunk), (quotes, idx) => {\r\n            const failedQuotesByRoute = _.groupBy(quotes, (q) => q.route);\r\n            const failedFlat = _.mapValues(failedQuotesByRoute, (f) => _(f)\r\n                .map((f) => `${f.percent}%[${f.amount}]`)\r\n                .join(','));\r\n            log.info({\r\n                failedQuotes: _.map(failedFlat, (amounts, routeStr) => `${routeStr} : ${amounts}`),\r\n            }, `Failed on chain quotes for routes Part ${idx}/${Math.ceil(debugFailedQuotes.length / debugChunk)}`);\r\n        });\r\n        return routesQuotes;\r\n    }\r\n    validateBlockNumbers(successfulQuoteStates, totalCalls, gasLimitOverride) {\r\n        if (successfulQuoteStates.length <= 1) {\r\n            return null;\r\n        }\r\n        const results = _.map(successfulQuoteStates, (quoteState) => quoteState.results);\r\n        const blockNumbers = _.map(results, (result) => result.blockNumber);\r\n        const uniqBlocks = _(blockNumbers)\r\n            .map((blockNumber) => blockNumber.toNumber())\r\n            .uniq()\r\n            .value();\r\n        if (uniqBlocks.length == 1) {\r\n            return null;\r\n        }\r\n        /* if (\r\n          uniqBlocks.length == 2 &&\r\n          Math.abs(uniqBlocks[0]! - uniqBlocks[1]!) <= 1\r\n        ) {\r\n          return null;\r\n        } */\r\n        return new BlockConflictError(`Quotes returned from different blocks. ${uniqBlocks}. ${totalCalls} calls were made with gas limit ${gasLimitOverride}`);\r\n    }\r\n    validateSuccessRate(allResults, haveRetriedForSuccessRate) {\r\n        const numResults = allResults.length;\r\n        const numSuccessResults = allResults.filter((result) => result.success).length;\r\n        const successRate = (1.0 * numSuccessResults) / numResults;\r\n        const { quoteMinSuccessRate } = this.batchParams;\r\n        if (successRate < quoteMinSuccessRate) {\r\n            if (haveRetriedForSuccessRate) {\r\n                log.info(`Quote success rate still below threshold despite retry. Continuing. ${quoteMinSuccessRate}: ${successRate}`);\r\n                return;\r\n            }\r\n            return new SuccessRateError(`Quote success rate below threshold of ${quoteMinSuccessRate}: ${successRate}`);\r\n        }\r\n    }\r\n    /**\r\n     * Throw an error for incorrect routes / function combinations\r\n     * @param routes Any combination of V3, V2, and Mixed routes.\r\n     * @param functionName\r\n     * @param useMixedRouteQuoter true if there are ANY V2Routes or MixedRoutes in the routes parameter\r\n     */\r\n    validateRoutes(routes, functionName, useMixedRouteQuoter) {\r\n        /// We do not send any V3Routes to new qutoer becuase it is not deployed on chains besides mainnet\r\n        if (routes.some((route) => route.protocol === Protocol.V3) &&\r\n            useMixedRouteQuoter) {\r\n            throw new Error(`Cannot use mixed route quoter with V3 routes`);\r\n        }\r\n        /// We cannot call quoteExactOutput with V2 or Mixed routes\r\n        if (functionName === 'quoteExactOutput' && useMixedRouteQuoter) {\r\n            throw new Error('Cannot call quoteExactOutput with V2 or Mixed routes');\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Contract, ContractFactory, utils } from \"ethers\";\r\nconst _abi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"_factoryV2\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"factoryV3\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"_positionManager\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"_WETH9\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"WETH9\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"approveMax\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"approveMaxMinusOne\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"approveZeroThenMax\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"approveZeroThenMaxMinusOne\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"data\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"callPositionManager\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"result\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"paths\",\r\n                type: \"bytes[]\",\r\n            },\r\n            {\r\n                internalType: \"uint128[]\",\r\n                name: \"amounts\",\r\n                type: \"uint128[]\",\r\n            },\r\n            {\r\n                internalType: \"uint24\",\r\n                name: \"maximumTickDivergence\",\r\n                type: \"uint24\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"secondsAgo\",\r\n                type: \"uint32\",\r\n            },\r\n        ],\r\n        name: \"checkOracleSlippage\",\r\n        outputs: [],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"path\",\r\n                type: \"bytes\",\r\n            },\r\n            {\r\n                internalType: \"uint24\",\r\n                name: \"maximumTickDivergence\",\r\n                type: \"uint24\",\r\n            },\r\n            {\r\n                internalType: \"uint32\",\r\n                name: \"secondsAgo\",\r\n                type: \"uint32\",\r\n            },\r\n        ],\r\n        name: \"checkOracleSlippage\",\r\n        outputs: [],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"bytes\",\r\n                        name: \"path\",\r\n                        type: \"bytes\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"recipient\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountIn\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountOutMinimum\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IV3SwapRouter.ExactInputParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"exactInput\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"recipient\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountIn\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountOutMinimum\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"sqrtPriceLimitX96\",\r\n                        type: \"uint160\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IV3SwapRouter.ExactInputSingleParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"exactInputSingle\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"bytes\",\r\n                        name: \"path\",\r\n                        type: \"bytes\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"recipient\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountOut\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountInMaximum\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IV3SwapRouter.ExactOutputParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"exactOutput\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenIn\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"tokenOut\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"recipient\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountOut\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amountInMaximum\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint160\",\r\n                        name: \"sqrtPriceLimitX96\",\r\n                        type: \"uint160\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IV3SwapRouter.ExactOutputSingleParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"exactOutputSingle\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factoryV2\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"getApprovalType\",\r\n        outputs: [\r\n            {\r\n                internalType: \"enum IApproveAndCall.ApprovalType\",\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token0\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token1\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"tokenId\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amount0Min\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amount1Min\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IApproveAndCall.IncreaseLiquidityParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"increaseLiquidity\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"result\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token0\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"token1\",\r\n                        type: \"address\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint24\",\r\n                        name: \"fee\",\r\n                        type: \"uint24\",\r\n                    },\r\n                    {\r\n                        internalType: \"int24\",\r\n                        name: \"tickLower\",\r\n                        type: \"int24\",\r\n                    },\r\n                    {\r\n                        internalType: \"int24\",\r\n                        name: \"tickUpper\",\r\n                        type: \"int24\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amount0Min\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"amount1Min\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"address\",\r\n                        name: \"recipient\",\r\n                        type: \"address\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IApproveAndCall.MintParams\",\r\n                name: \"params\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        name: \"mint\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"result\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"previousBlockhash\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"data\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        name: \"multicall\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"deadline\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"data\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        name: \"multicall\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"data\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        name: \"multicall\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bytes[]\",\r\n                name: \"results\",\r\n                type: \"bytes[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"positionManager\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"pull\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"refundETH\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"deadline\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"v\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"r\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"s\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"selfPermit\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"nonce\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"expiry\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"v\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"r\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"s\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"selfPermitAllowed\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"nonce\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"expiry\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"v\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"r\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"s\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"selfPermitAllowedIfNecessary\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"deadline\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"v\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"r\",\r\n                type: \"bytes32\",\r\n            },\r\n            {\r\n                internalType: \"bytes32\",\r\n                name: \"s\",\r\n                type: \"bytes32\",\r\n            },\r\n        ],\r\n        name: \"selfPermitIfNecessary\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOutMin\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address[]\",\r\n                name: \"path\",\r\n                type: \"address[]\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"swapExactTokensForTokens\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountOut\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountInMax\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address[]\",\r\n                name: \"path\",\r\n                type: \"address[]\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"swapTokensForExactTokens\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountIn\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"sweepToken\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"sweepToken\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeBips\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"feeRecipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"sweepTokenWithFee\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"token\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeBips\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"feeRecipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"sweepTokenWithFee\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"int256\",\r\n                name: \"amount0Delta\",\r\n                type: \"int256\",\r\n            },\r\n            {\r\n                internalType: \"int256\",\r\n                name: \"amount1Delta\",\r\n                type: \"int256\",\r\n            },\r\n            {\r\n                internalType: \"bytes\",\r\n                name: \"_data\",\r\n                type: \"bytes\",\r\n            },\r\n        ],\r\n        name: \"uniswapV3SwapCallback\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"unwrapWETH9\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"unwrapWETH9\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeBips\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"feeRecipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"unwrapWETH9WithFee\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amountMinimum\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeBips\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"feeRecipient\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"unwrapWETH9WithFee\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"wrapETH\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        stateMutability: \"payable\",\r\n        type: \"receive\",\r\n    },\r\n];\r\nconst _bytecode = \"\";\r\nexport class SwapRouter02__factory extends ContractFactory {\r\n    constructor(signer) {\r\n        super(_abi, _bytecode, signer);\r\n    }\r\n    deploy(_factoryV2, factoryV3, _positionManager, _WETH9, overrides) {\r\n        return super.deploy(_factoryV2, factoryV3, _positionManager, _WETH9, overrides || {});\r\n    }\r\n    getDeployTransaction(_factoryV2, factoryV3, _positionManager, _WETH9, overrides) {\r\n        return super.getDeployTransaction(_factoryV2, factoryV3, _positionManager, _WETH9, overrides || {});\r\n    }\r\n    attach(address) {\r\n        return super.attach(address);\r\n    }\r\n    connect(signer) {\r\n        return super.connect(signer);\r\n    }\r\n    static createInterface() {\r\n        return new utils.Interface(_abi);\r\n    }\r\n    static connect(address, signerOrProvider) {\r\n        return new Contract(address, _abi, signerOrProvider);\r\n    }\r\n}\r\nSwapRouter02__factory.bytecode = _bytecode;\r\nSwapRouter02__factory.abi = _abi;\r\n//# sourceMappingURL=data:application/json;base64,","import { SwapRouter02__factory } from '../types/other/factories/SwapRouter02__factory';\r\nimport { log, SWAP_ROUTER_02_ADDRESSES } from '../util';\r\nexport class SwapRouterProvider {\r\n    constructor(multicall2Provider, chainId) {\r\n        this.multicall2Provider = multicall2Provider;\r\n        this.chainId = chainId;\r\n    }\r\n    async getApprovalType(tokenInAmount, tokenOutAmount) {\r\n        var _a, _b;\r\n        const functionParams = [\r\n            [\r\n                tokenInAmount.currency.wrapped.address,\r\n                tokenInAmount.quotient.toString(),\r\n            ],\r\n            [\r\n                tokenOutAmount.currency.wrapped.address,\r\n                tokenOutAmount.quotient.toString(),\r\n            ],\r\n        ];\r\n        const tx = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({\r\n            address: SWAP_ROUTER_02_ADDRESSES(this.chainId),\r\n            contractInterface: SwapRouter02__factory.createInterface(),\r\n            functionName: 'getApprovalType',\r\n            functionParams,\r\n        });\r\n        if (!((_a = tx.results[0]) === null || _a === void 0 ? void 0 : _a.success) || !((_b = tx.results[1]) === null || _b === void 0 ? void 0 : _b.success)) {\r\n            log.info({ results: tx.results }, 'Failed to get approval type from swap router for token in or token out');\r\n            throw new Error('Failed to get approval type from swap router for token in or token out');\r\n        }\r\n        const { result: approvalTokenIn } = tx.results[0];\r\n        const { result: approvalTokenOut } = tx.results[1];\r\n        return {\r\n            approvalTokenIn: approvalTokenIn[0],\r\n            approvalTokenOut: approvalTokenOut[0],\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcC1yb3V0ZXItcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3N3YXAtcm91dGVyLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBVyxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUE2QmpFLE1BQU0sT0FBTyxrQkFBa0I7SUFDN0IsWUFDWSxrQkFBc0MsRUFDdEMsT0FBZ0I7UUFEaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxZQUFPLEdBQVAsT0FBTyxDQUFTO0lBQ3pCLENBQUM7SUFFRyxLQUFLLENBQUMsZUFBZSxDQUMxQixhQUF1QyxFQUN2QyxjQUF3Qzs7UUFFeEMsTUFBTSxjQUFjLEdBQXVCO1lBQ3pDO2dCQUNFLGFBQWEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU87Z0JBQ3RDLGFBQWEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFO2FBQ2xDO1lBQ0Q7Z0JBQ0UsY0FBYyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTztnQkFDdkMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUU7YUFDbkM7U0FDRixDQUFDO1FBRUYsTUFBTSxFQUFFLEdBQ04sTUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsNENBQTRDLENBR3hFO1lBQ0EsT0FBTyxFQUFFLHdCQUF3QixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDL0MsaUJBQWlCLEVBQUUscUJBQXFCLENBQUMsZUFBZSxFQUFFO1lBQzFELFlBQVksRUFBRSxpQkFBaUI7WUFDL0IsY0FBYztTQUNmLENBQUMsQ0FBQztRQUVMLElBQUksQ0FBQyxDQUFBLE1BQUEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsMENBQUUsT0FBTyxDQUFBLElBQUksQ0FBQyxDQUFBLE1BQUEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsMENBQUUsT0FBTyxDQUFBLEVBQUU7WUFDdEQsR0FBRyxDQUFDLElBQUksQ0FDTixFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQ3ZCLHdFQUF3RSxDQUN6RSxDQUFDO1lBQ0YsTUFBTSxJQUFJLEtBQUssQ0FDYix3RUFBd0UsQ0FDekUsQ0FBQztTQUNIO1FBRUQsTUFBTSxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXBELE9BQU87WUFDTCxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUNuQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7U0FDdEMsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","/**\r\n * CacheMode enum that controls the way that the RouteCachingProvider works.\r\n * - *Livemode*:   This mode will set materialized routes into cache and fetch routes from cache.\r\n *                 If the route exists in cache, it will be quoted and returned, otherwise it will materialized.\r\n * - *Darkmode*:   This mode indicates that the cache will not be used, it will not be inserted nor fetched.\r\n *                 Routes will always be materialized.\r\n * - *Tapcompare*: In this mode we will insert and fetch routes to/from cache, and we will also materialize the route.\r\n *                 Ultimately the materialized route will be returned, but we will log some metrics comparing both.\r\n *\r\n * @enum {string}\r\n */\r\nexport var CacheMode;\r\n(function (CacheMode) {\r\n    CacheMode[\"Livemode\"] = \"livemode\";\r\n    CacheMode[\"Darkmode\"] = \"darkmode\";\r\n    CacheMode[\"Tapcompare\"] = \"tapcompare\";\r\n})(CacheMode || (CacheMode = {}));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbW9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZS1tb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLENBQU4sSUFBWSxTQUlYO0FBSkQsV0FBWSxTQUFTO0lBQ25CLGtDQUFxQixDQUFBO0lBQ3JCLGtDQUFxQixDQUFBO0lBQ3JCLHNDQUF5QixDQUFBO0FBQzNCLENBQUMsRUFKVyxTQUFTLEtBQVQsU0FBUyxRQUlwQiJ9","import retry from 'async-retry';\r\nimport Timeout from 'await-timeout';\r\nimport axios from 'axios';\r\nimport { log } from '../util/log';\r\n/**\r\n * Gets subgraph pools from a URI. The URI shoudl contain a JSON\r\n * stringified array of V2SubgraphPool objects or V3SubgraphPool\r\n * objects.\r\n *\r\n * @export\r\n * @class URISubgraphProvider\r\n * @template TSubgraphPool\r\n */\r\nexport class URISubgraphProvider {\r\n    constructor(chainId, uri, timeout = 6000, retries = 2) {\r\n        this.chainId = chainId;\r\n        this.uri = uri;\r\n        this.timeout = timeout;\r\n        this.retries = retries;\r\n    }\r\n    async getPools() {\r\n        log.info({ uri: this.uri }, `About to get subgraph pools from URI ${this.uri}`);\r\n        let allPools = [];\r\n        await retry(async () => {\r\n            const timeout = new Timeout();\r\n            const timerPromise = timeout.set(this.timeout).then(() => {\r\n                throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\r\n            });\r\n            let response;\r\n            /* eslint-disable no-useless-catch */\r\n            try {\r\n                response = await Promise.race([axios.get(this.uri), timerPromise]);\r\n            }\r\n            catch (err) {\r\n                throw err;\r\n            }\r\n            finally {\r\n                timeout.clear();\r\n            }\r\n            /* eslint-enable no-useless-catch */\r\n            const { data: poolsBuffer, status } = response;\r\n            if (status != 200) {\r\n                log.error({ response }, `Unabled to get pools from ${this.uri}.`);\r\n                throw new Error(`Unable to get pools from ${this.uri}`);\r\n            }\r\n            const pools = poolsBuffer;\r\n            log.info({ uri: this.uri, chain: this.chainId }, `Got subgraph pools from uri. Num: ${pools.length}`);\r\n            allPools = pools;\r\n        }, {\r\n            retries: this.retries,\r\n            onRetry: (err, retry) => {\r\n                log.info({ err }, `Failed to get pools from uri ${this.uri}. Retry attempt: ${retry}`);\r\n            },\r\n        });\r\n        return allPools;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJpLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy91cmktc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE1BQU0sYUFBYSxDQUFDO0FBQ2hDLE9BQU8sT0FBTyxNQUFNLGVBQWUsQ0FBQztBQUNwQyxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFHMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUtsQzs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sT0FBTyxtQkFBbUI7SUFHOUIsWUFDVSxPQUFnQixFQUNoQixHQUFXLEVBQ1gsVUFBVSxJQUFJLEVBQ2QsVUFBVSxDQUFDO1FBSFgsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1gsWUFBTyxHQUFQLE9BQU8sQ0FBTztRQUNkLFlBQU8sR0FBUCxPQUFPLENBQUk7SUFDbEIsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRO1FBQ25CLEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUNqQix3Q0FBd0MsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUNuRCxDQUFDO1FBRUYsSUFBSSxRQUFRLEdBQW9CLEVBQUUsQ0FBQztRQUVuQyxNQUFNLEtBQUssQ0FDVCxLQUFLLElBQUksRUFBRTtZQUNULE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7WUFDOUIsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtnQkFDdkQsTUFBTSxJQUFJLEtBQUssQ0FDYiwwQ0FBMEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUN6RCxDQUFDO1lBQ0osQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLFFBQVEsQ0FBQztZQUViLHFDQUFxQztZQUNyQyxJQUFJO2dCQUNGLFFBQVEsR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO2FBQ3BFO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osTUFBTSxHQUFHLENBQUM7YUFDWDtvQkFBUztnQkFDUixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDakI7WUFDRCxvQ0FBb0M7WUFFcEMsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDO1lBRS9DLElBQUksTUFBTSxJQUFJLEdBQUcsRUFBRTtnQkFDakIsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLDZCQUE2QixJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFFbEUsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7YUFDekQ7WUFFRCxNQUFNLEtBQUssR0FBRyxXQUE4QixDQUFDO1lBRTdDLEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUN0QyxxQ0FBcUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUNwRCxDQUFDO1lBRUYsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUNuQixDQUFDLEVBQ0Q7WUFDRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDckIsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO2dCQUN0QixHQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsR0FBRyxFQUFFLEVBQ1AsZ0NBQWdDLElBQUksQ0FBQyxHQUFHLG9CQUFvQixLQUFLLEVBQUUsQ0FDcEUsQ0FBQztZQUNKLENBQUM7U0FDRixDQUNGLENBQUM7UUFFRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YifQ==","/**\r\n * Class defining the route to cache\r\n *\r\n * @export\r\n * @class CachedRoute\r\n */\r\nexport class CachedRoute {\r\n    /**\r\n     * @param route\r\n     * @param percent\r\n     */\r\n    constructor({ route, percent }) {\r\n        this.route = route;\r\n        this.percent = percent;\r\n    }\r\n    get protocol() {\r\n        return this.route.protocol;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBSXRCOzs7T0FHRztJQUNILFlBQVksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUE0QjtRQUN0RCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDN0IsQ0FBQztDQUNGIn0=","import _ from 'lodash';\r\nimport { CachedRoute } from './cached-route';\r\n/**\r\n * Class defining the route to cache\r\n *\r\n * @export\r\n * @class CachedRoute\r\n */\r\nexport class CachedRoutes {\r\n    /**\r\n     * @param routes\r\n     * @param chainId\r\n     * @param tokenIn\r\n     * @param tokenOut\r\n     * @param protocolsCovered\r\n     * @param blockNumber\r\n     * @param tradeType\r\n     * @param blocksToLive\r\n     */\r\n    constructor({ routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, blocksToLive = 0 }) {\r\n        this.routes = routes;\r\n        this.chainId = chainId;\r\n        this.tokenIn = tokenIn;\r\n        this.tokenOut = tokenOut;\r\n        this.protocolsCovered = protocolsCovered;\r\n        this.blockNumber = blockNumber;\r\n        this.tradeType = tradeType;\r\n        this.blocksToLive = blocksToLive;\r\n    }\r\n    /**\r\n     * Factory method that creates a `CachedRoutes` object from an array of RouteWithValidQuote.\r\n     *\r\n     * @public\r\n     * @static\r\n     * @param routes\r\n     * @param chainId\r\n     * @param tokenIn\r\n     * @param tokenOut\r\n     * @param protocolsCovered\r\n     * @param blockNumber\r\n     * @param tradeType\r\n     */\r\n    static fromRoutesWithValidQuotes(routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType) {\r\n        if (routes.length == 0)\r\n            return undefined;\r\n        const cachedRoutes = _.map(routes, (route) => new CachedRoute({ route: route.route, percent: route.percent }));\r\n        return new CachedRoutes({\r\n            routes: cachedRoutes,\r\n            chainId: chainId,\r\n            tokenIn: tokenIn,\r\n            tokenOut: tokenOut,\r\n            protocolsCovered: protocolsCovered,\r\n            blockNumber: blockNumber,\r\n            tradeType: tradeType\r\n        });\r\n    }\r\n    /**\r\n     * Function to determine if, given a block number, the CachedRoute is expired or not.\r\n     *\r\n     * @param currentBlockNumber\r\n     */\r\n    notExpired(currentBlockNumber) {\r\n        return (currentBlockNumber - this.blockNumber) <= this.blocksToLive;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUt2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFhN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVd2Qjs7Ozs7Ozs7O09BU0c7SUFDSCxZQUNFLEVBQ0UsTUFBTSxFQUNOLE9BQU8sRUFDUCxPQUFPLEVBQ1AsUUFBUSxFQUNSLGdCQUFnQixFQUNoQixXQUFXLEVBQ1gsU0FBUyxFQUNULFlBQVksR0FBRyxDQUFDLEVBQ0c7UUFFckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7O09BWUc7SUFDSSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLE1BQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQTRCLEVBQzVCLFdBQW1CLEVBQ25CLFNBQW9CO1FBRXBCLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFFekMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUUsQ0FDaEUsSUFBSSxXQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ2hFLENBQUM7UUFFRixPQUFPLElBQUksWUFBWSxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLGdCQUFnQixFQUFFLGdCQUFnQjtZQUNsQyxXQUFXLEVBQUUsV0FBVztZQUN4QixTQUFTLEVBQUUsU0FBUztTQUNyQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFVBQVUsQ0FBQyxrQkFBMEI7UUFDMUMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RFLENBQUM7Q0FDRiJ9","import { TradeType } from '@uniswap/sdk-core';\r\nimport { CacheMode } from './model';\r\n/**\r\n * Abstract class for a RouteCachingProvider.\r\n * Defines the base methods of how to interact with this interface, but not the implementation of how to cache.\r\n */\r\nexport class IRouteCachingProvider {\r\n    constructor() {\r\n        /**\r\n         * Final implementation of the public `getCachedRoute` method, this is how code will interact with the implementation\r\n         *\r\n         * @public\r\n         * @readonly\r\n         * @param chainId\r\n         * @param amount\r\n         * @param quoteToken\r\n         * @param tradeType\r\n         * @param protocols\r\n         * @param blockNumber\r\n         */\r\n        this.getCachedRoute = async (// Defined as a readonly member instead of a regular function to make it final.\r\n        chainId, amount, quoteToken, tradeType, protocols, blockNumber) => {\r\n            if (await this.getCacheMode(chainId, amount, quoteToken, tradeType, protocols) == CacheMode.Darkmode) {\r\n                return undefined;\r\n            }\r\n            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols);\r\n            return this.filterExpiredCachedRoutes(cachedRoute, blockNumber);\r\n        };\r\n        /**\r\n         * Final implementation of the public `setCachedRoute` method.\r\n         * This method will set the blockToLive in the CachedRoutes object before calling the internal method to insert in cache.\r\n         *\r\n         * @public\r\n         * @readonly\r\n         * @param cachedRoutes The route to cache.\r\n         * @returns Promise<boolean> Indicates if the route was inserted into cache.\r\n         */\r\n        this.setCachedRoute = async (// Defined as a readonly member instead of a regular function to make it final.\r\n        cachedRoutes, amount) => {\r\n            if (await this.getCacheModeFromCachedRoutes(cachedRoutes, amount) == CacheMode.Darkmode) {\r\n                return false;\r\n            }\r\n            cachedRoutes.blocksToLive = await this._getBlocksToLive(cachedRoutes, amount);\r\n            return this._setCachedRoute(cachedRoutes, amount);\r\n        };\r\n    }\r\n    /**\r\n     * Returns the CacheMode for the given cachedRoutes and amount\r\n     *\r\n     * @param cachedRoutes\r\n     * @param amount\r\n     */\r\n    getCacheModeFromCachedRoutes(cachedRoutes, amount) {\r\n        const quoteToken = cachedRoutes.tradeType == TradeType.EXACT_INPUT ? cachedRoutes.tokenOut : cachedRoutes.tokenIn;\r\n        return this.getCacheMode(cachedRoutes.chainId, amount, quoteToken, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);\r\n    }\r\n    filterExpiredCachedRoutes(cachedRoutes, blockNumber) {\r\n        return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber)) ? cachedRoutes : undefined;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFBbUMsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFJL0UsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUdwQzs7O0dBR0c7QUFDSCxNQUFNLE9BQWdCLHFCQUFxQjtJQUEzQztRQUNFOzs7Ozs7Ozs7OztXQVdHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILE9BQWUsRUFDZixNQUFnQyxFQUNoQyxVQUFpQixFQUNqQixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNnQixFQUFFO1lBQ3JDLElBQUksTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUNwRyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFbEcsT0FBTyxJQUFJLENBQUMseUJBQXlCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUFJLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUN2RixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsWUFBWSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFOUUsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7SUF3RkosQ0FBQztJQXRGQzs7Ozs7T0FLRztJQUNJLDRCQUE0QixDQUNqQyxZQUEwQixFQUMxQixNQUFnQztRQUVoQyxNQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUM7UUFFbEgsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUN0QixZQUFZLENBQUMsT0FBTyxFQUNwQixNQUFNLEVBQ04sVUFBVSxFQUNWLFlBQVksQ0FBQyxTQUFTLEVBQ3RCLFlBQVksQ0FBQyxnQkFBZ0IsQ0FDOUIsQ0FBQztJQUNKLENBQUM7SUFxQk8seUJBQXlCLENBQy9CLFlBQXNDLEVBQ3RDLFdBQW1CO1FBRW5CLE9BQU8sQ0FBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUUsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUMxRSxDQUFDO0NBeUNGIn0=","import _ from 'lodash';\r\nimport { log } from '../../util/log';\r\n/**\r\n * Provider for getting V2 pools, with functionality for caching the results per block.\r\n *\r\n * @export\r\n * @class CachingV2PoolProvider\r\n */\r\nexport class CachingV2PoolProvider {\r\n    /**\r\n     * Creates an instance of CachingV3PoolProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param poolProvider The provider to use to get the pools when not in the cache.\r\n     * @param cache Cache instance to hold cached pools.\r\n     */\r\n    constructor(chainId, poolProvider, \r\n    // Cache is block aware. For V2 pools we need to use the current blocks reserves values since\r\n    // we compute quotes off-chain.\r\n    // If no block is specified in the call to getPools we just return whatever is in the cache.\r\n    cache) {\r\n        this.chainId = chainId;\r\n        this.poolProvider = poolProvider;\r\n        this.cache = cache;\r\n        this.POOL_KEY = (chainId, address) => `pool-${chainId}-${address}`;\r\n    }\r\n    async getPools(tokenPairs, providerConfig) {\r\n        const poolAddressSet = new Set();\r\n        const poolsToGetTokenPairs = [];\r\n        const poolsToGetAddresses = [];\r\n        const poolAddressToPool = {};\r\n        const blockNumber = await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber);\r\n        for (const [tokenA, tokenB] of tokenPairs) {\r\n            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                continue;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            const cachedPool = await this.cache.get(this.POOL_KEY(this.chainId, poolAddress));\r\n            if (cachedPool) {\r\n                // If a block was specified by the caller, ensure that the result in our cache matches the\r\n                // expected block number. If a block number is not specified, just return whatever is in the\r\n                // cache.\r\n                if (!blockNumber || (blockNumber && cachedPool.block == blockNumber)) {\r\n                    poolAddressToPool[poolAddress] = cachedPool.pair;\r\n                    continue;\r\n                }\r\n            }\r\n            poolsToGetTokenPairs.push([token0, token1]);\r\n            poolsToGetAddresses.push(poolAddress);\r\n        }\r\n        log.info({\r\n            poolsFound: _.map(Object.values(poolAddressToPool), (p) => p.token0.symbol + ' ' + p.token1.symbol),\r\n            poolsToGetTokenPairs: _.map(poolsToGetTokenPairs, (t) => t[0].symbol + ' ' + t[1].symbol),\r\n        }, `Found ${Object.keys(poolAddressToPool).length} V2 pools already in local cache for block ${blockNumber}. About to get reserves for ${poolsToGetTokenPairs.length} pools.`);\r\n        if (poolsToGetAddresses.length > 0) {\r\n            const poolAccessor = await this.poolProvider.getPools(poolsToGetTokenPairs, providerConfig);\r\n            for (const address of poolsToGetAddresses) {\r\n                const pool = poolAccessor.getPoolByAddress(address);\r\n                if (pool) {\r\n                    poolAddressToPool[address] = pool;\r\n                    await this.cache.set(this.POOL_KEY(this.chainId, address), {\r\n                        pair: pool,\r\n                        block: blockNumber,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            getPool: (tokenA, tokenB) => {\r\n                const { poolAddress } = this.getPoolAddress(tokenA, tokenB);\r\n                return poolAddressToPool[poolAddress];\r\n            },\r\n            getPoolByAddress: (address) => poolAddressToPool[address],\r\n            getAllPools: () => Object.values(poolAddressToPool),\r\n        };\r\n    }\r\n    getPoolAddress(tokenA, tokenB) {\r\n        return this.poolProvider.getPoolAddress(tokenA, tokenB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBR3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU1yQzs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxxQkFBcUI7SUFJaEM7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLFlBQTZCO0lBQ3ZDLDZGQUE2RjtJQUM3RiwrQkFBK0I7SUFDL0IsNEZBQTRGO0lBQ3BGLEtBQTZDO1FBTDNDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsaUJBQVksR0FBWixZQUFZLENBQWlCO1FBSS9CLFVBQUssR0FBTCxLQUFLLENBQXdDO1FBZi9DLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFlNUIsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQTRCLEVBQzVCLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQTBCLEVBQUUsQ0FBQztRQUN2RCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxXQUFXLENBQUEsQ0FBQztRQUV0RCxLQUFLLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLElBQUksVUFBVSxFQUFFO1lBQ3pDLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxH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","/**\r\n * Provider for getting V2 pools, with functionality for caching the results.\r\n *\r\n * @export\r\n * @class CachingV2SubgraphProvider\r\n */\r\nexport class CachingV2SubgraphProvider {\r\n    /**\r\n     * Creates an instance of CachingV2SubgraphProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.\r\n     * @param cache Cache instance to hold cached pools.\r\n     */\r\n    constructor(chainId, subgraphProvider, cache) {\r\n        this.chainId = chainId;\r\n        this.subgraphProvider = subgraphProvider;\r\n        this.cache = cache;\r\n        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-v2-${chainId}`;\r\n    }\r\n    async getPools() {\r\n        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));\r\n        if (cachedPools) {\r\n            return cachedPools;\r\n        }\r\n        const pools = await this.subgraphProvider.getPools();\r\n        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);\r\n        return pools;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFHcEM7Ozs7O09BS0c7SUFDSCxZQUNVLE9BQWdCLEVBQ2QsZ0JBQXFDLEVBQ3ZDLEtBQStCO1FBRi9CLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQTBCO1FBWGpDLGlCQUFZLEdBQUcsQ0FBQyxPQUFnQixFQUFFLEVBQUUsQ0FBQyxxQkFBcUIsT0FBTyxFQUFFLENBQUM7SUFZekUsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRO1FBQ25CLE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUxRSxJQUFJLFdBQVcsRUFBRTtZQUNmLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO1FBRUQsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFckQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU3RCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRiJ9","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { TradeType } from '@uniswap/sdk-core';\r\nimport { InsufficientInputAmountError, InsufficientReservesError, } from '@uniswap/v2-sdk';\r\nimport { log } from '../../util/log';\r\nimport { routeToString } from '../../util/routes';\r\n/**\r\n * Computes quotes for V2 off-chain. Quotes are computed using the balances\r\n * of the pools within each route provided.\r\n *\r\n * @export\r\n * @class V2QuoteProvider\r\n */\r\nexport class V2QuoteProvider {\r\n    /* eslint-disable @typescript-eslint/no-empty-function */\r\n    constructor() { }\r\n    /* eslint-enable @typescript-eslint/no-empty-function */\r\n    async getQuotesManyExactIn(amountIns, routes) {\r\n        return this.getQuotes(amountIns, routes, TradeType.EXACT_INPUT);\r\n    }\r\n    async getQuotesManyExactOut(amountOuts, routes) {\r\n        return this.getQuotes(amountOuts, routes, TradeType.EXACT_OUTPUT);\r\n    }\r\n    async getQuotes(amounts, routes, tradeType) {\r\n        const routesWithQuotes = [];\r\n        const debugStrs = [];\r\n        for (const route of routes) {\r\n            const amountQuotes = [];\r\n            let insufficientInputAmountErrorCount = 0;\r\n            let insufficientReservesErrorCount = 0;\r\n            for (const amount of amounts) {\r\n                try {\r\n                    if (tradeType == TradeType.EXACT_INPUT) {\r\n                        let outputAmount = amount.wrapped;\r\n                        for (const pair of route.pairs) {\r\n                            const [outputAmountNew] = pair.getOutputAmount(outputAmount);\r\n                            outputAmount = outputAmountNew;\r\n                        }\r\n                        amountQuotes.push({\r\n                            amount,\r\n                            quote: BigNumber.from(outputAmount.quotient.toString()),\r\n                        });\r\n                    }\r\n                    else {\r\n                        let inputAmount = amount.wrapped;\r\n                        for (let i = route.pairs.length - 1; i >= 0; i--) {\r\n                            const pair = route.pairs[i];\r\n                            [inputAmount] = pair.getInputAmount(inputAmount);\r\n                        }\r\n                        amountQuotes.push({\r\n                            amount,\r\n                            quote: BigNumber.from(inputAmount.quotient.toString()),\r\n                        });\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    // Can fail to get quotes, e.g. throws InsufficientReservesError or InsufficientInputAmountError.\r\n                    if (err instanceof InsufficientInputAmountError) {\r\n                        insufficientInputAmountErrorCount =\r\n                            insufficientInputAmountErrorCount + 1;\r\n                        amountQuotes.push({ amount, quote: null });\r\n                    }\r\n                    else if (err instanceof InsufficientReservesError) {\r\n                        insufficientReservesErrorCount = insufficientReservesErrorCount + 1;\r\n                        amountQuotes.push({ amount, quote: null });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                }\r\n            }\r\n            if (insufficientInputAmountErrorCount > 0 ||\r\n                insufficientReservesErrorCount > 0) {\r\n                debugStrs.push(`${[\r\n                    routeToString(route),\r\n                ]} Input: ${insufficientInputAmountErrorCount} Reserves: ${insufficientReservesErrorCount} }`);\r\n            }\r\n            routesWithQuotes.push([route, amountQuotes]);\r\n        }\r\n        if (debugStrs.length > 0) {\r\n            log.info({ debugStrs }, `Failed quotes for V2 routes`);\r\n        }\r\n        return {\r\n            routesWithQuotes,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVvdGUtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YyL3F1b3RlLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUNMLDRCQUE0QixFQUM1Qix5QkFBeUIsR0FDMUIsTUFBTSxpQkFBaUIsQ0FBQztBQUl6QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBc0JsRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sZUFBZTtJQUMxQix5REFBeUQ7SUFDekQsZ0JBQWUsQ0FBQztJQUNoQix3REFBd0Q7SUFFakQsS0FBSyxDQUFDLG9CQUFvQixDQUMvQixTQUEyQixFQUMzQixNQUFpQjtRQUVqQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVNLEtBQUssQ0FBQyxxQkFBcUIsQ0FDaEMsVUFBNEIsRUFDNUIsTUFBaUI7UUFFakIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTyxLQUFLLENBQUMsU0FBUyxDQUNyQixPQUF5QixFQUN6QixNQUFpQixFQUNqQixTQUFvQjtRQUVwQixNQUFNLGdCQUFnQixHQUF3QixFQUFFLENBQUM7UUFFakQsTUFBTSxTQUFTLEdBQWEsRUFBRSxDQUFDO1FBQy9CLEtBQUssTUFBTSxLQUFLLElBQUksTUFBTSxFQUFFO1lBQzFCLE1BQU0sWUFBWSxHQUFvQixFQUFF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","import { Pair } from '@uniswap/v2-sdk';\r\nimport _ from 'lodash';\r\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\r\nimport { log } from '../../util/log';\r\nimport { USDC_FUJI } from '../token-provider';\r\nconst BASES_TO_CHECK_TRADES_AGAINST = {\r\n    [ChainId.FUJI]: [USDC_FUJI],\r\n    [ChainId.AVAX]: [WRAPPED_NATIVE_CURRENCY[ChainId.AVAX]],\r\n};\r\n/**\r\n * Provider that does not get data from an external source and instead returns\r\n * a hardcoded list of Subgraph pools.\r\n *\r\n * Since the pools are hardcoded, the liquidity/price values are dummys and should not\r\n * be depended on.\r\n *\r\n * Useful for instances where other data sources are unavailable. E.g. subgraph not available.\r\n *\r\n * @export\r\n * @class StaticV2SubgraphProvider\r\n */\r\nexport class StaticV2SubgraphProvider {\r\n    constructor(chainId) {\r\n        this.chainId = chainId;\r\n    }\r\n    async getPools(tokenIn, tokenOut) {\r\n        log.info('In static subgraph provider for V2');\r\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\r\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\r\n        if (tokenIn && tokenOut) {\r\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\r\n        }\r\n        const pairs = _(basePairs)\r\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\r\n            .value();\r\n        const poolAddressSet = new Set();\r\n        const subgraphPools = _(pairs)\r\n            .map(([tokenA, tokenB]) => {\r\n            const poolAddress = Pair.getAddress(tokenA, tokenB);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                return undefined;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            const [token0, token1] = tokenA.sortsBefore(tokenB)\r\n                ? [tokenA, tokenB]\r\n                : [tokenB, tokenA];\r\n            return {\r\n                id: poolAddress,\r\n                liquidity: '100',\r\n                token0: {\r\n                    id: token0.address,\r\n                },\r\n                token1: {\r\n                    id: token1.address,\r\n                },\r\n                supply: 100,\r\n                reserve: 100,\r\n                reserveUSD: 100,\r\n            };\r\n        })\r\n            .compact()\r\n            .value();\r\n        return subgraphPools;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxTQUFTLEVBQ1YsTUFBTSxtQkFBbUIsQ0FBQztBQVEzQixNQUFNLDZCQUE2QixHQUFtQjtJQUNwRCxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUMzQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUN4RCxDQUFDO0FBRUY7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DLFlBQW9CLE9BQWdCO1FBQWhCLFlBQU8sR0FBUCxPQUFPLENBQVM7SUFBSSxDQUFDO0lBRWxDLEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQjtRQUVoQixHQUFHLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxLQUFLLEdBQUcsNkJBQTZCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFELE1BQU0sU0FBUyxHQUFxQixDQUFDLENBQUMsT0FBTyxDQUMzQyxLQUFLLEVBQ0wsQ0FBQyxJQUFJLEVBQW9CLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUN4RSxDQUFDO1FBRUYsSUFBSSxPQUFPLElBQUksUUFBUSxFQUFFO1lBQ3ZCLFNBQVMsQ0FBQyxJQUFJLENBQ1osQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLEVBQ25CLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBa0IsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQ3ZELEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBa0IsRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQ3pELENBQUM7U0FDSDtRQUVELE1BQU0sS0FBSyxHQUFxQixDQUFDLENBQUMsU0FBUyxDQUFDO2FBQ3pDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sRUFBNEIsRUFBRSxDQUMzQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNoQzthQUNBLE1BQU0sQ0FDTCxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FDbkIsTUFBTSxDQUFDLE9BQU8sS0FBSyxNQUFNLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FDOUQ7YUFDQSxLQUFLLEVBQUUsQ0FBQztRQUVYLE1BQU0sY0FBYyxHQUFHLElBQUksR0FBRyxFQUFVLENBQUM7UUFFekMsTUFBTSxhQUFhLEdBQXFCLENBQUMsQ0FBQyxLQUFLLENBQUM7YUFDN0MsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRTtZQUN4QixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztZQUVwRCxJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUU7Z0JBQ25DLE9BQU8sU0FBUyxDQUFDO2FBQ2xCO1lBQ0QsY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUVoQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO2dCQUNqRCxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDO2dCQUNsQixDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFckIsT0FBTztnQkFDTCxFQUFFLEVBQUUsV0FBVztnQkFDZixTQUFTLEVBQUUsS0FBSztnQkFDaEIsTUFBTSxFQUFFO29CQUNOLEVBQUUsRUFBRSxNQUFNLENBQUMsT0FBTztpQkFDbkI7Z0JBQ0QsTUFBTSxFQUFFO29CQUNOLEVBQUUsRUFBRSxNQUFNLENBQUMsT0FBTztpQkFDbkI7Z0JBQ0QsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsT0FBTyxFQUFFLEdBQUc7Z0JBQ1osVUFBVSxFQUFFLEdBQUc7YUFDaEIsQ0FBQztRQUNKLENBQUMsQ0FBQzthQUNELE9BQU8sRUFBRTthQUNULEtBQUssRUFBRSxDQUFDO1FBRVgsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztDQUNGIn0=","import { log } from '../../util';\r\n/**\r\n * Provider for getting V2 subgraph pools that falls back to a different provider\r\n * in the event of failure.\r\n *\r\n * @export\r\n * @class V2SubgraphProviderWithFallBacks\r\n */\r\nexport class V2SubgraphProviderWithFallBacks {\r\n    /**\r\n     * Creates an instance of V2SubgraphProviderWithFallBacks.\r\n     * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.\r\n     */\r\n    constructor(fallbacks) {\r\n        this.fallbacks = fallbacks;\r\n    }\r\n    async getPools(tokenIn, tokenOut, providerConfig) {\r\n        for (let i = 0; i < this.fallbacks.length; i++) {\r\n            const provider = this.fallbacks[i];\r\n            try {\r\n                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\r\n                return pools;\r\n            }\r\n            catch (err) {\r\n                log.info(`Failed to get subgraph pools for V2 from fallback #${i}`);\r\n            }\r\n        }\r\n        throw new Error('Failed to get subgraph pools from any providers');\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUM7OztPQUdHO0lBQ0gsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9","import retry from 'async-retry';\r\nimport Timeout from 'await-timeout';\r\nimport { gql, GraphQLClient } from 'graphql-request';\r\nimport _ from 'lodash';\r\nimport { ChainId } from '../../util/chains';\r\nimport { log } from '../../util/log';\r\nconst SUBGRAPH_URL_BY_CHAIN = {\r\n    [ChainId.FUJI]: 'https://api.thegraph.com/subgraphs/name/sussyswap/sussyswap-fuji-subgraph'\r\n};\r\nconst threshold = 0.025;\r\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\r\nexport class V2SubgraphProvider {\r\n    constructor(chainId, retries = 2, timeout = 360000, rollback = true, pageSize = PAGE_SIZE) {\r\n        this.chainId = chainId;\r\n        this.retries = retries;\r\n        this.timeout = timeout;\r\n        this.rollback = rollback;\r\n        this.pageSize = pageSize;\r\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\r\n        if (!subgraphUrl) {\r\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\r\n        }\r\n        this.client = new GraphQLClient(subgraphUrl);\r\n    }\r\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\r\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? await providerConfig.blockNumber\r\n            : undefined;\r\n        // Due to limitations with the Subgraph API this is the only way to parameterize the query.\r\n        const query2 = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pairs(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 { id, symbol }\n          token1 { id, symbol }\n          totalSupply\n          trackedReserveETH\n          reserveUSD\n        }\n      }\n    `;\r\n        let pools = [];\r\n        log.info(`Getting V2 pools from the subgraph with page size ${this.pageSize}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\r\n            : ''}.`);\r\n        await retry(async () => {\r\n            const timeout = new Timeout();\r\n            const getPools = async () => {\r\n                let lastId = '';\r\n                let pairs = [];\r\n                let pairsPage = [];\r\n                do {\r\n                    await retry(async () => {\r\n                        const poolsResult = await this.client.request(query2, {\r\n                            pageSize: this.pageSize,\r\n                            id: lastId,\r\n                        });\r\n                        pairsPage = poolsResult.pairs;\r\n                        pairs = pairs.concat(pairsPage);\r\n                        lastId = pairs[pairs.length - 1].id;\r\n                    }, {\r\n                        retries: this.retries,\r\n                        onRetry: (err, retry) => {\r\n                            pools = [];\r\n                            log.info({ err }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}`);\r\n                        },\r\n                    });\r\n                } while (pairsPage.length > 0);\r\n                return pairs;\r\n            };\r\n            /* eslint-disable no-useless-catch */\r\n            try {\r\n                const getPoolsPromise = getPools();\r\n                const timerPromise = timeout.set(this.timeout).then(() => {\r\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\r\n                });\r\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\r\n                return;\r\n            }\r\n            catch (err) {\r\n                throw err;\r\n            }\r\n            finally {\r\n                timeout.clear();\r\n            }\r\n            /* eslint-enable no-useless-catch */\r\n        }, {\r\n            retries: this.retries,\r\n            onRetry: (err, retry) => {\r\n                if (this.rollback &&\r\n                    blockNumber &&\r\n                    _.includes(err.message, 'indexed up to')) {\r\n                    blockNumber = blockNumber - 10;\r\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\r\n                }\r\n                pools = [];\r\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\r\n            },\r\n        });\r\n        // Filter pools that have tracked reserve ETH less than threshold.\r\n        // trackedReserveETH filters pools that do not involve a pool from this allowlist:\r\n        // https://github.com/Uniswap/v2-subgraph/blob/7c82235cad7aee4cfce8ea82f0030af3d224833e/src/mappings/pricing.ts#L43\r\n        // Which helps filter pools with manipulated prices/liquidity.\r\n        // TODO: Remove. Temporary fix to ensure tokens without trackedReserveETH are in the list.\r\n        const FEI = '0x956f47f50a910163d8bf957cf5846d573e7f87ca';\r\n        const poolsSanitized = pools\r\n            .filter((pool) => {\r\n            return (pool.token0.id == FEI ||\r\n                pool.token1.id == FEI ||\r\n                parseFloat(pool.trackedReserveETH) > threshold);\r\n        })\r\n            .map((pool) => {\r\n            return {\r\n                ...pool,\r\n                id: pool.id.toLowerCase(),\r\n                token0: {\r\n                    id: pool.token0.id.toLowerCase(),\r\n                },\r\n                token1: {\r\n                    id: pool.token1.id.toLowerCase(),\r\n                },\r\n                supply: parseFloat(pool.totalSupply),\r\n                reserve: parseFloat(pool.trackedReserveETH),\r\n                reserveUSD: parseFloat(pool.reserveUSD),\r\n            };\r\n        });\r\n        log.info(`Got ${pools.length} V2 pools from the subgraph. ${poolsSanitized.length} after filtering`);\r\n        return poolsSanitized;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YyL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQStCckMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsMkVBQTJFO0NBQzVGLENBQUM7QUFFRixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUM7QUFFeEIsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsK0NBQStDO0FBZ0J2RSxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLFlBQ1UsT0FBZ0IsRUFDaEIsVUFBVSxDQUFDLEVBQ1gsVUFBVSxNQUFNLEVBQ2hCLFdBQVcsSUFBSSxFQUNmLFdBQVcsU0FBUztRQUpwQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFDWCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQU87UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFZO1FBRTVCLE1BQU0sV0FBVyxHQUFHLHFCQUFxQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FB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","import _ from 'lodash';\r\nimport { log } from '../../util/log';\r\n/**\r\n * Provider for getting V3 pools, with functionality for caching the results.\r\n * Does not cache by block because we compute quotes using the on-chain quoter\r\n * so do not mind if the liquidity values are out of date.\r\n *\r\n * @export\r\n * @class CachingV3PoolProvider\r\n */\r\nexport class CachingV3PoolProvider {\r\n    /**\r\n     * Creates an instance of CachingV3PoolProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param poolProvider The provider to use to get the pools when not in the cache.\r\n     * @param cache Cache instance to hold cached pools.\r\n     */\r\n    constructor(chainId, poolProvider, cache) {\r\n        this.chainId = chainId;\r\n        this.poolProvider = poolProvider;\r\n        this.cache = cache;\r\n        this.POOL_KEY = (chainId, address) => `pool-${chainId}-${address}`;\r\n    }\r\n    async getPools(tokenPairs, providerConfig) {\r\n        const poolAddressSet = new Set();\r\n        const poolsToGetTokenPairs = [];\r\n        const poolsToGetAddresses = [];\r\n        const poolAddressToPool = {};\r\n        for (const [tokenA, tokenB, feeAmount] of tokenPairs) {\r\n            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB, feeAmount);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                continue;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            const cachedPool = await this.cache.get(this.POOL_KEY(this.chainId, poolAddress));\r\n            if (cachedPool) {\r\n                poolAddressToPool[poolAddress] = cachedPool;\r\n                continue;\r\n            }\r\n            poolsToGetTokenPairs.push([token0, token1, feeAmount]);\r\n            poolsToGetAddresses.push(poolAddress);\r\n        }\r\n        log.info({\r\n            poolsFound: _.map(Object.values(poolAddressToPool), (p) => `${p.token0.symbol} ${p.token1.symbol} ${p.fee}`),\r\n            poolsToGetTokenPairs: _.map(poolsToGetTokenPairs, (t) => `${t[0].symbol} ${t[1].symbol} ${t[2]}`),\r\n        }, `Found ${Object.keys(poolAddressToPool).length} V3 pools already in local cache. About to get liquidity and slot0s for ${poolsToGetTokenPairs.length} pools.`);\r\n        if (poolsToGetAddresses.length > 0) {\r\n            const poolAccessor = await this.poolProvider.getPools(poolsToGetTokenPairs, providerConfig);\r\n            for (const address of poolsToGetAddresses) {\r\n                const pool = poolAccessor.getPoolByAddress(address);\r\n                if (pool) {\r\n                    poolAddressToPool[address] = pool;\r\n                    await this.cache.set(this.POOL_KEY(this.chainId, address), pool);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            getPool: (tokenA, tokenB, feeAmount) => {\r\n                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);\r\n                return poolAddressToPool[poolAddress];\r\n            },\r\n            getPoolByAddress: (address) => poolAddressToPool[address],\r\n            getAllPools: () => Object.values(poolAddressToPool),\r\n        };\r\n    }\r\n    getPoolAddress(tokenA, tokenB, feeAmount) {\r\n        return this.poolProvider.getPoolAddress(tokenA, tokenB, feeAmount);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBR3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU1yQzs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQUloQzs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsWUFBNkIsRUFDL0IsS0FBbUI7UUFGakIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixpQkFBWSxHQUFaLFlBQVksQ0FBaUI7UUFDL0IsVUFBSyxHQUFMLEtBQUssQ0FBYztRQVpyQixhQUFRLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3ZELFFBQVEsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBWTVCLENBQUM7SUFFRyxLQUFLLENBQUMsUUFBUSxDQUNuQixVQUF1QyxFQUN2QyxjQUErQjtRQUUvQixNQUFNLGNBQWMsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCxNQUFNLG9CQUFvQixHQUFxQyxFQUFFLENBQUM7UUFDbEUsTUFBTSxtQkFBbUIsR0FBYSxFQUFFLENBQUM7UUFDekMsTUFBTSxpQkFBaUIsR0FBb0MsRUFBRSxDQUFDO1FBRTlELEtBQUssTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLElBQUksVUFBVSxFQUFFO1lBQ3BELE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ3pELE1BQU0sRUFDTixNQUFNLEVBQ04sU0FBUyxDQUNWLENBQUM7WUFFRixJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUU7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","/**\r\n * Provider for getting V3 pools, with functionality for caching the results.\r\n *\r\n * @export\r\n * @class CachingV3SubgraphProvider\r\n */\r\nexport class CachingV3SubgraphProvider {\r\n    /**\r\n     * Creates an instance of CachingV3SubgraphProvider.\r\n     * @param chainId The chain id to use.\r\n     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.\r\n     * @param cache Cache instance to hold cached pools.\r\n     */\r\n    constructor(chainId, subgraphProvider, cache) {\r\n        this.chainId = chainId;\r\n        this.subgraphProvider = subgraphProvider;\r\n        this.cache = cache;\r\n        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${chainId}`;\r\n    }\r\n    async getPools() {\r\n        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));\r\n        if (cachedPools) {\r\n            return cachedPools;\r\n        }\r\n        const pools = await this.subgraphProvider.getPools();\r\n        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);\r\n        return pools;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFHcEM7Ozs7O09BS0c7SUFDSCxZQUNVLE9BQWdCLEVBQ2QsZ0JBQXFDLEVBQ3ZDLEtBQStCO1FBRi9CLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQTBCO1FBWGpDLGlCQUFZLEdBQUcsQ0FBQyxPQUFnQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsT0FBTyxFQUFFLENBQUM7SUFZdEUsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRO1FBQ25CLE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUxRSxJQUFJLFdBQVcsRUFBRTtZQUNmLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO1FBRUQsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFckQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU3RCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRiJ9","import { FeeAmount, Pool } from '@uniswap/v3-sdk';\r\nimport JSBI from 'jsbi';\r\nimport _ from 'lodash';\r\nimport { unparseFeeAmount } from '../../util/amounts';\r\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\r\nimport { log } from '../../util/log';\r\nconst BASES_TO_CHECK_TRADES_AGAINST = {\r\n    [ChainId.FUJI]: [\r\n        WRAPPED_NATIVE_CURRENCY[ChainId.FUJI],\r\n    ],\r\n    [ChainId.AVAX]: [\r\n        WRAPPED_NATIVE_CURRENCY[ChainId.AVAX],\r\n    ],\r\n};\r\n/**\r\n * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.\r\n *\r\n * Since the pools are hardcoded and the data does not come from the Subgraph, the TVL values\r\n * are dummys and should not be depended on.\r\n *\r\n * Useful for instances where other data sources are unavailable. E.g. Subgraph not available.\r\n *\r\n * @export\r\n * @class StaticV3SubgraphProvider\r\n */\r\nexport class StaticV3SubgraphProvider {\r\n    constructor(chainId, poolProvider) {\r\n        this.chainId = chainId;\r\n        this.poolProvider = poolProvider;\r\n    }\r\n    async getPools(tokenIn, tokenOut) {\r\n        log.info('In static subgraph provider for V3');\r\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\r\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\r\n        if (tokenIn && tokenOut) {\r\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\r\n        }\r\n        const pairs = _(basePairs)\r\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\r\n            .flatMap(([tokenA, tokenB]) => {\r\n            return [\r\n                [tokenA, tokenB, FeeAmount.LOWEST],\r\n                [tokenA, tokenB, FeeAmount.LOW],\r\n                [tokenA, tokenB, FeeAmount.MEDIUM],\r\n                [tokenA, tokenB, FeeAmount.HIGH],\r\n            ];\r\n        })\r\n            .value();\r\n        log.info(`V3 Static subgraph provider about to get ${pairs.length} pools on-chain`);\r\n        const poolAccessor = await this.poolProvider.getPools(pairs);\r\n        const pools = poolAccessor.getAllPools();\r\n        const poolAddressSet = new Set();\r\n        const subgraphPools = _(pools)\r\n            .map((pool) => {\r\n            const { token0, token1, fee, liquidity } = pool;\r\n            const poolAddress = Pool.getAddress(pool.token0, pool.token1, pool.fee);\r\n            if (poolAddressSet.has(poolAddress)) {\r\n                return undefined;\r\n            }\r\n            poolAddressSet.add(poolAddress);\r\n            const liquidityNumber = JSBI.toNumber(liquidity);\r\n            return {\r\n                id: poolAddress,\r\n                feeTier: unparseFeeAmount(fee),\r\n                liquidity: liquidity.toString(),\r\n                token0: {\r\n                    id: token0.address,\r\n                },\r\n                token1: {\r\n                    id: token1.address,\r\n                },\r\n                // As a very rough proxy we just use liquidity for TVL.\r\n                tvlETH: liquidityNumber,\r\n                tvlUSD: liquidityNumber,\r\n            };\r\n        })\r\n            .compact()\r\n            .value();\r\n        return subgraphPools;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFZckMsTUFBTSw2QkFBNkIsR0FBbUI7SUFDcEQsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDZCx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFO0tBQ3ZDO0lBQ0QsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDZCx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFO0tBQ3ZDO0NBQ0YsQ0FBQztBQUVGOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DLFlBQ1UsT0FBZ0IsRUFDaEIsWUFBNkI7UUFEN0IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixpQkFBWSxHQUFaLFlBQVksQ0FBaUI7SUFDbkMsQ0FBQztJQUVFLEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQjtRQUVoQixHQUFHLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxLQUFLLEdBQUcsNkJBQTZCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFELE1BQU0sU0FB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","import { log } from '../../util';\r\n/**\r\n * Provider for getting V3 subgraph pools that falls back to a different provider\r\n * in the event of failure.\r\n *\r\n * @export\r\n * @class V3SubgraphProviderWithFallBacks\r\n */\r\nexport class V3SubgraphProviderWithFallBacks {\r\n    constructor(fallbacks) {\r\n        this.fallbacks = fallbacks;\r\n    }\r\n    async getPools(tokenIn, tokenOut, providerConfig) {\r\n        for (let i = 0; i < this.fallbacks.length; i++) {\r\n            const provider = this.fallbacks[i];\r\n            try {\r\n                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\r\n                return pools;\r\n            }\r\n            catch (err) {\r\n                log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);\r\n            }\r\n        }\r\n        throw new Error('Failed to get subgraph pools from any providers');\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUMsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9","import retry from 'async-retry';\r\nimport Timeout from 'await-timeout';\r\nimport { gql, GraphQLClient } from 'graphql-request';\r\nimport _ from 'lodash';\r\nimport { ChainId, log } from '../../util';\r\nexport const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;\r\nexport const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;\r\nconst SUBGRAPH_URL_BY_CHAIN = {\r\n    [ChainId.FUJI]: 'https://api.thegraph.com/subgraphs/name/sussyswap/sussyswap-fuji-subgraph',\r\n};\r\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\r\nexport class V3SubgraphProvider {\r\n    constructor(chainId, retries = 2, timeout = 30000, rollback = true) {\r\n        this.chainId = chainId;\r\n        this.retries = retries;\r\n        this.timeout = timeout;\r\n        this.rollback = rollback;\r\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\r\n        if (!subgraphUrl) {\r\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\r\n        }\r\n        this.client = new GraphQLClient(subgraphUrl);\r\n    }\r\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\r\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? await providerConfig.blockNumber\r\n            : undefined;\r\n        const query = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pools(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 {\n            symbol\n            id\n          }\n          token1 {\n            symbol\n            id\n          }\n          feeTier\n          liquidity\n          totalValueLockedUSD\n          totalValueLockedETH\n        }\n      }\n    `;\r\n        let pools = [];\r\n        log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\r\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\r\n            : ''}.`);\r\n        await retry(async () => {\r\n            const timeout = new Timeout();\r\n            const getPools = async () => {\r\n                let lastId = '';\r\n                let pools = [];\r\n                let poolsPage = [];\r\n                do {\r\n                    const poolsResult = await this.client.request(query, {\r\n                        pageSize: PAGE_SIZE,\r\n                        id: lastId,\r\n                    });\r\n                    poolsPage = poolsResult.pools;\r\n                    pools = pools.concat(poolsPage);\r\n                    lastId = pools[pools.length - 1].id;\r\n                } while (poolsPage.length > 0);\r\n                return pools;\r\n            };\r\n            /* eslint-disable no-useless-catch */\r\n            try {\r\n                const getPoolsPromise = getPools();\r\n                const timerPromise = timeout.set(this.timeout).then(() => {\r\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\r\n                });\r\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\r\n                return;\r\n            }\r\n            catch (err) {\r\n                throw err;\r\n            }\r\n            finally {\r\n                timeout.clear();\r\n            }\r\n            /* eslint-enable no-useless-catch */\r\n        }, {\r\n            retries: this.retries,\r\n            onRetry: (err, retry) => {\r\n                if (this.rollback &&\r\n                    blockNumber &&\r\n                    _.includes(err.message, 'indexed up to')) {\r\n                    blockNumber = blockNumber - 10;\r\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\r\n                }\r\n                pools = [];\r\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\r\n            },\r\n        });\r\n        const poolsSanitized = pools\r\n            .filter((pool) => parseInt(pool.liquidity) > 0 ||\r\n            parseFloat(pool.totalValueLockedETH) > 0.01)\r\n            .map((pool) => {\r\n            const { totalValueLockedETH, totalValueLockedUSD, ...rest } = pool;\r\n            return {\r\n                ...rest,\r\n                id: pool.id.toLowerCase(),\r\n                token0: {\r\n                    id: pool.token0.id.toLowerCase(),\r\n                },\r\n                token1: {\r\n                    id: pool.token1.id.toLowerCase(),\r\n                },\r\n                tvlETH: parseFloat(totalValueLockedETH),\r\n                tvlUSD: parseFloat(totalValueLockedUSD),\r\n            };\r\n        });\r\n        log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);\r\n        return poolsSanitized;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFrQzFDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUVsQyxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSwyRUFBMkU7Q0FDNUYsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLCtDQUErQztBQWdCdkUsTUFBTSxPQUFPLGtCQUFrQjtJQUc3QixZQUNVLE9BQWdCLEVBQ2hCLFVBQVUsQ0FBQyxFQUNYLFVBQVUsS0FBSyxFQUNmLFdBQVcsSUFBSTtRQUhmLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsWUFBTyxHQUFQLE9BQU8sQ0FBSTtRQUNYLFlBQU8sR0FBUCxPQUFP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","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { ChainId, StaticV2SubgraphProvider, AlphaRouter, routeAmountsToString } from '@sussyswap/smart-order-router';\nimport { Token, CurrencyAmount } from '@uniswap/sdk-core';\nimport { i as isExactInput, Q as QuoteState, S as SwapRouterNativeAssets, n as nativeOnChain } from './index-99f8215c.js';\nimport JSBI from 'jsbi';\nimport { Protocol } from '@uniswap/router-sdk';\nimport 'react';\nimport 'buffer';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/extends';\nimport 'styled-components';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport 'react-feather';\nimport 'polished';\nimport 'wcag-contrast';\nimport 'rebass';\nimport '@web3-react/core';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@sussyswap/universal-router-sdk';\nimport '@reduxjs/toolkit/query/react';\nimport 'jotai/immer';\nimport 'jotai/utils';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/possibleConstructorReturn';\nimport '@babel/runtime/helpers/getPrototypeOf';\nimport 'tiny-invariant';\nimport '@ethersproject/units';\nimport '@reduxjs/toolkit';\nimport 'jotai';\nimport '@uniswap/v2-sdk';\nimport '@uniswap/v3-sdk';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/get';\nimport '@babel/runtime/helpers/assertThisInitialized';\nimport '@babel/runtime/helpers/wrapNativeSuper';\nimport 'qs';\nimport '@ethersproject/abi';\nimport '@uniswap/redux-multicall';\nimport '@ethersproject/address';\nimport '@ethersproject/constants';\nimport '@ethersproject/contracts';\nimport '@uniswap/permit2-sdk';\nimport '@uniswap/conedison/provider/signing';\nimport '@uniswap/conedison/format';\nimport 'ethers/lib/utils';\nimport '@ethersproject/bytes';\nimport '@ethersproject/bignumber';\nimport '@ethersproject/strings';\nimport 'popper-max-size-modifier';\nimport 'react-dom';\nimport 'react-popper';\nimport '@ethersproject/hash';\nimport 'cids';\nimport 'multicodec';\nimport 'multihashes';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'wicg-inert';\nimport 'node-vibrant/lib/bundle.js';\nimport 'setimmediate';\nimport 'react-virtualized-auto-sizer';\nimport 'react-window';\nimport '@web3-react/walletconnect';\nimport 'qrcode';\nimport '@uniswap/conedison/provider/index';\nimport '@ethersproject/providers';\nimport '@web3-react/eip1193';\nimport '@web3-react/metamask';\nimport '@web3-react/network';\nimport '@web3-react/types';\nimport 'make-plural/plurals';\nimport 'react-redux';\nimport 'redux';\nimport 'resize-observer-polyfill';\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nfunction transformSwapRouteToGetQuoteResult(_ref) {\n  var quote = _ref.quote,\n    quoteGasAdjusted = _ref.quoteGasAdjusted,\n    route = _ref.route,\n    routeString = _ref.routeString,\n    estimatedGasUsed = _ref.estimatedGasUsed,\n    estimatedGasUsedQuoteToken = _ref.estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD = _ref.estimatedGasUsedUSD,\n    gasPriceWei = _ref.gasPriceWei,\n    methodParameters = _ref.methodParameters,\n    blockNumber = _ref.blockNumber,\n    _ref$trade = _ref.trade,\n    tradeType = _ref$trade.tradeType,\n    inputAmount = _ref$trade.inputAmount,\n    outputAmount = _ref$trade.outputAmount;\n  var routeResponse = [];\n  var _iterator = _createForOfIteratorHelper(route),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var subRoute = _step.value;\n      var _amount = subRoute.amount,\n        _quote = subRoute.quote,\n        tokenPath = subRoute.tokenPath;\n      if (subRoute.protocol === Protocol.V3) {\n        var pools = subRoute.route.pools;\n        var curRoute = [];\n        for (var i = 0; i < pools.length; i++) {\n          var nextPool = pools[i];\n          var tokenIn = tokenPath[i];\n          var tokenOut = tokenPath[i + 1];\n          var edgeAmountIn = undefined;\n          if (i === 0) {\n            edgeAmountIn = isExactInput(tradeType) ? _amount.quotient.toString() : _quote.quotient.toString();\n          }\n          var edgeAmountOut = undefined;\n          if (i === pools.length - 1) {\n            edgeAmountOut = isExactInput(tradeType) ? _quote.quotient.toString() : _amount.quotient.toString();\n          }\n          curRoute.push({\n            type: 'v3-pool',\n            tokenIn: {\n              chainId: tokenIn.chainId,\n              decimals: tokenIn.decimals,\n              address: tokenIn.address,\n              symbol: tokenIn.symbol\n            },\n            tokenOut: {\n              chainId: tokenOut.chainId,\n              decimals: tokenOut.decimals,\n              address: tokenOut.address,\n              symbol: tokenOut.symbol\n            },\n            fee: nextPool.fee.toString(),\n            liquidity: nextPool.liquidity.toString(),\n            sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n            tickCurrent: nextPool.tickCurrent.toString(),\n            amountIn: edgeAmountIn,\n            amountOut: edgeAmountOut\n          });\n        }\n        routeResponse.push(curRoute);\n      } else if (subRoute.protocol === Protocol.V2) {\n        var _pools = subRoute.route.pairs;\n        var _curRoute = [];\n        for (var _i = 0; _i < _pools.length; _i++) {\n          var _nextPool = _pools[_i];\n          var _tokenIn = tokenPath[_i];\n          var _tokenOut = tokenPath[_i + 1];\n          var _edgeAmountIn = undefined;\n          if (_i === 0) {\n            _edgeAmountIn = isExactInput(tradeType) ? _amount.quotient.toString() : _quote.quotient.toString();\n          }\n          var _edgeAmountOut = undefined;\n          if (_i === _pools.length - 1) {\n            _edgeAmountOut = isExactInput(tradeType) ? _quote.quotient.toString() : _amount.quotient.toString();\n          }\n          var reserve0 = _nextPool.reserve0;\n          var reserve1 = _nextPool.reserve1;\n          _curRoute.push({\n            type: 'v2-pool',\n            tokenIn: {\n              chainId: _tokenIn.chainId,\n              decimals: _tokenIn.decimals,\n              address: _tokenIn.address,\n              symbol: _tokenIn.symbol\n            },\n            tokenOut: {\n              chainId: _tokenOut.chainId,\n              decimals: _tokenOut.decimals,\n              address: _tokenOut.address,\n              symbol: _tokenOut.symbol\n            },\n            reserve0: {\n              token: {\n                chainId: reserve0.currency.wrapped.chainId,\n                decimals: reserve0.currency.wrapped.decimals,\n                address: reserve0.currency.wrapped.address,\n                symbol: reserve0.currency.wrapped.symbol\n              },\n              quotient: reserve0.quotient.toString()\n            },\n            reserve1: {\n              token: {\n                chainId: reserve1.currency.wrapped.chainId,\n                decimals: reserve1.currency.wrapped.decimals,\n                address: reserve1.currency.wrapped.address,\n                symbol: reserve1.currency.wrapped.symbol\n              },\n              quotient: reserve1.quotient.toString()\n            },\n            amountIn: _edgeAmountIn,\n            amountOut: _edgeAmountOut\n          });\n        }\n        routeResponse.push(_curRoute);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var amount = isExactInput(tradeType) ? inputAmount : outputAmount;\n  return {\n    state: QuoteState.SUCCESS,\n    data: {\n      methodParameters: methodParameters,\n      blockNumber: blockNumber.toString(),\n      amount: amount.quotient.toString(),\n      amountDecimals: amount.toExact(),\n      quote: quote.quotient.toString(),\n      quoteDecimals: quote.toExact(),\n      quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n      quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n      gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n      gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n      gasUseEstimate: estimatedGasUsed.toString(),\n      gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n      gasPriceWei: gasPriceWei.toString(),\n      route: routeResponse,\n      routeString: routeString\n    }\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar AUTO_ROUTER_SUPPORTED_CHAINS = Object.values(ChainId).filter(function (chainId) {\n  return Number.isInteger(chainId);\n});\nfunction isAutoRouterSupportedChain(chainId) {\n  return Boolean(chainId && AUTO_ROUTER_SUPPORTED_CHAINS.includes(chainId));\n}\n\n/** A cache of AlphaRouters, which must be initialized to a specific chain/provider. */\nvar routersCache = new WeakMap();\nfunction getRouter(chainId, provider) {\n  var routers = routersCache.get(provider) || {};\n  var cached = routers[chainId];\n  if (cached) return cached;\n\n  // V2 is unsupported for chains other than mainnet.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, exporting an enum of supported v2 chains for clarity.\n  var v2SubgraphProvider;\n  if (chainId !== ChainId.FUJI) {\n    v2SubgraphProvider = new StaticV2SubgraphProvider(chainId);\n  }\n\n  // V3 computes on-chain, so the quoter must have gas limits appropriate to the provider.\n  // Most defaults are fine, but polygon needs a lower gas limit.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, possibly making this easier to modify\n  // (eg allowing configuration without an instance to avoid duplicating multicall2Provider).\n  var onChainQuoteProvider;\n  var multicall2Provider;\n  // if ([ChainId.POLYGON, ChainId.POLYGON_MUMBAI].includes(chainId)) {\n  //   multicall2Provider = new UniswapMulticallProvider(chainId, provider, 375_000)\n  //   // See https://github.com/Uniswap/smart-order-router/blob/98c58bdee9981fd9ffac9e7d7a97b18302d5f77a/src/routers/alpha-router/alpha-router.ts#L464-L487\n  //   onChainQuoteProvider = new OnChainQuoteProvider(\n  //     chainId,\n  //     provider,\n  //     multicall2Provider,\n  //     {\n  //       retries: 2,\n  //       minTimeout: 100,\n  //       maxTimeout: 1000,\n  //     },\n  //     {\n  //       multicallChunk: 10,\n  //       gasLimitPerCall: 5_000_000,\n  //       quoteMinSuccessRate: 0.1,\n  //     },\n  //     {\n  //       gasLimitOverride: 5_000_000,\n  //       multicallChunk: 5,\n  //     },\n  //     {\n  //       gasLimitOverride: 6_250_000,\n  //       multicallChunk: 4,\n  //     }\n  //   )\n  // }\n\n  var router = new AlphaRouter({\n    chainId: chainId,\n    provider: provider,\n    v2SubgraphProvider: v2SubgraphProvider,\n    multicall2Provider: multicall2Provider,\n    onChainQuoteProvider: onChainQuoteProvider\n  });\n  routers[chainId] = router;\n  routersCache.set(provider, routers);\n  return router;\n}\nfunction getQuoteResult(_x, _x2, _x3) {\n  return _getQuoteResult.apply(this, arguments);\n}\nfunction _getQuoteResult() {\n  _getQuoteResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, router, routerConfig) {\n    var tradeType, tokenIn, tokenOut, amountRaw, tokenInIsNative, tokenOutIsNative, currencyIn, currencyOut, baseCurrency, quoteCurrency, amount, route;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          tradeType = _ref.tradeType, tokenIn = _ref.tokenIn, tokenOut = _ref.tokenOut, amountRaw = _ref.amount;\n          tokenInIsNative = Object.values(SwapRouterNativeAssets).includes(tokenIn.address);\n          tokenOutIsNative = Object.values(SwapRouterNativeAssets).includes(tokenOut.address);\n          currencyIn = tokenInIsNative ? nativeOnChain(tokenIn.chainId) : new Token(tokenIn.chainId, tokenIn.address, tokenIn.decimals, tokenIn.symbol);\n          currencyOut = tokenOutIsNative ? nativeOnChain(tokenOut.chainId) : new Token(tokenOut.chainId, tokenOut.address, tokenOut.decimals, tokenOut.symbol);\n          baseCurrency = isExactInput(tradeType) ? currencyIn : currencyOut;\n          quoteCurrency = isExactInput(tradeType) ? currencyOut : currencyIn;\n          amount = CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(amountRaw !== null && amountRaw !== void 0 ? amountRaw : '1')); // a null amountRaw should initialize the route\n          _context.next = 10;\n          return router.route(amount, quoteCurrency, tradeType, /*swapConfig=*/undefined, routerConfig);\n        case 10:\n          route = _context.sent;\n          if (amountRaw) {\n            _context.next = 13;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: QuoteState.INITIALIZED\n          });\n        case 13:\n          if (route) {\n            _context.next = 15;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: QuoteState.NOT_FOUND\n          });\n        case 15:\n          return _context.abrupt(\"return\", transformSwapRouteToGetQuoteResult(_objectSpread(_objectSpread({}, route), {}, {\n            routeString: routeAmountsToString(route.route)\n          })));\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getQuoteResult.apply(this, arguments);\n}\nfunction getClientSideQuoteResult(_x4, _x5) {\n  return _getClientSideQuoteResult.apply(this, arguments);\n}\nfunction _getClientSideQuoteResult() {\n  _getClientSideQuoteResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, routerConfig) {\n    var tokenInAddress, tokenInChainId, tokenInDecimals, tokenInSymbol, tokenOutAddress, tokenOutChainId, tokenOutDecimals, tokenOutSymbol, amount, tradeType, provider, router;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tokenInAddress = _ref2.tokenInAddress, tokenInChainId = _ref2.tokenInChainId, tokenInDecimals = _ref2.tokenInDecimals, tokenInSymbol = _ref2.tokenInSymbol, tokenOutAddress = _ref2.tokenOutAddress, tokenOutChainId = _ref2.tokenOutChainId, tokenOutDecimals = _ref2.tokenOutDecimals, tokenOutSymbol = _ref2.tokenOutSymbol, amount = _ref2.amount, tradeType = _ref2.tradeType, provider = _ref2.provider;\n          if (isAutoRouterSupportedChain(tokenInChainId)) {\n            _context2.next = 3;\n            break;\n          }\n          throw new Error(\"Router does not support this token's chain (chainId: \".concat(tokenInChainId, \").\"));\n        case 3:\n          router = getRouter(tokenInChainId, provider);\n          return _context2.abrupt(\"return\", getQuoteResult({\n            tradeType: tradeType,\n            tokenIn: {\n              address: tokenInAddress,\n              chainId: tokenInChainId,\n              decimals: tokenInDecimals,\n              symbol: tokenInSymbol\n            },\n            tokenOut: {\n              address: tokenOutAddress,\n              chainId: tokenOutChainId,\n              decimals: tokenOutDecimals,\n              symbol: tokenOutSymbol\n            },\n            amount: amount\n          }, router, routerConfig));\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getClientSideQuoteResult.apply(this, arguments);\n}\n\nexport { getClientSideQuoteResult };\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_2.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, body, response, result, headers_1, status_1, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        body = createRequestBody_1.default(query, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            headers_1 = response.headers, status_1 = response.status;\n                            return [2 /*return*/, __assign(__assign({}, result), { headers: headers_1, status: status_1 })];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, resolvedDoc, body, response, result, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        resolvedDoc = resolveRequestDocument(document);\n                        body = createRequestBody_1.default(resolvedDoc, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status }), { query: resolvedDoc, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\n/**\n * todo\n */\nfunction rawRequest(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    if (typeof document === 'string')\n        return document;\n    return printer_1.print(document);\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientError = void 0;\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n            response: response,\n            request: request,\n        });\n        _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ClientError.prototype);\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extract_files_1 = require(\"extract-files\");\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n    return extract_files_1.isExtractableFile(value) ||\n        (value !== null && typeof value === 'object' && typeof value.pipe === 'function');\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables) {\n    var _a = extract_files_1.extractFiles({ query: query, variables: variables }, '', isExtractableFileEnhanced), clone = _a.clone, files = _a.files;\n    if (files.size === 0) {\n        return JSON.stringify(clone);\n    }\n    var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n    var form = new Form();\n    form.append('operations', JSON.stringify(clone));\n    var map = {};\n    var i = 0;\n    files.forEach(function (paths) {\n        map[++i] = paths;\n    });\n    form.append('map', JSON.stringify(map));\n    i = 0;\n    files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file);\n    });\n    return form;\n}\nexports.default = createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n"],"sourceRoot":""}